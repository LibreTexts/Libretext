##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
limit_req_zone $binary_remote_addr zone=reqlimit:10m rate=30r/m;
limit_conn_zone $binary_remote_addr zone=conLimit:10m;

server {
	#listen 80 default_server;
	#listen [::]:80 default_server;

	# SSL configuration
	#
	listen 443 ssl http2 default_server;
	listen [::]:443 ssl http2 default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782

	error_page 404 /Miscellaneous/404.html;
	root /home/hagnew/awesomefiles/public;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;


	server_name dynamic.libretexts.org;
	#enable after Aug 3

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
		include cors;
	}

	location /print {
        	limit_req zone=reqlimit burst=1;
		limit_conn conLimit 3;

		proxy_pass http://backend;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		include cors;

		deny 213.55.76.173;
	}
	#deny access to .htaccess files, if Apache's document root
	#concurs with nginx's one
	
	location ~ /\.ht {
		deny all;
	}

    ssl_certificate /etc/letsencrypt/live/dynamic.libretexts.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/dynamic.libretexts.org/privkey.pem; # managed by Certbot
}

upstream backend {
	server localhost:3001 max_conns=8;
}



# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 443 ssl;
#	listen [::]:443 ssl;
#
#	server_name static.libretexts.org;
#
#	root /var/public;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
