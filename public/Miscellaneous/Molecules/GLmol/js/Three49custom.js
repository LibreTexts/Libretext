if(!window.THREEloaded){window.THREEloaded=!0;var THREE=THREE||{REVISION:"49"};self.Int32Array||(self.Int32Array=Array,self.Float32Array=Array),function(){for(var e=0,t=["ms","moz","webkit","o"],r=0;r<t.length&&!window.requestAnimationFrame;++r)window.requestAnimationFrame=window[t[r]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[t[r]+"CancelAnimationFrame"]||window[t[r]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(t){var r=Date.now(),i=Math.max(0,16-(r-e)),n=window.setTimeout(function(){t(r+i)},i);return e=r+i,n}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(e){clearTimeout(e)})}(),THREE.Clock=function(e){this.autoStart=void 0===e||e,this.elapsedTime=this.oldTime=this.startTime=0,this.running=!1},THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now(),this.running=!0},THREE.Clock.prototype.stop=function(){this.getElapsedTime(),this.running=!1},THREE.Clock.prototype.getElapsedTime=function(){return this.elapsedTime=this.elapsedTime+this.getDelta()},THREE.Clock.prototype.getDelta=function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=Date.now();e=.001*(t-this.oldTime);this.oldTime=t,this.elapsedTime=this.elapsedTime+e}return e},THREE.Color=function(e){return void 0!==e&&this.setHex(e),this},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e){return this.r=e.r*e.r,this.g=e.g*e.g,this.b=e.b*e.b,this},copyLinearToGamma:function(e){return this.r=Math.sqrt(e.r),this.g=Math.sqrt(e.g),this.b=Math.sqrt(e.b),this},convertGammaToLinear:function(){var e=this.r,t=this.g,r=this.b;return this.r=e*e,this.g=t*t,this.b=r*r,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},setRGB:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSV:function(e,t,r){var i,n,o;if(0===r)this.r=this.g=this.b=0;else switch(n=6*e-(i=Math.floor(6*e)),e=r*(1-t),o=r*(1-t*n),t=r*(1-t*(1-n)),i){case 1:this.r=o,this.g=r,this.b=e;break;case 2:this.r=e,this.g=r,this.b=t;break;case 3:this.r=e,this.g=o,this.b=r;break;case 4:this.r=t,this.g=e,this.b=r;break;case 5:this.r=r,this.g=e,this.b=o;break;case 6:case 0:this.r=r,this.g=t,this.b=e}return this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},lerpSelf:function(e,t){return this.r=this.r+(e.r-this.r)*t,this.g=this.g+(e.g-this.g)*t,this.b=this.b+(e.b-this.b)*t,this},getHex:function(){return Math.floor(255*this.r)<<16^Math.floor(255*this.g)<<8^Math.floor(255*this.b)},getContextStyle:function(){return"rgb("+Math.floor(255*this.r)+","+Math.floor(255*this.g)+","+Math.floor(255*this.b)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){return this.x=e,this.y=t,this},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addSelf:function(e){return this.x=this.x+e.x,this.y=this.y+e.y,this},sub:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},subSelf:function(e){return this.x=this.x-e.x,this.y=this.y-e.y,this},multiplyScalar:function(e){return this.x=this.x*e,this.y=this.y*e,this},divideScalar:function(e){return e?(this.x=this.x/e,this.y=this.y/e):this.set(0,0),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x;return t*t+(e=this.y-e.y)*e},setLength:function(e){return this.normalize().multiplyScalar(e)},lerpSelf:function(e,t){return this.x=this.x+(e.x-this.x)*t,this.y=this.y+(e.y-this.y)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y},isZero:function(){return this.lengthSq()<1e-4},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(e,t,r){this.x=e||0,this.y=t||0,this.z=r||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,r){return this.x=e,this.y=t,this.z=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addSelf:function(e){return this.x=this.x+e.x,this.y=this.y+e.y,this.z=this.z+e.z,this},addScalar:function(e){return this.x=this.x+e,this.y=this.y+e,this.z=this.z+e,this},sub:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},subSelf:function(e){return this.x=this.x-e.x,this.y=this.y-e.y,this.z=this.z-e.z,this},multiply:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},multiplySelf:function(e){return this.x=this.x*e.x,this.y=this.y*e.y,this.z=this.z*e.z,this},multiplyScalar:function(e){return this.x=this.x*e,this.y=this.y*e,this.z=this.z*e,this},divideSelf:function(e){return this.x=this.x/e.x,this.y=this.y/e.y,this.z=this.z/e.z,this},divideScalar:function(e){return e?(this.x=this.x/e,this.y=this.y/e,this.z=this.z/e):this.z=this.y=this.x=0,this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.normalize().multiplyScalar(e)},lerpSelf:function(e,t){return this.x=this.x+(e.x-this.x)*t,this.y=this.y+(e.y-this.y)*t,this.z=this.z+(e.z-this.z)*t,this},cross:function(e,t){return this.x=e.y*t.z-e.z*t.y,this.y=e.z*t.x-e.x*t.z,this.z=e.x*t.y-e.y*t.x,this},crossSelf:function(e){var t=this.x,r=this.y,i=this.z;return this.x=r*e.z-i*e.y,this.y=i*e.x-t*e.z,this.z=t*e.y-r*e.x,this},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){return(new THREE.Vector3).sub(this,e).lengthSq()},getPositionFromMatrix:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},getRotationFromMatrix:function(e,t){var r=t?t.x:1,i=t?t.y:1,n=t?t.z:1,o=e.elements[0]/r,a=e.elements[4]/i,s=(r=e.elements[1]/r,i=e.elements[5]/i,e.elements[9]/n),l=e.elements[10]/n;return this.y=Math.asin(e.elements[8]/n),n=Math.cos(this.y),Math.abs(n)>1e-5?(this.x=Math.atan2(-s/n,l/n),this.z=Math.atan2(-a/n,o/n)):(this.x=0,this.z=Math.atan2(r,i)),this},getScaleFromMatrix:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),r=this.set(e.elements[4],e.elements[5],e.elements[6]).length();e=this.set(e.elements[8],e.elements[9],e.elements[10]).length();this.x=t,this.y=r,this.z=e},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},isZero:function(){return this.lengthSq()<1e-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(e,t,r,i){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==i?i:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,r,i){return this.x=e,this.y=t,this.z=r,this.w=i,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addSelf:function(e){return this.x=this.x+e.x,this.y=this.y+e.y,this.z=this.z+e.z,this.w=this.w+e.w,this},sub:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},subSelf:function(e){return this.x=this.x-e.x,this.y=this.y-e.y,this.z=this.z-e.z,this.w=this.w-e.w,this},multiplyScalar:function(e){return this.x=this.x*e,this.y=this.y*e,this.z=this.z*e,this.w=this.w*e,this},divideScalar:function(e){return e?(this.x=this.x/e,this.y=this.y/e,this.z=this.z/e,this.w=this.w/e):(this.z=this.y=this.x=0,this.w=1),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.normalize().multiplyScalar(e)},lerpSelf:function(e,t){return this.x=this.x+(e.x-this.x)*t,this.y=this.y+(e.y-this.y)*t,this.z=this.z+(e.z-this.z)*t,this.w=this.w+(e.w-this.w)*t,this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]},THREE.Frustum.prototype.setFromMatrix=function(e){var t,r=this.planes;e=(m=e.elements)[0];t=m[1];var i=m[2],n=m[3],o=m[4],a=m[5],s=m[6],l=m[7],h=m[8],c=m[9],f=m[10],u=m[11],d=m[12],E=m[13],p=m[14],m=m[15];for(r[0].set(n-e,l-o,u-h,m-d),r[1].set(n+e,l+o,u+h,m+d),r[2].set(n+t,l+a,u+c,m+E),r[3].set(n-t,l-a,u-c,m-E),r[4].set(n-i,l-s,u-f,m-p),r[5].set(n+i,l+s,u+f,m+p),e=0;e<6;e++)(t=r[e]).divideScalar(Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z))},THREE.Frustum.prototype.contains=function(e){for(var t=this.planes,r=(i=e.matrixWorld).elements,i=-e.geometry.boundingSphere.radius*i.getMaxScaleOnAxis(),n=0;n<6;n++)if((e=t[n].x*r[12]+t[n].y*r[13]+t[n].z*r[14]+t[n].w)<=i)return!1;return!0},THREE.Frustum.__v1=new THREE.Vector3,THREE.Ray=function(e,t){function r(e,t,r){return H.sub(r,e),E=H.dot(t),p=b.add(e,w.copy(t).multiplyScalar(E)),r.distanceTo(p)}function i(e,t,r,i){return H.sub(i,t),b.sub(r,t),w.sub(e,t),m=H.dot(H),v=H.dot(b),g=H.dot(w),T=b.dot(b),R=b.dot(w),_=(m*R-v*g)*(y=1/(m*T-v*v)),(x=(T*g-v*R)*y)>=0&&_>=0&&x+_<1}this.origin=e||new THREE.Vector3,this.direction=t||new THREE.Vector3;var n=1e-4;this.setPrecision=function(e){n=e};var o=new THREE.Vector3,a=new THREE.Vector3,s=new THREE.Vector3,l=new THREE.Vector3,h=new THREE.Vector3,c=new THREE.Vector3,f=new THREE.Vector3,u=new THREE.Vector3,d=new THREE.Vector3;this.intersectObject=function(e){var t,E=[];if(e instanceof THREE.Particle){if((p=r(this.origin,this.direction,e.matrixWorld.getPosition()))>e.scale.x)return[];t={distance:p,point:e.position,face:null,object:e},E.push(t)}else if(e instanceof THREE.Mesh){var p=r(this.origin,this.direction,e.matrixWorld.getPosition()),m=THREE.Frustum.__v1.set(e.matrixWorld.getColumnX().length(),e.matrixWorld.getColumnY().length(),e.matrixWorld.getColumnZ().length());if(p>e.geometry.boundingSphere.radius*Math.max(m.x,Math.max(m.y,m.z)))return E;var v,g,T,R=e.geometry,y=R.vertices;for(e.matrixRotationWorld.extractRotation(e.matrixWorld),p=0,m=R.faces.length;p<m;p++)t=R.faces[p],h.copy(this.origin),c.copy(this.direction),T=e.matrixWorld,f=T.multiplyVector3(f.copy(t.centroid)).subSelf(h),u=e.matrixRotationWorld.multiplyVector3(u.copy(t.normal)),v=c.dot(u),Math.abs(v)<n||(g=u.dot(f)/v)<0||!e.doubleSided&&!(e.flipSided?v>0:v<0)||(d.add(h,c.multiplyScalar(g)),t instanceof THREE.Face3?(o=T.multiplyVector3(o.copy(y[t.a])),a=T.multiplyVector3(a.copy(y[t.b])),s=T.multiplyVector3(s.copy(y[t.c])),i(d,o,a,s)&&(t={distance:h.distanceTo(d),point:d.clone(),face:t,object:e},E.push(t))):t instanceof THREE.Face4&&(o=T.multiplyVector3(o.copy(y[t.a])),a=T.multiplyVector3(a.copy(y[t.b])),s=T.multiplyVector3(s.copy(y[t.c])),l=T.multiplyVector3(l.copy(y[t.d])),(i(d,o,a,l)||i(d,a,s,l))&&(t={distance:h.distanceTo(d),point:d.clone(),face:t,object:e},E.push(t))))}return E},this.intersectObjects=function(e){for(var t=[],r=0,i=e.length;r<i;r++)Array.prototype.push.apply(t,this.intersectObject(e[r]));return t.sort(function(e,t){return e.distance-t.distance}),t};var E,p,m,v,g,T,R,y,x,_,H=new THREE.Vector3,b=new THREE.Vector3,w=new THREE.Vector3},THREE.Rectangle=function(){function e(){o=i-t,a=n-r}var t,r,i,n,o,a,s=!0;this.getX=function(){return t},this.getY=function(){return r},this.getWidth=function(){return o},this.getHeight=function(){return a},this.getLeft=function(){return t},this.getTop=function(){return r},this.getRight=function(){return i},this.getBottom=function(){return n},this.set=function(o,a,l,h){s=!1,t=o,r=a,i=l,n=h,e()},this.addPoint=function(o,a){s?(s=!1,t=o,r=a,i=o,n=a):(t=t<o?t:o,r=r<a?r:a,i=i>o?i:o,n=n>a?n:a),e()},this.add3Points=function(o,a,l,h,c,f){s?(s=!1,t=o<l?o<c?o:c:l<c?l:c,r=a<h?a<f?a:f:h<f?h:f,i=o>l?o>c?o:c:l>c?l:c,n=a>h?a>f?a:f:h>f?h:f):(t=o<l?o<c?o<t?o:t:c<t?c:t:l<c?l<t?l:t:c<t?c:t,r=a<h?a<f?a<r?a:r:f<r?f:r:h<f?h<r?h:r:f<r?f:r,i=o>l?o>c?o>i?o:i:c>i?c:i:l>c?l>i?l:i:c>i?c:i,n=a>h?a>f?a>n?a:n:f>n?f:n:h>f?h>n?h:n:f>n?f:n),e()},this.addRectangle=function(o){s?(s=!1,t=o.getLeft(),r=o.getTop(),i=o.getRight(),n=o.getBottom()):(t=t<o.getLeft()?t:o.getLeft(),r=r<o.getTop()?r:o.getTop(),i=i>o.getRight()?i:o.getRight(),n=n>o.getBottom()?n:o.getBottom()),e()},this.inflate=function(o){t-=o,r-=o,i+=o,n+=o,e()},this.minSelf=function(o){t=t>o.getLeft()?t:o.getLeft(),r=r>o.getTop()?r:o.getTop(),i=i<o.getRight()?i:o.getRight(),n=n<o.getBottom()?n:o.getBottom(),e()},this.intersects=function(e){return!(i<e.getLeft()||t>e.getRight()||n<e.getTop()||r>e.getBottom())},this.empty=function(){s=!0,n=i=r=t=0,e()},this.isEmpty=function(){return s}},THREE.Math={clamp:function(e,t,r){return e<t?t:e>r?r:e},clampBottom:function(e,t){return e<t?t:e},mapLinear:function(e,t,r,i,n){return i+(e-t)*(n-i)/(r-t)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return e<0?-1:e>0?1:0}},THREE.Matrix3=function(){this.elements=new Float32Array(9)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,getInverse:function(e){e=(h=e.elements)[10]*h[5]-h[6]*h[9];var t=-h[10]*h[1]+h[2]*h[9],r=h[6]*h[1]-h[2]*h[5],i=-h[10]*h[4]+h[6]*h[8],n=h[10]*h[0]-h[2]*h[8],o=-h[6]*h[0]+h[2]*h[4],a=h[9]*h[4]-h[5]*h[8],s=-h[9]*h[0]+h[1]*h[8],l=h[5]*h[0]-h[1]*h[4];0===(h=h[0]*e+h[1]*i+h[2]*a)&&console.warn("Matrix3.getInverse(): determinant == 0");var h=1/h,c=this.elements;return c[0]=h*e,c[1]=h*t,c[2]=h*r,c[3]=h*i,c[4]=h*n,c[5]=h*o,c[6]=h*a,c[7]=h*s,c[8]=h*l,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},transposeIntoArray:function(e){var t=this.m;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}},THREE.Matrix4=function(e,t,r,i,n,o,a,s,l,h,c,f,u,d,E,p){this.elements=new Float32Array(16),this.set(void 0!==e?e:1,t||0,r||0,i||0,n||0,void 0!==o?o:1,a||0,s||0,l||0,h||0,void 0!==c?c:1,f||0,u||0,d||0,E||0,void 0!==p?p:1)},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,r,i,n,o,a,s,l,h,c,f,u,d,E,p){var m=this.elements;return m[0]=e,m[4]=t,m[8]=r,m[12]=i,m[1]=n,m[5]=o,m[9]=a,m[13]=s,m[2]=l,m[6]=h,m[10]=c,m[14]=f,m[3]=u,m[7]=d,m[11]=E,m[15]=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){return e=e.elements,this.set(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15]),this},lookAt:function(e,t,r){var i=this.elements,n=THREE.Matrix4.__v1,o=THREE.Matrix4.__v2,a=THREE.Matrix4.__v3;return a.sub(e,t).normalize(),0===a.length()&&(a.z=1),n.cross(r,a).normalize(),0===n.length()&&(a.x=a.x+1e-4,n.cross(r,a).normalize()),o.cross(a,n),i[0]=n.x,i[4]=o.x,i[8]=a.x,i[1]=n.y,i[5]=o.y,i[9]=a.y,i[2]=n.z,i[6]=o.z,i[10]=a.z,this},multiply:function(e,t){var r=e.elements,i=t.elements,n=this.elements,o=r[0],a=r[4],s=r[8],l=r[12],h=r[1],c=r[5],f=r[9],u=r[13],d=r[2],E=r[6],p=r[10],m=r[14],v=r[3],g=r[7],T=r[11],R=(r=r[15],i[0]),y=i[4],x=i[8],_=i[12],H=i[1],b=i[5],w=i[9],S=i[13],M=i[2],A=i[6],C=i[10],L=i[14],D=i[3],F=i[7],P=i[11];i=i[15];return n[0]=o*R+a*H+s*M+l*D,n[4]=o*y+a*b+s*A+l*F,n[8]=o*x+a*w+s*C+l*P,n[12]=o*_+a*S+s*L+l*i,n[1]=h*R+c*H+f*M+u*D,n[5]=h*y+c*b+f*A+u*F,n[9]=h*x+c*w+f*C+u*P,n[13]=h*_+c*S+f*L+u*i,n[2]=d*R+E*H+p*M+m*D,n[6]=d*y+E*b+p*A+m*F,n[10]=d*x+E*w+p*C+m*P,n[14]=d*_+E*S+p*L+m*i,n[3]=v*R+g*H+T*M+r*D,n[7]=v*y+g*b+T*A+r*F,n[11]=v*x+g*w+T*C+r*P,n[15]=v*_+g*S+T*L+r*i,this},multiplySelf:function(e){return this.multiply(this,e)},multiplyToArray:function(e,t,r){var i=this.elements;return this.multiply(e,t),r[0]=i[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],r[9]=i[9],r[10]=i[10],r[11]=i[11],r[12]=i[12],r[13]=i[13],r[14]=i[14],r[15]=i[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]=t[0]*e,t[4]=t[4]*e,t[8]=t[8]*e,t[12]=t[12]*e,t[1]=t[1]*e,t[5]=t[5]*e,t[9]=t[9]*e,t[13]=t[13]*e,t[2]=t[2]*e,t[6]=t[6]*e,t[10]=t[10]*e,t[14]=t[14]*e,t[3]=t[3]*e,t[7]=t[7]*e,t[11]=t[11]*e,t[15]=t[15]*e,this},multiplyVector3:function(e){var t=this.elements,r=e.x,i=e.y,n=e.z,o=1/(t[3]*r+t[7]*i+t[11]*n+t[15]);return e.x=(t[0]*r+t[4]*i+t[8]*n+t[12])*o,e.y=(t[1]*r+t[5]*i+t[9]*n+t[13])*o,e.z=(t[2]*r+t[6]*i+t[10]*n+t[14])*o,e},multiplyVector4:function(e){var t=this.elements,r=e.x,i=e.y,n=e.z,o=e.w;return e.x=t[0]*r+t[4]*i+t[8]*n+t[12]*o,e.y=t[1]*r+t[5]*i+t[9]*n+t[13]*o,e.z=t[2]*r+t[6]*i+t[10]*n+t[14]*o,e.w=t[3]*r+t[7]*i+t[11]*n+t[15]*o,e},rotateAxis:function(e){var t=this.elements,r=e.x,i=e.y,n=e.z;return e.x=r*t[0]+i*t[4]+n*t[8],e.y=r*t[1]+i*t[5]+n*t[9],e.z=r*t[2]+i*t[6]+n*t[10],e.normalize(),e},crossVector:function(e){var t=this.elements,r=new THREE.Vector4;return r.x=t[0]*e.x+t[4]*e.y+t[8]*e.z+t[12]*e.w,r.y=t[1]*e.x+t[5]*e.y+t[9]*e.z+t[13]*e.w,r.z=t[2]*e.x+t[6]*e.y+t[10]*e.z+t[14]*e.w,r.w=e.w?t[3]*e.x+t[7]*e.y+t[11]*e.z+t[15]*e.w:1,r},determinant:function(){var e,t=(e=this.elements)[0],r=e[4],i=e[8],n=e[12],o=e[1],a=e[5],s=e[9],l=e[13],h=e[2],c=e[6],f=e[10],u=e[14],d=e[3],E=e[7],p=e[11];return n*s*c*d-i*l*c*d-n*a*f*d+r*l*f*d+i*a*u*d-r*s*u*d-n*s*h*E+i*l*h*E+n*o*f*E-t*l*f*E-i*o*u*E+t*s*u*E+n*a*h*p-r*l*h*p-n*o*c*p+t*l*c*p+r*o*u*p-t*a*u*p-i*a*h*(e=e[15])+r*s*h*e+i*o*c*e-t*s*c*e-r*o*f*e+t*a*f*e},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},flattenToArrayOffset:function(e,t){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e},getPosition:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[12],e[13],e[14])},setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getColumnX:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[0],e[1],e[2])},getColumnY:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[4],e[5],e[6])},getColumnZ:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[8],e[9],e[10])},getInverse:function(e){var t=this.elements,r=(v=e.elements)[0],i=v[4],n=v[8],o=v[12],a=v[1],s=v[5],l=v[9],h=v[13],c=v[2],f=v[6],u=v[10],d=v[14],E=v[3],p=v[7],m=v[11],v=v[15];return t[0]=l*d*p-h*u*p+h*f*m-s*d*m-l*f*v+s*u*v,t[4]=o*u*p-n*d*p-o*f*m+i*d*m+n*f*v-i*u*v,t[8]=n*h*p-o*l*p+o*s*m-i*h*m-n*s*v+i*l*v,t[12]=o*l*f-n*h*f-o*s*u+i*h*u+n*s*d-i*l*d,t[1]=h*u*E-l*d*E-h*c*m+a*d*m+l*c*v-a*u*v,t[5]=n*d*E-o*u*E+o*c*m-r*d*m-n*c*v+r*u*v,t[9]=o*l*E-n*h*E-o*a*m+r*h*m+n*a*v-r*l*v,t[13]=n*h*c-o*l*c+o*a*u-r*h*u-n*a*d+r*l*d,t[2]=s*d*E-h*f*E+h*c*p-a*d*p-s*c*v+a*f*v,t[6]=o*f*E-i*d*E-o*c*p+r*d*p+i*c*v-r*f*v,t[10]=i*h*E-o*s*E+o*a*p-r*h*p-i*a*v+r*s*v,t[14]=o*s*c-i*h*c-o*a*f+r*h*f+i*a*d-r*s*d,t[3]=l*f*E-s*u*E-l*c*p+a*u*p+s*c*m-a*f*m,t[7]=i*u*E-n*f*E+n*c*p-r*u*p-i*c*m+r*f*m,t[11]=n*s*E-i*l*E-n*a*p+r*l*p+i*a*m-r*s*m,t[15]=i*l*c-n*s*c+n*a*f-r*l*f-i*a*u+r*s*u,this.multiplyScalar(1/e.determinant()),this},setRotationFromEuler:function(e,t){var r=this.elements,i=e.x,n=e.y,o=e.z,a=Math.cos(i),s=(i=Math.sin(i),Math.cos(n)),l=(n=Math.sin(n),Math.cos(o));o=Math.sin(o);switch(t){case"YXZ":var h=s*l,c=s*o,f=n*l,u=n*o;r[0]=h+u*i,r[4]=f*i-c,r[8]=a*n,r[1]=a*o,r[5]=a*l,r[9]=-i,r[2]=c*i-f,r[6]=u+h*i,r[10]=a*s;break;case"ZXY":h=s*l,c=s*o,f=n*l,u=n*o,r[0]=h-u*i,r[4]=-a*o,r[8]=f+c*i,r[1]=c+f*i,r[5]=a*l,r[9]=u-h*i,r[2]=-a*n,r[6]=i,r[10]=a*s;break;case"ZYX":h=a*l,c=a*o,f=i*l,u=i*o,r[0]=s*l,r[4]=f*n-c,r[8]=h*n+u,r[1]=s*o,r[5]=u*n+h,r[9]=c*n-f,r[2]=-n,r[6]=i*s,r[10]=a*s;break;case"YZX":h=a*s,c=a*n,f=i*s,u=i*n,r[0]=s*l,r[4]=u-h*o,r[8]=f*o+c,r[1]=o,r[5]=a*l,r[9]=-i*l,r[2]=-n*l,r[6]=c*o+f,r[10]=h-u*o;break;case"XZY":h=a*s,c=a*n,f=i*s,u=i*n,r[0]=s*l,r[4]=-o,r[8]=n*l,r[1]=h*o+u,r[5]=a*l,r[9]=c*o-f,r[2]=f*o-c,r[6]=i*l,r[10]=u*o+h;break;default:h=a*l,c=a*o,f=i*l,u=i*o,r[0]=s*l,r[4]=-s*o,r[8]=n,r[1]=c+f*n,r[5]=h-u*n,r[9]=-i*s,r[2]=u-h*n,r[6]=f+c*n,r[10]=a*s}return this},setRotationFromQuaternion:function(e){var t=this.elements,r=e.x,i=e.y,n=e.z,o=e.w,a=n+n,s=(e=r*(h=r+r),r*(c=i+i)),l=(r=r*a,i*c),h=(i=i*a,n=n*a,o*h),c=o*c;o*=a;return t[0]=1-(l+n),t[4]=s-o,t[8]=r+c,t[1]=s+o,t[5]=1-(e+n),t[9]=i-h,t[2]=r-c,t[6]=i+h,t[10]=1-(e+l),this},compose:function(e,t,r){var i=this.elements,n=THREE.Matrix4.__m1,o=THREE.Matrix4.__m2;return n.identity(),n.setRotationFromQuaternion(t),o.makeScale(r.x,r.y,r.z),this.multiply(n,o),i[12]=e.x,i[13]=e.y,i[14]=e.z,this},decompose:function(e,t,r){var i=this.elements,n=THREE.Matrix4.__v1,o=THREE.Matrix4.__v2,a=THREE.Matrix4.__v3;return n.set(i[0],i[1],i[2]),o.set(i[4],i[5],i[6]),a.set(i[8],i[9],i[10]),e=e instanceof THREE.Vector3?e:new THREE.Vector3,t=t instanceof THREE.Quaternion?t:new THREE.Quaternion,(r=r instanceof THREE.Vector3?r:new THREE.Vector3).x=n.length(),r.y=o.length(),r.z=a.length(),e.x=i[12],e.y=i[13],e.z=i[14],(i=THREE.Matrix4.__m1).copy(this),i.elements[0]=i.elements[0]/r.x,i.elements[1]=i.elements[1]/r.x,i.elements[2]=i.elements[2]/r.x,i.elements[4]=i.elements[4]/r.y,i.elements[5]=i.elements[5]/r.y,i.elements[6]=i.elements[6]/r.y,i.elements[8]=i.elements[8]/r.z,i.elements[9]=i.elements[9]/r.z,i.elements[10]=i.elements[10]/r.z,t.setFromRotationMatrix(i),[e,t,r]},extractPosition:function(e){var t=this.elements;e=e.elements;return t[12]=e[12],t[13]=e[13],t[14]=e[14],this},extractRotation:function(e){var t=this.elements,r=(e=e.elements,1/(n=THREE.Matrix4.__v1).set(e[0],e[1],e[2]).length()),i=1/n.set(e[4],e[5],e[6]).length(),n=1/n.set(e[8],e[9],e[10]).length();return t[0]=e[0]*r,t[1]=e[1]*r,t[2]=e[2]*r,t[4]=e[4]*i,t[5]=e[5]*i,t[6]=e[6]*i,t[8]=e[8]*n,t[9]=e[9]*n,t[10]=e[10]*n,this},translate:function(e){var t=this.elements,r=e.x,i=e.y;e=e.z;return t[12]=t[0]*r+t[4]*i+t[8]*e+t[12],t[13]=t[1]*r+t[5]*i+t[9]*e+t[13],t[14]=t[2]*r+t[6]*i+t[10]*e+t[14],t[15]=t[3]*r+t[7]*i+t[11]*e+t[15],this},rotateX:function(e){var t=this.elements,r=t[4],i=t[5],n=t[6],o=t[7],a=t[8],s=t[9],l=t[10],h=t[11],c=Math.cos(e);e=Math.sin(e);return t[4]=c*r+e*a,t[5]=c*i+e*s,t[6]=c*n+e*l,t[7]=c*o+e*h,t[8]=c*a-e*r,t[9]=c*s-e*i,t[10]=c*l-e*n,t[11]=c*h-e*o,this},rotateY:function(e){var t=this.elements,r=t[0],i=t[1],n=t[2],o=t[3],a=t[8],s=t[9],l=t[10],h=t[11],c=Math.cos(e);e=Math.sin(e);return t[0]=c*r-e*a,t[1]=c*i-e*s,t[2]=c*n-e*l,t[3]=c*o-e*h,t[8]=c*a+e*r,t[9]=c*s+e*i,t[10]=c*l+e*n,t[11]=c*h+e*o,this},rotateZ:function(e){var t=this.elements,r=t[0],i=t[1],n=t[2],o=t[3],a=t[4],s=t[5],l=t[6],h=t[7],c=Math.cos(e);e=Math.sin(e);return t[0]=c*r+e*a,t[1]=c*i+e*s,t[2]=c*n+e*l,t[3]=c*o+e*h,t[4]=c*a-e*r,t[5]=c*s-e*i,t[6]=c*l-e*n,t[7]=c*h-e*o,this},rotateByAxis:function(e,t){var r=this.elements;if(1===e.x&&0===e.y&&0===e.z)return this.rotateX(t);if(0===e.x&&1===e.y&&0===e.z)return this.rotateY(t);if(0===e.x&&0===e.y&&1===e.z)return this.rotateZ(t);var i=e.x,n=e.y,o=e.z,a=(n=n/(a=Math.sqrt(i*i+n*n+o*o)),o=o/a,(i=i/a)*i),s=n*n,l=o*o,h=i*n*(f=1-(E=Math.cos(t))),c=i*o*f,f=n*o*f,u=(i=i*(d=Math.sin(t)),n*d),d=o*d,E=(o=a+(1-a)*E,a=h+d,n=c-u,h=h-d,s=s+(1-s)*E,d=f+i,c=c+u,f=f-i,l=l+(1-l)*E,r[0]),p=(i=r[1],u=r[2],r[3]),m=r[4],v=r[5],g=r[6],T=r[7],R=r[8],y=r[9],x=r[10],_=r[11];return r[0]=o*E+a*m+n*R,r[1]=o*i+a*v+n*y,r[2]=o*u+a*g+n*x,r[3]=o*p+a*T+n*_,r[4]=h*E+s*m+d*R,r[5]=h*i+s*v+d*y,r[6]=h*u+s*g+d*x,r[7]=h*p+s*T+d*_,r[8]=c*E+f*m+l*R,r[9]=c*i+f*v+l*y,r[10]=c*u+f*g+l*x,r[11]=c*p+f*T+l*_,this},scale:function(e){var t=this.elements,r=e.x,i=e.y;e=e.z;return t[0]=t[0]*r,t[4]=t[4]*i,t[8]=t[8]*e,t[1]=t[1]*r,t[5]=t[5]*i,t[9]=t[9]*e,t[2]=t[2]*r,t[6]=t[6]*i,t[10]=t[10]*e,t[3]=t[3]*r,t[7]=t[7]*i,t[11]=t[11]*e,this},getMaxScaleOnAxis:function(){var e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],Math.max(e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10])))},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e);e=Math.sin(e);return this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e);e=Math.sin(e);return this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e);e=Math.sin(e);return this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var r=Math.cos(t),i=Math.sin(t),n=1-r,o=e.x,a=e.y,s=e.z,l=n*o,h=n*a;return this.set(l*o+r,l*a-i*s,l*s+i*a,0,l*a+i*s,h*a+r,h*s-i*o,0,l*s-i*a,h*s+i*o,n*s*s+r,0,0,0,0,1),this},makeScale:function(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this},makeFrustum:function(e,t,r,i,n,o){var a=this.elements;return a[0]=2*n/(t-e),a[4]=0,a[8]=(t+e)/(t-e),a[12]=0,a[1]=0,a[5]=2*n/(i-r),a[9]=(i+r)/(i-r),a[13]=0,a[2]=0,a[6]=0,a[10]=-(o+n)/(o-n),a[14]=-2*o*n/(o-n),a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(e,t,r,i){var n=-(e=r*Math.tan(e*Math.PI/360));return this.makeFrustum(n*t,e*t,n,e,r,i)},makeOrthographic:function(e,t,r,i,n,o){var a=this.elements,s=t-e,l=r-i,h=o-n;return a[0]=2/s,a[4]=0,a[8]=0,a[12]=-(t+e)/s,a[1]=0,a[5]=2/l,a[9]=0,a[13]=-(r+i)/l,a[2]=0,a[6]=0,a[10]=-2/h,a[14]=-(o+n)/h,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}},THREE.Matrix4.__v1=new THREE.Vector3,THREE.Matrix4.__v2=new THREE.Vector3,THREE.Matrix4.__v3=new THREE.Vector3,THREE.Matrix4.__m1=new THREE.Matrix4,THREE.Matrix4.__m2=new THREE.Matrix4,THREE.Object3D=function(){this.id=THREE.Object3DCount++,this.name="",this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this.rotation=new THREE.Vector3,this.eulerOrder="XYZ",this.scale=new THREE.Vector3(1,1,1),this.flipSided=this.doubleSided=!1,this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixRotationWorld=new THREE.Matrix4,this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0,this.quaternion=new THREE.Quaternion,this.useQuaternion=!1,this.boundRadius=0,this.boundRadiusScale=1,this.visible=!0,this.receiveShadow=this.castShadow=!1,this.frustumCulled=!0,this._vector=new THREE.Vector3},THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(e){this.matrix.multiply(e,this.matrix),this.scale.getScaleFromMatrix(this.matrix),this.rotation.getRotationFromMatrix(this.matrix,this.scale),this.position.getPositionFromMatrix(this.matrix)},translate:function(e,t){this.matrix.rotateAxis(t),this.position.addSelf(t.multiplyScalar(e))},translateX:function(e){this.translate(e,this._vector.set(1,0,0))},translateY:function(e){this.translate(e,this._vector.set(0,1,0))},translateZ:function(e){this.translate(e,this._vector.set(0,0,1))},lookAt:function(e){this.matrix.lookAt(e,this.position,this.up),this.rotationAutoUpdate&&this.rotation.getRotationFromMatrix(this.matrix)},add:function(e){if(e===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(e instanceof THREE.Object3D){void 0!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e);for(var t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__addObject(e)}},remove:function(e){var t=this.children.indexOf(e);if(-1!==t){for(e.parent=void 0,this.children.splice(t,1),t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__removeObject(e)}},getChildByName:function(e,t){var r,i,n;for(r=0,i=this.children.length;r<i;r++){if((n=this.children[r]).name===e)return n;if(t&&void 0!==(n=n.getChildByName(e,t)))return n}},updateMatrix:function(){this.matrix.setPosition(this.position),this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder),1===this.scale.x&&1===this.scale.y&&1===this.scale.z||(this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z))),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;t<r;t++)this.children[t].updateMatrixWorld(e)}},THREE.Object3DCount=0,THREE.Projector=function(){function e(){var e=p[a]=p[a]||new THREE.RenderableVertex;return a++,e}function t(e,t){return t.z-e.z}function r(e,t){var r=0,i=1,n=e.z+e.w,o=t.z+t.w,a=-e.z+e.w,s=-t.z+t.w;return n>=0&&o>=0&&a>=0&&s>=0||!(n<0&&o<0||a<0&&s<0)&&(n<0?r=Math.max(r,n/(n-o)):o<0&&(i=Math.min(i,n/(n-o))),a<0?r=Math.max(r,a/(a-s)):s<0&&(i=Math.min(i,a/(a-s))),!(i<r)&&(e.lerpSelf(t,r),t.lerpSelf(e,1-i),!0))}var i,n,o,a,s,l,h,c,f,u,d,E=[],p=[],m=[],v=[],g=[],T=[],R={objects:[],sprites:[],lights:[],elements:[]},y=new THREE.Vector3,x=new THREE.Vector4,_=new THREE.Matrix4,H=new THREE.Matrix4,b=new THREE.Frustum,w=new THREE.Vector4,S=new THREE.Vector4;this.projectVector=function(e,t){return t.matrixWorldInverse.getInverse(t.matrixWorld),_.multiply(t.projectionMatrix,t.matrixWorldInverse),_.multiplyVector3(e),e},this.unprojectVector=function(e,t){return t.projectionMatrixInverse.getInverse(t.projectionMatrix),_.multiply(t.matrixWorld,t.projectionMatrixInverse),_.multiplyVector3(e),e},this.pickingRay=function(e,t){var r;return e.z=-1,r=new THREE.Vector3(e.x,e.y,1),this.unprojectVector(e,t),this.unprojectVector(r,t),r.subSelf(e).normalize(),new THREE.Ray(e,r)},this.projectGraph=function(e,r){n=0,R.objects.length=0,R.sprites.length=0,R.lights.length=0;var o=function(e){if(!1!==e.visible){if((e instanceof THREE.Mesh||e instanceof THREE.Line)&&(!1===e.frustumCulled||b.contains(e))){y.copy(e.matrixWorld.getPosition()),_.multiplyVector3(y);var t=E[n]=E[n]||new THREE.RenderableObject;n++,(i=t).object=e,i.z=y.z,R.objects.push(i)}else e instanceof THREE.Light&&R.lights.push(e);t=0;for(var r=e.children.length;t<r;t++)o(e.children[t])}};return o(e),r&&R.objects.sort(t),R},this.projectScene=function(i,n,E){var y,M,A,C,L,D,F,P,U,z,B,N,V,O,I,k=n.near,W=n.far,G=!1;for(d=f=h=l=0,R.elements.length=0,void 0===n.parent&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),i.add(n)),i.updateMatrixWorld(),n.matrixWorldInverse.getInverse(n.matrixWorld),_.multiply(n.projectionMatrix,n.matrixWorldInverse),b.setFromMatrix(_),R=this.projectGraph(i,!1),i=0,y=R.objects.length;i<y;i++)if(z=(U=R.objects[i].object).matrixWorld,a=0,U instanceof THREE.Mesh){for(B=U.geometry,N=U.geometry.materials,C=B.vertices,V=B.faces,O=B.faceVertexUvs,B=U.matrixRotationWorld.extractRotation(z),M=0,A=C.length;M<A;M++)(o=e()).positionWorld.copy(C[M]),z.multiplyVector3(o.positionWorld),o.positionScreen.copy(o.positionWorld),_.multiplyVector4(o.positionScreen),o.positionScreen.x=o.positionScreen.x/o.positionScreen.w,o.positionScreen.y=o.positionScreen.y/o.positionScreen.w,o.visible=o.positionScreen.z>k&&o.positionScreen.z<W;for(C=0,M=V.length;C<M;C++){if((A=V[C])instanceof THREE.Face3){if(L=p[A.a],D=p[A.b],F=p[A.c],!(L.visible&&D.visible&&F.visible))continue;if(G=(F.positionScreen.x-L.positionScreen.x)*(D.positionScreen.y-L.positionScreen.y)-(F.positionScreen.y-L.positionScreen.y)*(D.positionScreen.x-L.positionScreen.x)<0,!U.doubleSided&&G==U.flipSided)continue;P=m[l]=m[l]||new THREE.RenderableFace3,l++,(s=P).v1.copy(L),s.v2.copy(D),s.v3.copy(F)}else if(A instanceof THREE.Face4){if(L=p[A.a],D=p[A.b],F=p[A.c],P=p[A.d],!(L.visible&&D.visible&&F.visible&&P.visible))continue;if(G=(P.positionScreen.x-L.positionScreen.x)*(D.positionScreen.y-L.positionScreen.y)-(P.positionScreen.y-L.positionScreen.y)*(D.positionScreen.x-L.positionScreen.x)<0||(D.positionScreen.x-F.positionScreen.x)*(P.positionScreen.y-F.positionScreen.y)-(D.positionScreen.y-F.positionScreen.y)*(P.positionScreen.x-F.positionScreen.x)<0,!U.doubleSided&&G==U.flipSided)continue;I=v[h]=v[h]||new THREE.RenderableFace4,h++,(s=I).v1.copy(L),s.v2.copy(D),s.v3.copy(F),s.v4.copy(P)}for(s.normalWorld.copy(A.normal),!G&&(U.flipSided||U.doubleSided)&&s.normalWorld.negate(),B.multiplyVector3(s.normalWorld),s.centroidWorld.copy(A.centroid),z.multiplyVector3(s.centroidWorld),s.centroidScreen.copy(s.centroidWorld),_.multiplyVector3(s.centroidScreen),L=0,D=(F=A.vertexNormals).length;L<D;L++)(P=s.vertexNormalsWorld[L]).copy(F[L]),!G&&(U.flipSided||U.doubleSided)&&P.negate(),B.multiplyVector3(P);for(L=0,D=O.length;L<D;L++)if(I=O[L][C])for(F=0,P=I.length;F<P;F++)s.uvs[L][F]=I[F];s.material=U.material,s.faceMaterial=null!==A.materialIndex?N[A.materialIndex]:null,s.z=s.centroidScreen.z,R.elements.push(s)}}else if(U instanceof THREE.Line)for(H.multiply(_,z),C=U.geometry.vertices,(L=e()).positionScreen.copy(C[0]),H.multiplyVector4(L.positionScreen),z=U.type===THREE.LinePieces?2:1,M=1,A=C.length;M<A;M++)(L=e()).positionScreen.copy(C[M]),H.multiplyVector4(L.positionScreen),(M+1)%z>0||(D=p[a-2],w.copy(L.positionScreen),S.copy(D.positionScreen),r(w,S)&&(w.multiplyScalar(1/w.w),S.multiplyScalar(1/S.w),N=g[f]=g[f]||new THREE.RenderableLine,f++,(c=N).v1.positionScreen.copy(w),c.v2.positionScreen.copy(S),c.z=Math.max(w.z,S.z),c.material=U.material,R.elements.push(c)));for(i=0,y=R.sprites.length;i<y;i++)z=(U=R.sprites[i].object).matrixWorld,U instanceof THREE.Particle&&(x.set(z.elements[12],z.elements[13],z.elements[14],1),_.multiplyVector4(x),x.z=x.z/x.w,x.z>0&&x.z<1&&(k=T[d]=T[d]||new THREE.RenderableParticle,d++,(u=k).x=x.x/x.w,u.y=x.y/x.w,u.z=x.z,u.rotation=U.rotation.z,u.scale.x=U.scale.x*Math.abs(u.x-(x.x+n.projectionMatrix.elements[0])/(x.w+n.projectionMatrix.elements[12])),u.scale.y=U.scale.y*Math.abs(u.y-(x.y+n.projectionMatrix.elements[5])/(x.w+n.projectionMatrix.elements[13])),u.material=U.material,R.elements.push(u)));return E&&R.elements.sort(t),R}},THREE.Quaternion=function(e,t,r,i){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==i?i:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(e,t,r,i){return this.x=e,this.y=t,this.z=r,this.w=i,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},setFromEuler:function(e){var t=Math.PI/360,r=e.x*t,i=e.y*t,n=e.z*t,o=(e=Math.cos(i),i=Math.sin(i),t=Math.cos(-n),n=Math.sin(-n),Math.cos(r)),a=(r=Math.sin(r),e*t),s=i*n;return this.w=a*o-s*r,this.x=a*r+s*o,this.y=i*t*o+e*n*r,this.z=e*n*o-i*t*r,this},setFromAxisAngle:function(e,t){var r=t/2,i=Math.sin(r);return this.x=e.x*i,this.y=e.y*i,this.z=e.z*i,this.w=Math.cos(r),this},setFromRotationMatrix:function(e){var t=Math.pow(e.determinant(),1/3);return this.w=Math.sqrt(Math.max(0,t+e.elements[0]+e.elements[5]+e.elements[10]))/2,this.x=Math.sqrt(Math.max(0,t+e.elements[0]-e.elements[5]-e.elements[10]))/2,this.y=Math.sqrt(Math.max(0,t-e.elements[0]+e.elements[5]-e.elements[10]))/2,this.z=Math.sqrt(Math.max(0,t-e.elements[0]-e.elements[5]+e.elements[10]))/2,this.x=e.elements[6]-e.elements[9]<0?-Math.abs(this.x):Math.abs(this.x),this.y=e.elements[8]-e.elements[2]<0?-Math.abs(this.y):Math.abs(this.y),this.z=e.elements[1]-e.elements[4]<0?-Math.abs(this.z):Math.abs(this.z),this.normalize(),this},calculateW:function(){return this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z)),this},inverse:function(){return this.x=-1*this.x,this.y=-1*this.y,this.z=-1*this.z,this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var e=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return 0===e?this.w=this.z=this.y=this.x=0:(e=1/e,this.x=this.x*e,this.y=this.y*e,this.z=this.z*e,this.w=this.w*e),this},multiply:function(e,t){return this.x=e.x*t.w+e.y*t.z-e.z*t.y+e.w*t.x,this.y=-e.x*t.z+e.y*t.w+e.z*t.x+e.w*t.y,this.z=e.x*t.y-e.y*t.x+e.z*t.w+e.w*t.z,this.w=-e.x*t.x-e.y*t.y-e.z*t.z+e.w*t.w,this},multiplySelf:function(e){var t=this.x,r=this.y,i=this.z,n=this.w,o=e.x,a=e.y,s=e.z;e=e.w;return this.x=t*e+n*o+r*s-i*a,this.y=r*e+n*a+i*o-t*s,this.z=i*e+n*s+t*a-r*o,this.w=n*e-t*o-r*a-i*s,this},multiplyVector3:function(e,t){t||(t=e);var r=e.x,i=e.y,n=e.z,o=this.x,a=this.y,s=this.z,l=this.w,h=l*r+a*n-s*i,c=l*i+s*r-o*n,f=l*n+o*i-a*r;r=-o*r-a*i-s*n;return t.x=h*l+r*-o+c*-s-f*-a,t.y=c*l+r*-a+f*-o-h*-s,t.z=f*l+r*-s+h*-a-c*-o,t},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}},THREE.Quaternion.slerp=function(e,t,r,i){if((o=e.w*t.w+e.x*t.x+e.y*t.y+e.z*t.z)<0?(r.w=-t.w,r.x=-t.x,r.y=-t.y,r.z=-t.z,o=-o):r.copy(t),Math.abs(o)>=1)return r.w=e.w,r.x=e.x,r.y=e.y,r.z=e.z,r;var n=Math.acos(o),o=Math.sqrt(1-o*o);return Math.abs(o)<.001?(r.w=.5*(e.w+t.w),r.x=.5*(e.x+t.x),r.y=.5*(e.y+t.y),r.z=.5*(e.z+t.z),r):(t=Math.sin((1-i)*n)/o,i=Math.sin(i*n)/o,r.w=e.w*t+r.w*i,r.x=e.x*t+r.x*i,r.y=e.y*t+r.y*i,r.z=e.z*t+r.z*i,r)},THREE.Vertex=function(){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.")},THREE.Face3=function(e,t,r,i,n,o){this.a=e,this.b=t,this.c=r,this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3,this.vertexNormals=i instanceof Array?i:[],this.color=n instanceof THREE.Color?n:new THREE.Color,this.vertexColors=n instanceof Array?n:[],this.vertexTangents=[],this.materialIndex=o,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e,t,r=new THREE.Face3(this.a,this.b,this.c);for(r.normal.copy(this.normal),r.color.copy(this.color),r.centroid.copy(this.centroid),r.materialIndex=this.materialIndex,e=0,t=this.vertexNormals.length;e<t;e++)r.vertexNormals[e]=this.vertexNormals[e].clone();for(e=0,t=this.vertexColors.length;e<t;e++)r.vertexColors[e]=this.vertexColors[e].clone();for(e=0,t=this.vertexTangents.length;e<t;e++)r.vertexTangents[e]=this.vertexTangents[e].clone();return r}},THREE.Face4=function(e,t,r,i,n,o,a){this.a=e,this.b=t,this.c=r,this.d=i,this.normal=n instanceof THREE.Vector3?n:new THREE.Vector3,this.vertexNormals=n instanceof Array?n:[],this.color=o instanceof THREE.Color?o:new THREE.Color,this.vertexColors=o instanceof Array?o:[],this.vertexTangents=[],this.materialIndex=a,this.centroid=new THREE.Vector3},THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var e,t,r=new THREE.Face4(this.a,this.b,this.c,this.d);for(r.normal.copy(this.normal),r.color.copy(this.color),r.centroid.copy(this.centroid),r.materialIndex=this.materialIndex,e=0,t=this.vertexNormals.length;e<t;e++)r.vertexNormals[e]=this.vertexNormals[e].clone();for(e=0,t=this.vertexColors.length;e<t;e++)r.vertexColors[e]=this.vertexColors[e].clone();for(e=0,t=this.vertexTangents.length;e<t;e++)r.vertexTangents[e]=this.vertexTangents[e].clone();return r}},THREE.UV=function(e,t){this.u=e||0,this.v=t||0},THREE.UV.prototype={constructor:THREE.UV,set:function(e,t){return this.u=e,this.v=t,this},copy:function(e){return this.u=e.u,this.v=e.v,this},lerpSelf:function(e,t){return this.u=this.u+(e.u-this.u)*t,this.v=this.v+(e.v-this.v)*t,this},clone:function(){return new THREE.UV(this.u,this.v)}},THREE.Geometry=function(){this.id=THREE.GeometryCount++,this.vertices=[],this.colors=[],this.materials=[],this.faces=[],this.faceUvs=[[]],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.boundingSphere=this.boundingBox=null,this.dynamic=this.hasTangents=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){var t=new THREE.Matrix4;t.extractRotation(e);for(var r=0,i=this.vertices.length;r<i;r++)e.multiplyVector3(this.vertices[r]);for(r=0,i=this.faces.length;r<i;r++){var n=this.faces[r];t.multiplyVector3(n.normal);for(var o=0,a=n.vertexNormals.length;o<a;o++)t.multiplyVector3(n.vertexNormals[o]);e.multiplyVector3(n.centroid)}},computeCentroids:function(){var e,t,r;for(e=0,t=this.faces.length;e<t;e++)(r=this.faces[e]).centroid.set(0,0,0),r instanceof THREE.Face3?(r.centroid.addSelf(this.vertices[r.a]),r.centroid.addSelf(this.vertices[r.b]),r.centroid.addSelf(this.vertices[r.c]),r.centroid.divideScalar(3)):r instanceof THREE.Face4&&(r.centroid.addSelf(this.vertices[r.a]),r.centroid.addSelf(this.vertices[r.b]),r.centroid.addSelf(this.vertices[r.c]),r.centroid.addSelf(this.vertices[r.d]),r.centroid.divideScalar(4))},computeFaceNormals:function(){var e,t,r,i,n,o,a=new THREE.Vector3,s=new THREE.Vector3;for(e=0,t=this.faces.length;e<t;e++)r=this.faces[e],i=this.vertices[r.a],n=this.vertices[r.b],o=this.vertices[r.c],a.sub(o,n),s.sub(i,n),a.crossSelf(s),a.isZero()||a.normalize(),r.normal.copy(a)},computeVertexNormals:function(){var e,t,r,i;if(void 0===this.__tmpVertices){for(i=this.__tmpVertices=Array(this.vertices.length),e=0,t=this.vertices.length;e<t;e++)i[e]=new THREE.Vector3;for(e=0,t=this.faces.length;e<t;e++)(r=this.faces[e])instanceof THREE.Face3?r.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:r instanceof THREE.Face4&&(r.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else for(i=this.__tmpVertices,e=0,t=this.vertices.length;e<t;e++)i[e].set(0,0,0);for(e=0,t=this.faces.length;e<t;e++)(r=this.faces[e])instanceof THREE.Face3?(i[r.a].addSelf(r.normal),i[r.b].addSelf(r.normal),i[r.c].addSelf(r.normal)):r instanceof THREE.Face4&&(i[r.a].addSelf(r.normal),i[r.b].addSelf(r.normal),i[r.c].addSelf(r.normal),i[r.d].addSelf(r.normal));for(e=0,t=this.vertices.length;e<t;e++)i[e].normalize();for(e=0,t=this.faces.length;e<t;e++)(r=this.faces[e])instanceof THREE.Face3?(r.vertexNormals[0].copy(i[r.a]),r.vertexNormals[1].copy(i[r.b]),r.vertexNormals[2].copy(i[r.c])):r instanceof THREE.Face4&&(r.vertexNormals[0].copy(i[r.a]),r.vertexNormals[1].copy(i[r.b]),r.vertexNormals[2].copy(i[r.c]),r.vertexNormals[3].copy(i[r.d]))},computeMorphNormals:function(){var e,t,r,i,n;for(r=0,i=this.faces.length;r<i;r++)for((n=this.faces[r]).__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),e=0,t=n.vertexNormals.length;e<t;e++)n.__originalVertexNormals[e]?n.__originalVertexNormals[e].copy(n.vertexNormals[e]):n.__originalVertexNormals[e]=n.vertexNormals[e].clone();var o=new THREE.Geometry;for(o.faces=this.faces,e=0,t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var a,s,l=this.morphNormals[e].faceNormals,h=this.morphNormals[e].vertexNormals;for(r=0,i=this.faces.length;r<i;r++)n=this.faces[r],a=new THREE.Vector3,s=n instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},l.push(a),h.push(s)}for(l=this.morphNormals[e],o.vertices=this.morphTargets[e].vertices,o.computeFaceNormals(),o.computeVertexNormals(),r=0,i=this.faces.length;r<i;r++)n=this.faces[r],a=l.faceNormals[r],s=l.vertexNormals[r],a.copy(n.normal),n instanceof THREE.Face3?(s.a.copy(n.vertexNormals[0]),s.b.copy(n.vertexNormals[1]),s.c.copy(n.vertexNormals[2])):(s.a.copy(n.vertexNormals[0]),s.b.copy(n.vertexNormals[1]),s.c.copy(n.vertexNormals[2]),s.d.copy(n.vertexNormals[3]))}for(r=0,i=this.faces.length;r<i;r++)(n=this.faces[r]).normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){function e(e,t,r,i,n,o,H){s=e.vertices[t],l=e.vertices[r],h=e.vertices[i],c=a[n],f=a[o],u=a[H],d=l.x-s.x,E=h.x-s.x,p=l.y-s.y,m=h.y-s.y,v=l.z-s.z,g=h.z-s.z,T=f.u-c.u,R=u.u-c.u,y=f.v-c.v,x=u.v-c.v,_=1/(T*x-R*y),S.set((x*d-y*E)*_,(x*p-y*m)*_,(x*v-y*g)*_),M.set((T*E-R*d)*_,(T*m-R*p)*_,(T*g-R*v)*_),b[t].addSelf(S),b[r].addSelf(S),b[i].addSelf(S),w[t].addSelf(M),w[r].addSelf(M),w[i].addSelf(M)}var t,r,i,n,o,a,s,l,h,c,f,u,d,E,p,m,v,g,T,R,y,x,_,H,b=[],w=[],S=new THREE.Vector3,M=new THREE.Vector3,A=new THREE.Vector3,C=new THREE.Vector3,L=new THREE.Vector3;for(t=0,r=this.vertices.length;t<r;t++)b[t]=new THREE.Vector3,w[t]=new THREE.Vector3;for(t=0,r=this.faces.length;t<r;t++)o=this.faces[t],a=this.faceVertexUvs[0][t],o instanceof THREE.Face3?e(this,o.a,o.b,o.c,0,1,2):o instanceof THREE.Face4&&(e(this,o.a,o.b,o.d,0,1,3),e(this,o.b,o.c,o.d,1,2,3));var D=["a","b","c","d"];for(t=0,r=this.faces.length;t<r;t++)for(o=this.faces[t],i=0;i<o.vertexNormals.length;i++)L.copy(o.vertexNormals[i]),n=o[D[i]],H=b[n],A.copy(H),A.subSelf(L.multiplyScalar(L.dot(H))).normalize(),C.cross(o.vertexNormals[i],H),n=(n=C.dot(w[n]))<0?-1:1,o.vertexTangents[i]=new THREE.Vector4(A.x,A.y,A.z,n);this.hasTangents=!0},computeBoundingBox:function(){if(this.boundingBox||(this.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3}),this.vertices.length>0){var e;e=this.vertices[0],this.boundingBox.min.copy(e),this.boundingBox.max.copy(e);for(var t=this.boundingBox.min,r=this.boundingBox.max,i=1,n=this.vertices.length;i<n;i++)(e=this.vertices[i]).x<t.x?t.x=e.x:e.x>r.x&&(r.x=e.x),e.y<t.y?t.y=e.y:e.y>r.y&&(r.y=e.y),e.z<t.z?t.z=e.z:e.z>r.z&&(r.z=e.z)}else this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){this.boundingSphere||(this.boundingSphere={radius:0});for(var e,t=0,r=0,i=this.vertices.length;r<i;r++)(e=this.vertices[r].length())>t&&(t=e);this.boundingSphere.radius=t},mergeVertices:function(){var e,t,r,i,n={},o=[],a=[],s=Math.pow(10,4);for(t=0,r=this.vertices.length;t<r;t++)e=this.vertices[t],void 0===n[e=[Math.round(e.x*s),Math.round(e.y*s),Math.round(e.z*s)].join("_")]?(n[e]=t,o.push(this.vertices[t]),a[t]=o.length-1):a[t]=a[n[e]];for(t=0,r=this.faces.length;t<r;t++)if((s=this.faces[t])instanceof THREE.Face3)s.a=a[s.a],s.b=a[s.b],s.c=a[s.c];else if(s instanceof THREE.Face4)for(s.a=a[s.a],s.b=a[s.b],s.c=a[s.c],s.d=a[s.d],e=[s.a,s.b,s.c,s.d],n=3;n>0;n--)if(e.indexOf(s["abcd"[n]])!=n){for(e.splice(n,1),this.faces[t]=new THREE.Face3(e[0],e[1],e[2]),s=0,e=this.faceVertexUvs.length;s<e;s++)(i=this.faceVertexUvs[s][t])&&i.splice(n,1);break}return a=this.vertices.length-o.length,this.vertices=o,a}},THREE.GeometryCount=0,THREE.Spline=function(e){function t(e,t,r,i,n,o,a){return(2*(t-r)+(e=.5*(r-e))+(i=.5*(i-t)))*a+(-3*(t-r)-2*e-i)*o+e*n+t}this.points=e;var r,i,n,o,a,s,l,h,c,f=[],u={x:0,y:0,z:0};this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return r=(this.points.length-1)*e,i=Math.floor(r),n=r-i,f[0]=0===i?i:i-1,f[1]=i,f[2]=i>this.points.length-2?this.points.length-1:i+1,f[3]=i>this.points.length-3?this.points.length-1:i+2,s=this.points[f[0]],l=this.points[f[1]],h=this.points[f[2]],c=this.points[f[3]],a=n*(o=n*n),u.x=t(s.x,l.x,h.x,c.x,n,o,a),u.y=t(s.y,l.y,h.y,c.y,n,o,a),u.z=t(s.z,l.z,h.z,c.z,n,o,a),u},this.getControlPointsArray=function(){var e,t,r=this.points.length,i=[];for(e=0;e<r;e++)t=this.points[e],i[e]=[t.x,t.y,t.z];return i},this.getLength=function(e){var t,r,i,n=t=t=0,o=new THREE.Vector3,a=new THREE.Vector3,s=[],l=0;for(s[0]=0,e||(e=100),r=this.points.length*e,o.copy(this.points[0]),e=1;e<r;e++)t=e/r,i=this.getPoint(t),a.copy(i),l+=a.distanceTo(o),o.copy(i),t=(this.points.length-1)*t,(t=Math.floor(t))!=n&&(s[t]=l,n=t);return s[s.length]=l,{chunks:s,total:l}},this.reparametrizeByArcLength=function(e){var t,r,i,n,o,a,s=[],l=new THREE.Vector3,h=this.getLength();for(s.push(l.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(r=h.chunks[t]-h.chunks[t-1],a=Math.ceil(e*r/h.total),n=(t-1)/(this.points.length-1),o=t/(this.points.length-1),r=1;r<a-1;r++)i=n+r*(1/a)*(o-n),i=this.getPoint(i),s.push(l.copy(i).clone());s.push(l.copy(this.points[t]).clone())}this.points=s}},THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=new THREE.Object3D,THREE.Camera.prototype.constructor=THREE.Camera,THREE.Camera.prototype.lookAt=function(e){this.matrix.lookAt(this.position,e,this.up),this.rotationAutoUpdate&&this.rotation.getRotationFromMatrix(this.matrix)},THREE.OrthographicCamera=function(e,t,r,i,n,o){THREE.Camera.call(this),this.left=e,this.right=t,this.top=r,this.bottom=i,this.near=void 0!==n?n:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=new THREE.Camera,THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera,THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.PerspectiveCamera=function(e,t,r,i){THREE.Camera.call(this),this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==r?r:.1,this.far=void 0!==i?i:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=new THREE.Camera,THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera,THREE.PerspectiveCamera.prototype.setLens=function(e,t){this.fov=2*Math.atan((void 0!==t?t:24)/(2*e))*(180/Math.PI),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,r,i,n,o){this.fullWidth=e,this.fullHeight=t,this.x=r,this.y=i,this.width=n,this.height=o,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight,t=Math.tan(this.fov*Math.PI/360)*this.near,r=e*(i=-t),i=(e=Math.abs(e*t-r),Math.abs(t-i));this.projectionMatrix.makeFrustum(r+this.x*e/this.fullWidth,r+(this.x+this.width)*e/this.fullWidth,t-(this.y+this.height)*i/this.fullHeight,t-this.y*i/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.Light=function(e){THREE.Object3D.call(this),this.color=new THREE.Color(e)},THREE.Light.prototype=new THREE.Object3D,THREE.Light.prototype.constructor=THREE.Light,THREE.Light.prototype.supr=THREE.Object3D.prototype,THREE.AmbientLight=function(e){THREE.Light.call(this,e)},THREE.AmbientLight.prototype=new THREE.Light,THREE.AmbientLight.prototype.constructor=THREE.AmbientLight,THREE.DirectionalLight=function(e,t,r){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraTop=this.shadowCameraRight=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.DirectionalLight.prototype=new THREE.Light,THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight,THREE.PointLight=function(e,t,r){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,0,0),this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0},THREE.PointLight.prototype=new THREE.Light,THREE.PointLight.prototype.constructor=THREE.PointLight,THREE.SpotLight=function(e,t,r,i,n){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0,this.angle=void 0!==i?i:Math.PI/2,this.exponent=void 0!==n?n:10,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.SpotLight.prototype=new THREE.Light,THREE.SpotLight.prototype.constructor=THREE.SpotLight,THREE.Material=function(e){e=e||{},this.id=THREE.MaterialCount++,this.name="",this.opacity=void 0!==e.opacity?e.opacity:1,this.transparent=void 0!==e.transparent&&e.transparent,this.blending=void 0!==e.blending?e.blending:THREE.NormalBlending,this.blendSrc=void 0!==e.blendSrc?e.blendSrc:THREE.SrcAlphaFactor,this.blendDst=void 0!==e.blendDst?e.blendDst:THREE.OneMinusSrcAlphaFactor,this.blendEquation=void 0!==e.blendEquation?e.blendEquation:THREE.AddEquation,this.depthTest=void 0===e.depthTest||e.depthTest,this.depthWrite=void 0===e.depthWrite||e.depthWrite,this.polygonOffset=void 0!==e.polygonOffset&&e.polygonOffset,this.polygonOffsetFactor=void 0!==e.polygonOffsetFactor?e.polygonOffsetFactor:0,this.polygonOffsetUnits=void 0!==e.polygonOffsetUnits?e.polygonOffsetUnits:0,this.alphaTest=void 0!==e.alphaTest?e.alphaTest:0,this.overdraw=void 0!==e.overdraw&&e.overdraw,this.needsUpdate=this.visible=!0},THREE.MaterialCount=0,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.AdditiveAlphaBlending=5,THREE.CustomBlending=6,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.LineBasicMaterial=function(e){THREE.Material.call(this,e),e=e||{},this.color=void 0!==e.color?new THREE.Color(e.color):new THREE.Color(16777215),this.linewidth=void 0!==e.linewidth?e.linewidth:1,this.linecap=void 0!==e.linecap?e.linecap:"round",this.linejoin=void 0!==e.linejoin?e.linejoin:"round",this.vertexColors=!!e.vertexColors&&e.vertexColors,this.fog=void 0===e.fog||e.fog},THREE.LineBasicMaterial.prototype=new THREE.Material,THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial,THREE.MeshBasicMaterial=function(e){THREE.Material.call(this,e),e=e||{},this.color=void 0!==e.color?new THREE.Color(e.color):new THREE.Color(16777215),this.map=void 0!==e.map?e.map:null,this.lightMap=void 0!==e.lightMap?e.lightMap:null,this.envMap=void 0!==e.envMap?e.envMap:null,this.combine=void 0!==e.combine?e.combine:THREE.MultiplyOperation,this.reflectivity=void 0!==e.reflectivity?e.reflectivity:1,this.refractionRatio=void 0!==e.refractionRatio?e.refractionRatio:.98,this.fog=void 0===e.fog||e.fog,this.shading=void 0!==e.shading?e.shading:THREE.SmoothShading,this.wireframe=void 0!==e.wireframe&&e.wireframe,this.wireframeLinewidth=void 0!==e.wireframeLinewidth?e.wireframeLinewidth:1,this.wireframeLinecap=void 0!==e.wireframeLinecap?e.wireframeLinecap:"round",this.wireframeLinejoin=void 0!==e.wireframeLinejoin?e.wireframeLinejoin:"round",this.vertexColors=void 0!==e.vertexColors?e.vertexColors:THREE.NoColors,this.skinning=void 0!==e.skinning&&e.skinning,this.morphTargets=void 0!==e.morphTargets&&e.morphTargets},THREE.MeshBasicMaterial.prototype=new THREE.Material,THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial,THREE.MeshLambertMaterial=function(e){THREE.Material.call(this,e),e=e||{},this.color=void 0!==e.color?new THREE.Color(e.color):new THREE.Color(16777215),this.ambient=void 0!==e.ambient?new THREE.Color(e.ambient):new THREE.Color(16777215),this.emissive=void 0!==e.emissive?new THREE.Color(e.emissive):new THREE.Color(0),this.wrapAround=void 0!==e.wrapAround&&e.wrapAround,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=void 0!==e.map?e.map:null,this.lightMap=void 0!==e.lightMap?e.lightMap:null,this.envMap=void 0!==e.envMap?e.envMap:null,this.combine=void 0!==e.combine?e.combine:THREE.MultiplyOperation,this.reflectivity=void 0!==e.reflectivity?e.reflectivity:1,this.refractionRatio=void 0!==e.refractionRatio?e.refractionRatio:.98,this.fog=void 0===e.fog||e.fog,this.shading=void 0!==e.shading?e.shading:THREE.SmoothShading,this.wireframe=void 0!==e.wireframe&&e.wireframe,this.wireframeLinewidth=void 0!==e.wireframeLinewidth?e.wireframeLinewidth:1,this.wireframeLinecap=void 0!==e.wireframeLinecap?e.wireframeLinecap:"round",this.wireframeLinejoin=void 0!==e.wireframeLinejoin?e.wireframeLinejoin:"round",this.vertexColors=void 0!==e.vertexColors?e.vertexColors:THREE.NoColors,this.skinning=void 0!==e.skinning&&e.skinning,this.morphTargets=void 0!==e.morphTargets&&e.morphTargets,this.morphNormals=void 0!==e.morphNormals&&e.morphNormals},THREE.MeshLambertMaterial.prototype=new THREE.Material,THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial,THREE.MeshPhongMaterial=function(e){THREE.Material.call(this,e),e=e||{},this.color=void 0!==e.color?new THREE.Color(e.color):new THREE.Color(16777215),this.ambient=void 0!==e.ambient?new THREE.Color(e.ambient):new THREE.Color(16777215),this.emissive=void 0!==e.emissive?new THREE.Color(e.emissive):new THREE.Color(0),this.specular=void 0!==e.specular?new THREE.Color(e.specular):new THREE.Color(1118481),this.shininess=void 0!==e.shininess?e.shininess:30,this.metal=void 0!==e.metal&&e.metal,this.perPixel=void 0!==e.perPixel&&e.perPixel,this.wrapAround=void 0!==e.wrapAround&&e.wrapAround,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=void 0!==e.map?e.map:null,this.lightMap=void 0!==e.lightMap?e.lightMap:null,this.envMap=void 0!==e.envMap?e.envMap:null,this.combine=void 0!==e.combine?e.combine:THREE.MultiplyOperation,this.reflectivity=void 0!==e.reflectivity?e.reflectivity:1,this.refractionRatio=void 0!==e.refractionRatio?e.refractionRatio:.98,this.fog=void 0===e.fog||e.fog,this.shading=void 0!==e.shading?e.shading:THREE.SmoothShading,this.wireframe=void 0!==e.wireframe&&e.wireframe,this.wireframeLinewidth=void 0!==e.wireframeLinewidth?e.wireframeLinewidth:1,this.wireframeLinecap=void 0!==e.wireframeLinecap?e.wireframeLinecap:"round",this.wireframeLinejoin=void 0!==e.wireframeLinejoin?e.wireframeLinejoin:"round",this.vertexColors=void 0!==e.vertexColors?e.vertexColors:THREE.NoColors,this.skinning=void 0!==e.skinning&&e.skinning,this.morphTargets=void 0!==e.morphTargets&&e.morphTargets,this.morphNormals=void 0!==e.morphNormals&&e.morphNormals},THREE.MeshPhongMaterial.prototype=new THREE.Material,THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial,THREE.MeshDepthMaterial=function(e){THREE.Material.call(this,e),e=e||{},this.shading=void 0!==e.shading?e.shading:THREE.SmoothShading,this.wireframe=void 0!==e.wireframe&&e.wireframe,this.wireframeLinewidth=void 0!==e.wireframeLinewidth?e.wireframeLinewidth:1},THREE.MeshDepthMaterial.prototype=new THREE.Material,THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial,THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),e=e||{},this.shading=e.shading?e.shading:THREE.FlatShading,this.wireframe=!!e.wireframe&&e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth?e.wireframeLinewidth:1},THREE.MeshNormalMaterial.prototype=new THREE.Material,THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial,THREE.MeshFaceMaterial=function(){},THREE.ParticleBasicMaterial=function(e){THREE.Material.call(this,e),e=e||{},this.color=void 0!==e.color?new THREE.Color(e.color):new THREE.Color(16777215),this.map=void 0!==e.map?e.map:null,this.size=void 0!==e.size?e.size:1,this.sizeAttenuation=void 0===e.sizeAttenuation||e.sizeAttenuation,this.vertexColors=void 0!==e.vertexColors&&e.vertexColors,this.fog=void 0===e.fog||e.fog},THREE.ParticleBasicMaterial.prototype=new THREE.Material,THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial,THREE.ShaderMaterial=function(e){THREE.Material.call(this,e),e=e||{},this.fragmentShader=void 0!==e.fragmentShader?e.fragmentShader:"void main() {}",this.vertexShader=void 0!==e.vertexShader?e.vertexShader:"void main() {}",this.uniforms=void 0!==e.uniforms?e.uniforms:{},this.attributes=e.attributes,this.shading=void 0!==e.shading?e.shading:THREE.SmoothShading,this.wireframe=void 0!==e.wireframe&&e.wireframe,this.wireframeLinewidth=void 0!==e.wireframeLinewidth?e.wireframeLinewidth:1,this.fog=void 0!==e.fog&&e.fog,this.lights=void 0!==e.lights&&e.lights,this.vertexColors=void 0!==e.vertexColors?e.vertexColors:THREE.NoColors,this.skinning=void 0!==e.skinning&&e.skinning,this.morphTargets=void 0!==e.morphTargets&&e.morphTargets,this.morphNormals=void 0!==e.morphNormals&&e.morphNormals},THREE.ShaderMaterial.prototype=new THREE.Material,THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial,THREE.Texture=function(e,t,r,i,n,o,a,s){this.id=THREE.TextureCount++,this.image=e,this.mapping=void 0!==t?t:new THREE.UVMapping,this.wrapS=void 0!==r?r:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i?i:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n?n:THREE.LinearFilter,this.minFilter=void 0!==o?o:THREE.LinearMipMapLinearFilter,this.format=void 0!==a?a:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.needsUpdate=this.premultiplyAlpha=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var e=new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter,this.format,this.type);return e.offset.copy(this.offset),e.repeat.copy(this.repeat),e}},THREE.TextureCount=0,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=0,THREE.ClampToEdgeWrapping=1,THREE.MirroredRepeatWrapping=2,THREE.NearestFilter=3,THREE.NearestMipMapNearestFilter=4,THREE.NearestMipMapLinearFilter=5,THREE.LinearFilter=6,THREE.LinearMipMapNearestFilter=7,THREE.LinearMipMapLinearFilter=8,THREE.ByteType=9,THREE.UnsignedByteType=10,THREE.ShortType=11,THREE.UnsignedShortType=12,THREE.IntType=13,THREE.UnsignedIntType=14,THREE.FloatType=15,THREE.AlphaFormat=16,THREE.RGBFormat=17,THREE.RGBAFormat=18,THREE.LuminanceFormat=19,THREE.LuminanceAlphaFormat=20,THREE.DataTexture=function(e,t,r,i,n,o,a,s,l,h){THREE.Texture.call(this,null,o,a,s,l,h,i,n),this.image={data:e,width:t,height:r}},THREE.DataTexture.prototype=new THREE.Texture,THREE.DataTexture.prototype.constructor=THREE.DataTexture,THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture(this.image.data,this.image.width,this.image.height,this.format,this.type,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);return e.offset.copy(this.offset),e.repeat.copy(this.repeat),e},THREE.Particle=function(e){THREE.Object3D.call(this),this.material=e},THREE.Particle.prototype=new THREE.Object3D,THREE.Particle.prototype.constructor=THREE.Particle,THREE.ParticleSystem=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.ParticleBasicMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=e.boundingSphere.radius),this.frustumCulled=!1},THREE.ParticleSystem.prototype=new THREE.Object3D,THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem,THREE.Line=function(e,t,r){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==r?r:THREE.LineStrip,this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=new THREE.Object3D,THREE.Line.prototype.constructor=THREE.Line,THREE.Mesh=function(e,t){if(THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0}),this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=e.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var r=0;r<this.geometry.morphTargets.length;r++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[r].name]=r}},THREE.Mesh.prototype=new THREE.Object3D,THREE.Mesh.prototype.constructor=THREE.Mesh,THREE.Mesh.prototype.supr=THREE.Object3D.prototype,THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},THREE.Ribbon=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=t},THREE.Ribbon.prototype=new THREE.Object3D,THREE.Ribbon.prototype.constructor=THREE.Ribbon,THREE.LOD=function(){THREE.Object3D.call(this),this.LODs=[]},THREE.LOD.prototype=new THREE.Object3D,THREE.LOD.prototype.constructor=THREE.LOD,THREE.LOD.prototype.supr=THREE.Object3D.prototype,THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0);t=Math.abs(t);for(var r=0;r<this.LODs.length&&!(t<this.LODs[r].visibleAtDistance);r++);this.LODs.splice(r,0,{visibleAtDistance:t,object3D:e}),this.add(e)},THREE.LOD.prototype.update=function(e){if(this.LODs.length>1){e.matrixWorldInverse.getInverse(e.matrixWorld),e=-((e=e.matrixWorldInverse).elements[2]*this.matrixWorld.elements[12]+e.elements[6]*this.matrixWorld.elements[13]+e.elements[10]*this.matrixWorld.elements[14]+e.elements[14]),this.LODs[0].object3D.visible=!0;for(var t=1;t<this.LODs.length&&e>=this.LODs[t].visibleAtDistance;t++)this.LODs[t-1].object3D.visible=!1,this.LODs[t].object3D.visible=!0;for(;t<this.LODs.length;t++)this.LODs[t].object3D.visible=!1}},THREE.Sprite=function(e){THREE.Object3D.call(this),this.color=void 0!==e.color?new THREE.Color(e.color):new THREE.Color(16777215),this.map=void 0!==e.map?e.map:new THREE.Texture,this.blending=void 0!==e.blending?e.blending:THREE.NormalBlending,this.blendSrc=void 0!==e.blendSrc?e.blendSrc:THREE.SrcAlphaFactor,this.blendDst=void 0!==e.blendDst?e.blendDst:THREE.OneMinusSrcAlphaFactor,this.blendEquation=void 0!==e.blendEquation?e.blendEquation:THREE.AddEquation,this.useScreenCoordinates=void 0===e.useScreenCoordinates||e.useScreenCoordinates,this.mergeWith3D=void 0!==e.mergeWith3D?e.mergeWith3D:!this.useScreenCoordinates,this.affectedByDistance=void 0!==e.affectedByDistance?e.affectedByDistance:!this.useScreenCoordinates,this.scaleByViewport=void 0!==e.scaleByViewport?e.scaleByViewport:!this.affectedByDistance,this.alignment=e.alignment instanceof THREE.Vector2?e.alignment:THREE.SpriteAlignment.center,this.rotation3d=this.rotation,this.rotation=0,this.opacity=1,this.uvOffset=new THREE.Vector2(0,0),this.uvScale=new THREE.Vector2(1,1)},THREE.Sprite.prototype=new THREE.Object3D,THREE.Sprite.prototype.constructor=THREE.Sprite,THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position),this.rotation3d.set(0,0,this.rotation),this.matrix.setRotationFromEuler(this.rotation3d),1===this.scale.x&&1===this.scale.y||(this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y)),this.matrixWorldNeedsUpdate=!0},THREE.SpriteAlignment={},THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1),THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1),THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1),THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0),THREE.SpriteAlignment.center=new THREE.Vector2(0,0),THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0),THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1),THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1),THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1),THREE.Scene=function(){THREE.Object3D.call(this),this.overrideMaterial=this.fog=null,this.matrixAutoUpdate=!1,this.__objects=[],this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=new THREE.Object3D,THREE.Scene.prototype.constructor=THREE.Scene,THREE.Scene.prototype.__addObject=function(e){if(e instanceof THREE.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e);else if(!(e instanceof THREE.Camera)&&-1===this.__objects.indexOf(e)){this.__objects.push(e),this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}for(t=0;t<e.children.length;t++)this.__addObject(e.children[t])},THREE.Scene.prototype.__removeObject=function(e){if(e instanceof THREE.Light){var t=this.__lights.indexOf(e);-1!==t&&this.__lights.splice(t,1)}else e instanceof THREE.Camera||-1!==(t=this.__objects.indexOf(e))&&(this.__objects.splice(t,1),this.__objectsRemoved.push(e),-1!==(t=this.__objectsAdded.indexOf(e))&&this.__objectsAdded.splice(t,1));for(t=0;t<e.children.length;t++)this.__removeObject(e.children[t])},THREE.Fog=function(e,t,r){this.color=new THREE.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==r?r:1e3},THREE.FogExp2=function(e,t){this.color=new THREE.Color(e),this.density=void 0!==t?t:25e-5},THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity );\n} else {\ngl_FragColor.xyz = gl_FragColor.xyz * cubeColor.xyz;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - mPosition.xyz ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvWorldPosition = mPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * modelViewMatrix * gl_Position;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\n#endif",default_vertex:"#ifndef USE_MORPHTARGETS\n#ifndef USE_SKINNING\ngl_Position = projectionMatrix * mvPosition;\n#endif\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\nvec3 transformedNormal = normalMatrix * morphedNormal;\n#else\nvec3 transformedNormal = normalMatrix * normal;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n#ifdef USE_MORPHTARGETS\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( morphed, 1.0 );\n#else\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( position, 1.0 );\n#endif\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"},THREE.UniformsUtils={merge:function(e){var t,r,i,n={};for(t=0;t<e.length;t++)for(r in i=this.clone(e[t]))n[r]=i[r];return n},clone:function(e){var t,r,i,n={};for(t in e)for(r in n[t]={},e[t])i=e[t][r],n[t][r]=i instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix4||i instanceof THREE.Texture?i.clone():i instanceof Array?i.slice():i;return n}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:2,texture:null},envMap:{type:"t",value:1,texture:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngle:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:6,texture:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalMatrix * normal;\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["varying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif",THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["varying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.morphnormal_vertex,"vNormal = transformedNormal;",THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}},THREE.WebGLRenderer=function(e){function t(e,t){var r=e.vertices.length,i=t.material;if(i.attributes)for(var n in void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]),i.attributes){var o=i.attributes[n];if(!o.__webglInitialized||o.createUniqueBuffers){o.__webglInitialized=!0;var a=1;"v2"===o.type?a=2:"v3"===o.type?a=3:"v4"===o.type?a=4:"c"===o.type&&(a=3),o.size=a,o.array=new Float32Array(r*a),o.buffer=L.createBuffer(),o.buffer.belongsToAttribute=n,o.needsUpdate=!0}e.__webglCustomAttributesList.push(o)}}function r(e,t){return!e.material||e.material instanceof THREE.MeshFaceMaterial?t.materialIndex>=0?e.geometry.materials[t.materialIndex]:void 0:e.material}function i(e){return!(e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial)&&(e&&void 0!==e.shading&&e.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading)}function n(e){return!!(e.map||e.lightMap||e instanceof THREE.ShaderMaterial)}function o(e,t,r){var i,n,o,a,s=e.vertices;a=s.length;var l=e.colors,h=l.length,c=e.__vertexArray,f=e.__colorArray,u=e.__sortArray,d=e.verticesNeedUpdate,E=e.colorsNeedUpdate,p=e.__webglCustomAttributesList;if(r.sortParticles){for(ae.copy(oe),ae.multiplySelf(r.matrixWorld),i=0;i<a;i++)n=s[i],se.copy(n),ae.multiplyVector3(se),u[i]=[se.z,i];for(u.sort(function(e,t){return t[0]-e[0]}),i=0;i<a;i++)n=s[u[i][1]],c[o=3*i]=n.x,c[o+1]=n.y,c[o+2]=n.z;for(i=0;i<h;i++)o=3*i,n=l[u[i][1]],f[o]=n.r,f[o+1]=n.g,f[o+2]=n.b;if(p)for(l=0,h=p.length;l<h;l++)if(void 0===(s=p[l]).boundTo||"vertices"===s.boundTo)if(o=0,n=s.value.length,1===s.size)for(i=0;i<n;i++)a=u[i][1],s.array[i]=s.value[a];else if(2===s.size)for(i=0;i<n;i++)a=u[i][1],a=s.value[a],s.array[o]=a.x,s.array[o+1]=a.y,o+=2;else if(3===s.size)if("c"===s.type)for(i=0;i<n;i++)a=u[i][1],a=s.value[a],s.array[o]=a.r,s.array[o+1]=a.g,s.array[o+2]=a.b,o+=3;else for(i=0;i<n;i++)a=u[i][1],a=s.value[a],s.array[o]=a.x,s.array[o+1]=a.y,s.array[o+2]=a.z,o+=3;else if(4===s.size)for(i=0;i<n;i++)a=u[i][1],a=s.value[a],s.array[o]=a.x,s.array[o+1]=a.y,s.array[o+2]=a.z,s.array[o+3]=a.w,o+=4}else{if(d)for(i=0;i<a;i++)n=s[i],c[o=3*i]=n.x,c[o+1]=n.y,c[o+2]=n.z;if(E)for(i=0;i<h;i++)n=l[i],f[o=3*i]=n.r,f[o+1]=n.g,f[o+2]=n.b;if(p)for(l=0,h=p.length;l<h;l++)if((s=p[l]).needsUpdate&&(void 0===s.boundTo||"vertices"===s.boundTo))if(n=s.value.length,o=0,1===s.size)for(i=0;i<n;i++)s.array[i]=s.value[i];else if(2===s.size)for(i=0;i<n;i++)a=s.value[i],s.array[o]=a.x,s.array[o+1]=a.y,o+=2;else if(3===s.size)if("c"===s.type)for(i=0;i<n;i++)a=s.value[i],s.array[o]=a.r,s.array[o+1]=a.g,s.array[o+2]=a.b,o+=3;else for(i=0;i<n;i++)a=s.value[i],s.array[o]=a.x,s.array[o+1]=a.y,s.array[o+2]=a.z,o+=3;else if(4===s.size)for(i=0;i<n;i++)a=s.value[i],s.array[o]=a.x,s.array[o+1]=a.y,s.array[o+2]=a.z,s.array[o+3]=a.w,o+=4}if((d||r.sortParticles)&&(L.bindBuffer(L.ARRAY_BUFFER,e.__webglVertexBuffer),L.bufferData(L.ARRAY_BUFFER,c,t)),(E||r.sortParticles)&&(L.bindBuffer(L.ARRAY_BUFFER,e.__webglColorBuffer),L.bufferData(L.ARRAY_BUFFER,f,t)),p)for(l=0,h=p.length;l<h;l++)((s=p[l]).needsUpdate||r.sortParticles)&&(L.bindBuffer(L.ARRAY_BUFFER,s.buffer),L.bufferData(L.ARRAY_BUFFER,s.array,t))}function a(e,t){return t.z-e.z}function s(e,t,r){if(e.length)for(var i=0,n=e.length;i<n;i++)N=P=null,z=B=I=O=Y=X=k=-1,he=!0,e[i].render(t,r,re,ie),N=P=null,z=B=I=O=Y=X=k=-1,he=!0}function l(e,t,r,i,n,o,a,s){var l,h,c,f;t?(h=e.length-1,f=t=-1):(h=0,t=e.length,f=1);for(var u=h;u!==t;u+=f)if((l=e[u]).render){if(h=l.object,c=l.buffer,s)l=s;else{if(!(l=l[r]))continue;a&&D.setBlending(l.blending,l.blendEquation,l.blendSrc,l.blendDst),D.setDepthTest(l.depthTest),D.setDepthWrite(l.depthWrite),p(l.polygonOffset,l.polygonOffsetFactor,l.polygonOffsetUnits)}D.setObjectFaces(h),c instanceof THREE.BufferGeometry?D.renderBufferDirect(i,n,o,l,c,h):D.renderBuffer(i,n,o,l,c,h)}}function h(e,t,r,i,n,o,a){for(var s,l,h=0,c=e.length;h<c;h++)if((l=(s=e[h]).object).visible){if(a)s=a;else{if(!(s=s[t]))continue;o&&D.setBlending(s.blending,s.blendEquation,s.blendSrc,s.blendDst),D.setDepthTest(s.depthTest),D.setDepthWrite(s.depthWrite),p(s.polygonOffset,s.polygonOffsetFactor,s.polygonOffsetUnits)}D.renderImmediateObject(r,i,n,s,l)}}function c(e,t,r){e.push({buffer:t,object:r,opaque:null,transparent:null})}function f(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function u(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function d(e,t,r,i,n){if(i.program&&!i.needsUpdate||(D.initMaterial(i,t,r,n),i.needsUpdate=!1),i.morphTargets&&!n.__webglMorphTargetInfluences){n.__webglMorphTargetInfluences=new Float32Array(D.maxMorphTargets);for(var o=0,a=D.maxMorphTargets;o<a;o++)n.__webglMorphTargetInfluences[o]=0}var s=!1,l=(a=(o=i.program).uniforms,i.uniforms);if(o!==P&&(L.useProgram(o),P=o,s=!0),i.id!==z&&(z=i.id,s=!0),(s||e!==N)&&(L.uniformMatrix4fv(a.projectionMatrix,!1,e._projectionMatrixArray),e!==N&&(N=e)),s){if(r&&i.fog&&(l.fogColor.value=r.color,r instanceof THREE.Fog?(l.fogNear.value=r.near,l.fogFar.value=r.far):r instanceof THREE.FogExp2&&(l.fogDensity.value=r.density)),i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i.lights){if(he){var h,c,f,u,d=0,E=0,p=0,m=ce,g=m.directional.colors,T=m.directional.positions,x=m.point.colors,_=m.point.positions,H=m.point.distances,b=m.spot.colors,w=m.spot.positions,S=m.spot.distances,M=m.spot.directions,A=m.spot.angles,C=m.spot.exponents,F=0,U=0,B=0,V=u=0;for(r=V=0,s=t.length;r<s;r++)(h=t[r]).onlyShadow||(c=h.color,f=h.intensity,u=h.distance,h instanceof THREE.AmbientLight?D.gammaInput?(d+=c.r*c.r,E+=c.g*c.g,p+=c.b*c.b):(d+=c.r,E+=c.g,p+=c.b):h instanceof THREE.DirectionalLight?(u=3*F,D.gammaInput?(g[u]=c.r*c.r*f*f,g[u+1]=c.g*c.g*f*f,g[u+2]=c.b*c.b*f*f):(g[u]=c.r*f,g[u+1]=c.g*f,g[u+2]=c.b*f),le.copy(h.matrixWorld.getPosition()),le.subSelf(h.target.matrixWorld.getPosition()),le.normalize(),T[u]=le.x,T[u+1]=le.y,T[u+2]=le.z,F+=1):h instanceof THREE.PointLight?(V=3*U,D.gammaInput?(x[V]=c.r*c.r*f*f,x[V+1]=c.g*c.g*f*f,x[V+2]=c.b*c.b*f*f):(x[V]=c.r*f,x[V+1]=c.g*f,x[V+2]=c.b*f),c=h.matrixWorld.getPosition(),_[V]=c.x,_[V+1]=c.y,_[V+2]=c.z,H[U]=u,U+=1):h instanceof THREE.SpotLight&&(V=3*B,D.gammaInput?(b[V]=c.r*c.r*f*f,b[V+1]=c.g*c.g*f*f,b[V+2]=c.b*c.b*f*f):(b[V]=c.r*f,b[V+1]=c.g*f,b[V+2]=c.b*f),c=h.matrixWorld.getPosition(),w[V]=c.x,w[V+1]=c.y,w[V+2]=c.z,S[B]=u,le.copy(c),le.subSelf(h.target.matrixWorld.getPosition()),le.normalize(),M[V]=le.x,M[V+1]=le.y,M[V+2]=le.z,A[B]=Math.cos(h.angle),C[B]=h.exponent,B+=1));for(r=3*F,s=g.length;r<s;r++)g[r]=0;for(r=3*U,s=x.length;r<s;r++)x[r]=0;for(r=3*B,s=b.length;r<s;r++)b[r]=0;m.directional.length=F,m.point.length=U,m.spot.length=B,m.ambient[0]=d,m.ambient[1]=E,m.ambient[2]=p,he=!1}r=ce,l.ambientLightColor.value=r.ambient,l.directionalLightColor.value=r.directional.colors,l.directionalLightDirection.value=r.directional.positions,l.pointLightColor.value=r.point.colors,l.pointLightPosition.value=r.point.positions,l.pointLightDistance.value=r.point.distances,l.spotLightColor.value=r.spot.colors,l.spotLightPosition.value=r.spot.positions,l.spotLightDistance.value=r.spot.distances,l.spotLightDirection.value=r.spot.directions,l.spotLightAngle.value=r.spot.angles,l.spotLightExponent.value=r.spot.exponents}if((i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.MeshPhongMaterial)&&(l.opacity.value=i.opacity,D.gammaInput?l.diffuse.value.copyGammaToLinear(i.color):l.diffuse.value=i.color,(l.map.texture=i.map)&&l.offsetRepeat.value.set(i.map.offset.x,i.map.offset.y,i.map.repeat.x,i.map.repeat.y),l.lightMap.texture=i.lightMap,l.envMap.texture=i.envMap,l.flipEnvMap.value=i.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,l.reflectivity.value=i.reflectivity,l.refractionRatio.value=i.refractionRatio,l.combine.value=i.combine,l.useRefract.value=i.envMap&&i.envMap.mapping instanceof THREE.CubeRefractionMapping),i instanceof THREE.LineBasicMaterial?(l.diffuse.value=i.color,l.opacity.value=i.opacity):i instanceof THREE.ParticleBasicMaterial?(l.psColor.value=i.color,l.opacity.value=i.opacity,l.size.value=i.size,l.scale.value=y.height/2,l.map.texture=i.map):i instanceof THREE.MeshPhongMaterial?(l.shininess.value=i.shininess,D.gammaInput?(l.ambient.value.copyGammaToLinear(i.ambient),l.emissive.value.copyGammaToLinear(i.emissive),l.specular.value.copyGammaToLinear(i.specular)):(l.ambient.value=i.ambient,l.emissive.value=i.emissive,l.specular.value=i.specular),i.wrapAround&&l.wrapRGB.value.copy(i.wrapRGB)):i instanceof THREE.MeshLambertMaterial?(D.gammaInput?(l.ambient.value.copyGammaToLinear(i.ambient),l.emissive.value.copyGammaToLinear(i.emissive)):(l.ambient.value=i.ambient,l.emissive.value=i.emissive),i.wrapAround&&l.wrapRGB.value.copy(i.wrapRGB)):i instanceof THREE.MeshDepthMaterial?(l.mNear.value=e.near,l.mFar.value=e.far,l.opacity.value=i.opacity):i instanceof THREE.MeshNormalMaterial&&(l.opacity.value=i.opacity),n.receiveShadow&&!i._shadowPass&&l.shadowMatrix)for(s=r=0,h=t.length;s<h;s++)(d=t[s]).castShadow&&(d instanceof THREE.SpotLight||d instanceof THREE.DirectionalLight&&!d.shadowCascade)&&(l.shadowMap.texture[r]=d.shadowMap,l.shadowMapSize.value[r]=d.shadowMapSize,l.shadowMatrix.value[r]=d.shadowMatrix,l.shadowDarkness.value[r]=d.shadowDarkness,l.shadowBias.value[r]=d.shadowBias,r++);for(l=0,r=(t=i.uniformsList).length;l<r;l++)if(d=o.uniforms[t[l][1]])switch(E=(s=t[l][0]).type,h=s.value,E){case"i":L.uniform1i(d,h);break;case"f":L.uniform1f(d,h);break;case"v2":L.uniform2f(d,h.x,h.y);break;case"v3":L.uniform3f(d,h.x,h.y,h.z);break;case"v4":L.uniform4f(d,h.x,h.y,h.z,h.w);break;case"c":L.uniform3f(d,h.r,h.g,h.b);break;case"fv1":L.uniform1fv(d,h);break;case"fv":L.uniform3fv(d,h);break;case"v2v":for(s._array||(s._array=new Float32Array(2*h.length)),E=0,p=h.length;E<p;E++)m=2*E,s._array[m]=h[E].x,s._array[m+1]=h[E].y;L.uniform2fv(d,s._array);break;case"v3v":for(s._array||(s._array=new Float32Array(3*h.length)),E=0,p=h.length;E<p;E++)m=3*E,s._array[m]=h[E].x,s._array[m+1]=h[E].y,s._array[m+2]=h[E].z;L.uniform3fv(d,s._array);break;case"v4v":for(s._array||(s._array=new Float32Array(4*h.length)),E=0,p=h.length;E<p;E++)m=4*E,s._array[m]=h[E].x,s._array[m+1]=h[E].y,s._array[m+2]=h[E].z,s._array[m+3]=h[E].w;L.uniform4fv(d,s._array);break;case"m4":s._array||(s._array=new Float32Array(16)),h.flattenToArray(s._array),L.uniformMatrix4fv(d,!1,s._array);break;case"m4v":for(s._array||(s._array=new Float32Array(16*h.length)),E=0,p=h.length;E<p;E++)h[E].flattenToArrayOffset(s._array,16*E);L.uniformMatrix4fv(d,!1,s._array);break;case"t":if(L.uniform1i(d,h),!(d=s.texture))continue;if(d.image instanceof Array&&6===d.image.length){if(6===(s=d).image.length)if(s.needsUpdate){for(s.image.__webglTextureCube||(s.image.__webglTextureCube=L.createTexture()),L.activeTexture(L.TEXTURE0+h),L.bindTexture(L.TEXTURE_CUBE_MAP,s.image.__webglTextureCube),h=[],d=0;d<6;d++)E=h,p=d,D.autoScaleCubemaps?(m=s.image[d],T=ue,m.width<=T&&m.height<=T||(x=Math.max(m.width,m.height),g=Math.floor(m.width*T/x),T=Math.floor(m.height*T/x),(x=document.createElement("canvas")).width=g,x.height=T,x.getContext("2d").drawImage(m,0,0,m.width,m.height,0,0,g,T),m=x)):m=s.image[d],E[p]=m;for(E=0==((d=h[0]).width&d.width-1)&&0==(d.height&d.height-1),p=R(s.format),m=R(s.type),v(L.TEXTURE_CUBE_MAP,s,E),d=0;d<6;d++)L.texImage2D(L.TEXTURE_CUBE_MAP_POSITIVE_X+d,0,p,p,m,h[d]);s.generateMipmaps&&E&&L.generateMipmap(L.TEXTURE_CUBE_MAP),s.needsUpdate=!1,s.onUpdate&&s.onUpdate()}else L.activeTexture(L.TEXTURE0+h),L.bindTexture(L.TEXTURE_CUBE_MAP,s.image.__webglTextureCube)}else d instanceof THREE.WebGLRenderTargetCube?(s=d,L.activeTexture(L.TEXTURE0+h),L.bindTexture(L.TEXTURE_CUBE_MAP,s.__webglTexture)):D.setTexture(d,h);break;case"tv":if(!s._array)for(s._array=[],E=0,p=s.texture.length;E<p;E++)s._array[E]=h+E;for(L.uniform1iv(d,s._array),E=0,p=s.texture.length;E<p;E++)(d=s.texture[E])&&D.setTexture(d,s._array[E])}(i instanceof THREE.ShaderMaterial||i instanceof THREE.MeshPhongMaterial||i.envMap)&&null!==a.cameraPosition&&(t=e.matrixWorld.getPosition(),L.uniform3f(a.cameraPosition,t.x,t.y,t.z)),(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.ShaderMaterial||i.skinning)&&null!==a.viewMatrix&&L.uniformMatrix4fv(a.viewMatrix,!1,e._viewMatrixArray),i.skinning&&L.uniformMatrix4fv(a.boneGlobalMatrices,!1,n.boneMatrices)}return L.uniformMatrix4fv(a.modelViewMatrix,!1,n._modelViewMatrix.elements),a.normalMatrix&&L.uniformMatrix3fv(a.normalMatrix,!1,n._normalMatrix.elements),null!==a.objectMatrix&&L.uniformMatrix4fv(a.objectMatrix,!1,n.matrixWorld.elements),o}function E(e,t){e._modelViewMatrix.multiply(t.matrixWorldInverse,e.matrixWorld),e._normalMatrix.getInverse(e._modelViewMatrix),e._normalMatrix.transpose()}function p(e,t,r){q!==e&&(e?L.enable(L.POLYGON_OFFSET_FILL):L.disable(L.POLYGON_OFFSET_FILL),q=e),!e||Z===t&&Q===r||(L.polygonOffset(t,r),Z=t,Q=r)}function m(e,t){var r;return"fragment"===e?r=L.createShader(L.FRAGMENT_SHADER):"vertex"===e&&(r=L.createShader(L.VERTEX_SHADER)),L.shaderSource(r,t),L.compileShader(r),L.getShaderParameter(r,L.COMPILE_STATUS)?r:(console.error(L.getShaderInfoLog(r)),console.error(t),null)}function v(e,t,r){r?(L.texParameteri(e,L.TEXTURE_WRAP_S,R(t.wrapS)),L.texParameteri(e,L.TEXTURE_WRAP_T,R(t.wrapT)),L.texParameteri(e,L.TEXTURE_MAG_FILTER,R(t.magFilter)),L.texParameteri(e,L.TEXTURE_MIN_FILTER,R(t.minFilter))):(L.texParameteri(e,L.TEXTURE_WRAP_S,L.CLAMP_TO_EDGE),L.texParameteri(e,L.TEXTURE_WRAP_T,L.CLAMP_TO_EDGE),L.texParameteri(e,L.TEXTURE_MAG_FILTER,T(t.magFilter)),L.texParameteri(e,L.TEXTURE_MIN_FILTER,T(t.minFilter)))}function g(e,t){L.bindRenderbuffer(L.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(L.renderbufferStorage(L.RENDERBUFFER,L.DEPTH_COMPONENT16,t.width,t.height),L.framebufferRenderbuffer(L.FRAMEBUFFER,L.DEPTH_ATTACHMENT,L.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(L.renderbufferStorage(L.RENDERBUFFER,L.DEPTH_STENCIL,t.width,t.height),L.framebufferRenderbuffer(L.FRAMEBUFFER,L.DEPTH_STENCIL_ATTACHMENT,L.RENDERBUFFER,e)):L.renderbufferStorage(L.RENDERBUFFER,L.RGBA4,t.width,t.height)}function T(e){switch(e){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return L.NEAREST;default:return L.LINEAR}}function R(e){switch(e){case THREE.RepeatWrapping:return L.REPEAT;case THREE.ClampToEdgeWrapping:return L.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return L.MIRRORED_REPEAT;case THREE.NearestFilter:return L.NEAREST;case THREE.NearestMipMapNearestFilter:return L.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return L.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return L.LINEAR;case THREE.LinearMipMapNearestFilter:return L.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return L.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return L.BYTE;case THREE.UnsignedByteType:return L.UNSIGNED_BYTE;case THREE.ShortType:return L.SHORT;case THREE.UnsignedShortType:return L.UNSIGNED_SHORT;case THREE.IntType:return L.INT;case THREE.UnsignedIntType:return L.UNSIGNED_INT;case THREE.FloatType:return L.FLOAT;case THREE.AlphaFormat:return L.ALPHA;case THREE.RGBFormat:return L.RGB;case THREE.RGBAFormat:return L.RGBA;case THREE.LuminanceFormat:return L.LUMINANCE;case THREE.LuminanceAlphaFormat:return L.LUMINANCE_ALPHA;case THREE.AddEquation:return L.FUNC_ADD;case THREE.SubtractEquation:return L.FUNC_SUBTRACT;case THREE.ReverseSubtractEquation:return L.FUNC_REVERSE_SUBTRACT;case THREE.ZeroFactor:return L.ZERO;case THREE.OneFactor:return L.ONE;case THREE.SrcColorFactor:return L.SRC_COLOR;case THREE.OneMinusSrcColorFactor:return L.ONE_MINUS_SRC_COLOR;case THREE.SrcAlphaFactor:return L.SRC_ALPHA;case THREE.OneMinusSrcAlphaFactor:return L.ONE_MINUS_SRC_ALPHA;case THREE.DstAlphaFactor:return L.DST_ALPHA;case THREE.OneMinusDstAlphaFactor:return L.ONE_MINUS_DST_ALPHA;case THREE.DstColorFactor:return L.DST_COLOR;case THREE.OneMinusDstColorFactor:return L.ONE_MINUS_DST_COLOR;case THREE.SrcAlphaSaturateFactor:return L.SRC_ALPHA_SATURATE}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var y=void 0!==(e=e||{}).canvas?e.canvas:document.createElement("canvas"),x=void 0!==e.precision?e.precision:"highp",_=void 0===e.alpha||e.alpha,H=void 0===e.premultipliedAlpha||e.premultipliedAlpha,b=void 0!==e.antialias&&e.antialias,w=void 0===e.stencil||e.stencil,S=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,M=void 0!==e.clearColor?new THREE.Color(e.clearColor):new THREE.Color(0),A=void 0!==e.clearAlpha?e.clearAlpha:0,C=void 0!==e.maxLights?e.maxLights:4;this.domElement=y,this.context=null,this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0,this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1,this.shadowMapCullFrontFaces=this.shadowMapSoft=this.shadowMapAutoUpdate=!0,this.shadowMapCascade=this.shadowMapDebug=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var L,D=this,F=[],P=null,U=null,z=-1,B=null,N=null,V=0,O=-1,I=-1,k=-1,W=-1,G=-1,j=-1,X=-1,Y=-1,q=null,Z=null,Q=null,K=null,J=0,$=0,ee=0,te=0,re=0,ie=0,ne=new THREE.Frustum,oe=new THREE.Matrix4,ae=new THREE.Matrix4,se=new THREE.Vector4,le=new THREE.Vector3,he=!0,ce={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],angles:[],exponents:[]}};(L=function(){var e;try{if(!(e=y.getContext("experimental-webgl",{alpha:_,premultipliedAlpha:H,antialias:b,stencil:w,preserveDrawingBuffer:S})))throw"Error creating WebGL context."}catch(e){console.error(e)}return e.getExtension("OES_texture_float")||console.log("THREE.WebGLRenderer: Float textures not supported."),e}()).clearColor(0,0,0,1),L.clearDepth(1),L.clearStencil(0),L.enable(L.DEPTH_TEST),L.depthFunc(L.LEQUAL),L.frontFace(L.CCW),L.cullFace(L.BACK),L.enable(L.CULL_FACE),L.enable(L.BLEND),L.blendEquation(L.FUNC_ADD),L.blendFunc(L.SRC_ALPHA,L.ONE_MINUS_SRC_ALPHA),L.clearColor(M.r,M.g,M.b,A),this.context=L;var fe=L.getParameter(L.MAX_VERTEX_TEXTURE_IMAGE_UNITS);L.getParameter(L.MAX_TEXTURE_SIZE);var ue=L.getParameter(L.MAX_CUBE_MAP_TEXTURE_SIZE);this.getContext=function(){return L},this.supportsVertexTextures=function(){return fe>0},this.setSize=function(e,t){y.width=e,y.height=t,this.setViewport(0,0,y.width,y.height)},this.setViewport=function(e,t,r,i){J=e,$=t,ee=r,te=i,L.viewport(J,$,ee,te)},this.setScissor=function(e,t,r,i){L.scissor(e,t,r,i)},this.enableScissorTest=function(e){e?L.enable(L.SCISSOR_TEST):L.disable(L.SCISSOR_TEST)},this.setClearColorHex=function(e,t){M.setHex(e),A=t,L.clearColor(M.r,M.g,M.b,A)},this.setClearColor=function(e,t){M.copy(e),A=t,L.clearColor(M.r,M.g,M.b,A)},this.getClearColor=function(){return M},this.getClearAlpha=function(){return A},this.clear=function(e,t,r){var i=0;(void 0===e||e)&&(i|=L.COLOR_BUFFER_BIT),(void 0===t||t)&&(i|=L.DEPTH_BUFFER_BIT),(void 0===r||r)&&(i|=L.STENCIL_BUFFER_BIT),L.clear(i)},this.clearTarget=function(e,t,r,i){this.setRenderTarget(e),this.clear(t,r,i)},this.addPostPlugin=function(e){e.init(this),this.renderPluginsPost.push(e)},this.addPrePlugin=function(e){e.init(this),this.renderPluginsPre.push(e)},this.deallocateObject=function(e){if(e.__webglInit)if(e.__webglInit=!1,delete e._modelViewMatrix,delete e._normalMatrix,delete e._normalMatrixArray,delete e._modelViewMatrixArray,delete e._objectMatrixArray,e instanceof THREE.Mesh)for(var t in e.geometry.geometryGroups){var r=e.geometry.geometryGroups[t];L.deleteBuffer(r.__webglVertexBuffer),L.deleteBuffer(r.__webglNormalBuffer),L.deleteBuffer(r.__webglTangentBuffer),L.deleteBuffer(r.__webglColorBuffer),L.deleteBuffer(r.__webglUVBuffer),L.deleteBuffer(r.__webglUV2Buffer),L.deleteBuffer(r.__webglSkinVertexABuffer),L.deleteBuffer(r.__webglSkinVertexBBuffer),L.deleteBuffer(r.__webglSkinIndicesBuffer),L.deleteBuffer(r.__webglSkinWeightsBuffer),L.deleteBuffer(r.__webglFaceBuffer),L.deleteBuffer(r.__webglLineBuffer);var i=void 0,n=void 0;if(r.numMorphTargets)for(i=0,n=r.numMorphTargets;i<n;i++)L.deleteBuffer(r.__webglMorphTargetsBuffers[i]);if(r.numMorphNormals)for(i=0,n=r.numMorphNormals;i<n;i++)L.deleteBuffer(r.__webglMorphNormalsBuffers[i]);if(r.__webglCustomAttributesList)for(i in i=void 0,r.__webglCustomAttributesList)L.deleteBuffer(r.__webglCustomAttributesList[i].buffer);D.info.memory.geometries--}else e instanceof THREE.Line&&(e=e.geometry,L.deleteBuffer(e.__webglVertexBuffer),L.deleteBuffer(e.__webglColorBuffer),D.info.memory.geometries--)},this.deallocateTexture=function(e){e.__webglInit&&(e.__webglInit=!1,L.deleteTexture(e.__webglTexture),D.info.memory.textures--)},this.deallocateRenderTarget=function(e){if(e&&e.__webglTexture)if(L.deleteTexture(e.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(var t=0;t<6;t++)L.deleteFramebuffer(e.__webglFramebuffer[t]),L.deleteRenderbuffer(e.__webglRenderbuffer[t]);else L.deleteFramebuffer(e.__webglFramebuffer),L.deleteRenderbuffer(e.__webglRenderbuffer)},this.updateShadowMap=function(e,t){P=null,z=B=Y=X=k=-1,he=!0,I=O=-1,this.shadowMapPlugin.update(e,t)},this.renderBufferImmediate=function(e,t,r){if(e.__webglVertexBuffer||(e.__webglVertexBuffer=L.createBuffer()),e.__webglNormalBuffer||(e.__webglNormalBuffer=L.createBuffer()),e.hasPos&&(L.bindBuffer(L.ARRAY_BUFFER,e.__webglVertexBuffer),L.bufferData(L.ARRAY_BUFFER,e.positionArray,L.DYNAMIC_DRAW),L.enableVertexAttribArray(t.attributes.position),L.vertexAttribPointer(t.attributes.position,3,L.FLOAT,!1,0,0)),e.hasNormal){if(L.bindBuffer(L.ARRAY_BUFFER,e.__webglNormalBuffer),r===THREE.FlatShading){var i,n,o,a,s,l,h,c=3*e.count;for(h=0;h<c;h+=9)i=(r=e.normalArray)[h],n=r[h+1],o=r[h+2],a=r[h+3],s=r[h+4],l=r[h+5],i=(i+a+r[h+6])/3,n=(n+s+r[h+7])/3,o=(o+l+r[h+8])/3,r[h]=i,r[h+1]=n,r[h+2]=o,r[h+3]=i,r[h+4]=n,r[h+5]=o,r[h+6]=i,r[h+7]=n,r[h+8]=o}L.bufferData(L.ARRAY_BUFFER,e.normalArray,L.DYNAMIC_DRAW),L.enableVertexAttribArray(t.attributes.normal),L.vertexAttribPointer(t.attributes.normal,3,L.FLOAT,!1,0,0)}L.drawArrays(L.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,r,i,n,o){if(!1!==i.visible&&(e=(r=d(e,t,r,i,o)).attributes,t=!1,(i=16777215*n.id+2*r.id+(i.wireframe?1:0))!==B&&(B=i,t=!0),o instanceof THREE.Mesh))for(i=0,r=(o=n.offsets).length;i<r;++i)t&&(L.bindBuffer(L.ARRAY_BUFFER,n.vertexPositionBuffer),L.vertexAttribPointer(e.position,n.vertexPositionBuffer.itemSize,L.FLOAT,!1,0,12*o[i].index),e.normal>=0&&n.vertexNormalBuffer&&(L.bindBuffer(L.ARRAY_BUFFER,n.vertexNormalBuffer),L.vertexAttribPointer(e.normal,n.vertexNormalBuffer.itemSize,L.FLOAT,!1,0,12*o[i].index)),e.uv>=0&&n.vertexUvBuffer&&(n.vertexUvBuffer?(L.bindBuffer(L.ARRAY_BUFFER,n.vertexUvBuffer),L.vertexAttribPointer(e.uv,n.vertexUvBuffer.itemSize,L.FLOAT,!1,0,8*o[i].index),L.enableVertexAttribArray(e.uv)):L.disableVertexAttribArray(e.uv)),e.color>=0&&n.vertexColorBuffer&&(L.bindBuffer(L.ARRAY_BUFFER,n.vertexColorBuffer),L.vertexAttribPointer(e.color,n.vertexColorBuffer.itemSize,L.FLOAT,!1,0,16*o[i].index)),L.bindBuffer(L.ELEMENT_ARRAY_BUFFER,n.vertexIndexBuffer)),L.drawElements(L.TRIANGLES,o[i].count,L.UNSIGNED_SHORT,2*o[i].start),D.info.render.calls++,D.info.render.vertices=D.info.render.vertices+o[i].count,D.info.render.faces=D.info.render.faces+o[i].count/3},this.renderBuffer=function(e,t,r,i,n,o){if(!1!==i.visible){var a,s;t=(r=d(e,t,r,i,o)).attributes,e=!1;if((r=16777215*n.id+2*r.id+(i.wireframe?1:0))!==B&&(B=r,e=!0),!i.morphTargets&&t.position>=0)e&&(L.bindBuffer(L.ARRAY_BUFFER,n.__webglVertexBuffer),L.vertexAttribPointer(t.position,3,L.FLOAT,!1,0,0));else if(o.morphTargetBase){if(r=i.program.attributes,-1!==o.morphTargetBase?(L.bindBuffer(L.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[o.morphTargetBase]),L.vertexAttribPointer(r.position,3,L.FLOAT,!1,0,0)):r.position>=0&&(L.bindBuffer(L.ARRAY_BUFFER,n.__webglVertexBuffer),L.vertexAttribPointer(r.position,3,L.FLOAT,!1,0,0)),o.morphTargetForcedOrder.length){a=0;var l=o.morphTargetForcedOrder;for(s=o.morphTargetInfluences;a<i.numSupportedMorphTargets&&a<l.length;)L.bindBuffer(L.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[l[a]]),L.vertexAttribPointer(r["morphTarget"+a],3,L.FLOAT,!1,0,0),i.morphNormals&&(L.bindBuffer(L.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[l[a]]),L.vertexAttribPointer(r["morphNormal"+a],3,L.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[a]=s[l[a]],a++}else{l=[];var h,c=-1,f=0,u=(s=o.morphTargetInfluences).length;for(a=0,-1!==o.morphTargetBase&&(l[o.morphTargetBase]=!0);a<i.numSupportedMorphTargets;){for(h=0;h<u;h++)!l[h]&&s[h]>c&&(c=s[f=h]);L.bindBuffer(L.ARRAY_BUFFER,n.__webglMorphTargetsBuffers[f]),L.vertexAttribPointer(r["morphTarget"+a],3,L.FLOAT,!1,0,0),i.morphNormals&&(L.bindBuffer(L.ARRAY_BUFFER,n.__webglMorphNormalsBuffers[f]),L.vertexAttribPointer(r["morphNormal"+a],3,L.FLOAT,!1,0,0)),o.__webglMorphTargetInfluences[a]=c,l[f]=1,c=-1,a++}}null!==i.program.uniforms.morphTargetInfluences&&L.uniform1fv(i.program.uniforms.morphTargetInfluences,o.__webglMorphTargetInfluences)}if(e){if(n.__webglCustomAttributesList)for(a=0,s=n.__webglCustomAttributesList.length;a<s;a++)t[(r=n.__webglCustomAttributesList[a]).buffer.belongsToAttribute]>=0&&(L.bindBuffer(L.ARRAY_BUFFER,r.buffer),L.vertexAttribPointer(t[r.buffer.belongsToAttribute],r.size,L.FLOAT,!1,0,0));t.color>=0&&(L.bindBuffer(L.ARRAY_BUFFER,n.__webglColorBuffer),L.vertexAttribPointer(t.color,3,L.FLOAT,!1,0,0)),t.normal>=0&&(L.bindBuffer(L.ARRAY_BUFFER,n.__webglNormalBuffer),L.vertexAttribPointer(t.normal,3,L.FLOAT,!1,0,0)),t.tangent>=0&&(L.bindBuffer(L.ARRAY_BUFFER,n.__webglTangentBuffer),L.vertexAttribPointer(t.tangent,4,L.FLOAT,!1,0,0)),t.uv>=0&&(n.__webglUVBuffer?(L.bindBuffer(L.ARRAY_BUFFER,n.__webglUVBuffer),L.vertexAttribPointer(t.uv,2,L.FLOAT,!1,0,0),L.enableVertexAttribArray(t.uv)):L.disableVertexAttribArray(t.uv)),t.uv2>=0&&(n.__webglUV2Buffer?(L.bindBuffer(L.ARRAY_BUFFER,n.__webglUV2Buffer),L.vertexAttribPointer(t.uv2,2,L.FLOAT,!1,0,0),L.enableVertexAttribArray(t.uv2)):L.disableVertexAttribArray(t.uv2)),i.skinning&&t.skinVertexA>=0&&t.skinVertexB>=0&&t.skinIndex>=0&&t.skinWeight>=0&&(L.bindBuffer(L.ARRAY_BUFFER,n.__webglSkinVertexABuffer),L.vertexAttribPointer(t.skinVertexA,4,L.FLOAT,!1,0,0),L.bindBuffer(L.ARRAY_BUFFER,n.__webglSkinVertexBBuffer),L.vertexAttribPointer(t.skinVertexB,4,L.FLOAT,!1,0,0),L.bindBuffer(L.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),L.vertexAttribPointer(t.skinIndex,4,L.FLOAT,!1,0,0),L.bindBuffer(L.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),L.vertexAttribPointer(t.skinWeight,4,L.FLOAT,!1,0,0))}o instanceof THREE.Mesh?(i.wireframe?((i=i.wireframeLinewidth)!==K&&(L.lineWidth(i),K=i),e&&L.bindBuffer(L.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer),L.drawElements(L.LINES,n.__webglLineCount,L.UNSIGNED_SHORT,0)):(e&&L.bindBuffer(L.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer),L.drawElements(L.TRIANGLES,n.__webglFaceCount,L.UNSIGNED_SHORT,0)),D.info.render.calls++,D.info.render.vertices=D.info.render.vertices+n.__webglFaceCount,D.info.render.faces=D.info.render.faces+n.__webglFaceCount/3):o instanceof THREE.Line&&(o=o.type===THREE.LineStrip?L.LINE_STRIP:L.LINES,(i=i.linewidth)!==K&&(L.lineWidth(i),K=i),L.drawArrays(o,0,n.__webglLineCount),D.info.render.calls++)}},this.render=function(e,t,r,i){var n,o,c,f,u=e.__lights,d=e.fog;for(z=-1,he=!0,void 0===t.parent&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),e.add(t)),this.autoUpdateScene&&e.updateMatrixWorld(),t._viewMatrixArray||(t._viewMatrixArray=new Float32Array(16)),t._projectionMatrixArray||(t._projectionMatrixArray=new Float32Array(16)),t.matrixWorldInverse.getInverse(t.matrixWorld),t.matrixWorldInverse.flattenToArray(t._viewMatrixArray),t.projectionMatrix.flattenToArray(t._projectionMatrixArray),oe.multiply(t.projectionMatrix,t.matrixWorldInverse),ne.setFromMatrix(oe),this.autoUpdateObjects&&this.initWebGLObjects(e),s(this.renderPluginsPre,e,t),D.info.render.calls=0,D.info.render.vertices=0,D.info.render.faces=0,D.info.render.points=0,this.setRenderTarget(r),(this.autoClear||i)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),i=0,n=(f=e.__webglObjects).length;i<n;i++)if(c=(o=f[i]).object,o.render=!1,c.visible&&(!(c instanceof THREE.Mesh||c instanceof THREE.ParticleSystem)||!c.frustumCulled||ne.contains(c))){E(c,t);var m=o,v=m.object,g=m.buffer,T=void 0;T=T=void 0;(T=v.material)instanceof THREE.MeshFaceMaterial?(T=g.materialIndex)>=0&&((T=v.geometry.materials[T]).transparent?(m.transparent=T,m.opaque=null):(m.opaque=T,m.transparent=null)):T&&(T.transparent?(m.transparent=T,m.opaque=null):(m.opaque=T,m.transparent=null)),o.render=!0,this.sortObjects&&(c.renderDepth?o.z=c.renderDepth:(se.copy(c.matrixWorld.getPosition()),oe.multiplyVector3(se),o.z=se.z))}for(this.sortObjects&&f.sort(a),i=0,n=(f=e.__webglObjectsImmediate).length;i<n;i++)(c=(o=f[i]).object).visible&&(E(c,t),(c=o.object.material).transparent?(o.transparent=c,o.opaque=null):(o.opaque=c,o.transparent=null));e.overrideMaterial?(i=e.overrideMaterial,this.setBlending(i.blending,i.blendEquation,i.blendSrc,i.blendDst),this.setDepthTest(i.depthTest),this.setDepthWrite(i.depthWrite),p(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits),l(e.__webglObjects,!1,"",t,u,d,!0,i),h(e.__webglObjectsImmediate,"",t,u,d,!1,i)):(this.setBlending(THREE.NormalBlending),l(e.__webglObjects,!0,"opaque",t,u,d,!1),h(e.__webglObjectsImmediate,"opaque",t,u,d,!1),l(e.__webglObjects,!1,"transparent",t,u,d,!0),h(e.__webglObjectsImmediate,"transparent",t,u,d,!0)),s(this.renderPluginsPost,e,t),r&&r.generateMipmaps&&r.minFilter!==THREE.NearestFilter&&r.minFilter!==THREE.LinearFilter&&(r instanceof THREE.WebGLRenderTargetCube?(L.bindTexture(L.TEXTURE_CUBE_MAP,r.__webglTexture),L.generateMipmap(L.TEXTURE_CUBE_MAP),L.bindTexture(L.TEXTURE_CUBE_MAP,null)):(L.bindTexture(L.TEXTURE_2D,r.__webglTexture),L.generateMipmap(L.TEXTURE_2D),L.bindTexture(L.TEXTURE_2D,null))),this.setDepthTest(!0),this.setDepthWrite(!0)},this.renderImmediateObject=function(e,t,r,i,n){var o=d(e,t,r,i,n);B=-1,D.setObjectFaces(n),n.immediateRenderCallback?n.immediateRenderCallback(o,L,ne):n.render(function(e){D.renderBufferImmediate(e,o,i.shading)})},this.initWebGLObjects=function(e){for(e.__webglObjects||(e.__webglObjects=[],e.__webglObjectsImmediate=[],e.__webglSprites=[],e.__webglFlares=[]);e.__objectsAdded.length;){var a=e.__objectsAdded[0],s=e,l=void 0,h=void 0,d=void 0;if(!a.__webglInit)if(a.__webglInit=!0,a._modelViewMatrix=new THREE.Matrix4,a._normalMatrix=new THREE.Matrix3,a instanceof THREE.Mesh){if((h=a.geometry)instanceof THREE.Geometry){if(void 0===h.geometryGroups){var E,p=h,m=void 0,v=void 0,g=void 0,T=void 0,R=void 0,y=void 0,x={},_=p.morphTargets.length,H=p.morphNormals.length;for(p.geometryGroups={},m=0,E=p.faces.length;m<E;m++)void 0===x[R=void 0!==(g=(v=p.faces[m]).materialIndex)?g:-1]&&(x[R]={hash:R,counter:0}),y=x[R].hash+"_"+x[R].counter,void 0===p.geometryGroups[y]&&(p.geometryGroups[y]={faces3:[],faces4:[],materialIndex:g,vertices:0,numMorphTargets:_,numMorphNormals:H}),T=v instanceof THREE.Face3?3:4,p.geometryGroups[y].vertices+T>65535&&(x[R].counter=x[R].counter+1,y=x[R].hash+"_"+x[R].counter,void 0===p.geometryGroups[y]&&(p.geometryGroups[y]={faces3:[],faces4:[],materialIndex:g,vertices:0,numMorphTargets:_,numMorphNormals:H})),v instanceof THREE.Face3?p.geometryGroups[y].faces3.push(m):p.geometryGroups[y].faces4.push(m),p.geometryGroups[y].vertices=p.geometryGroups[y].vertices+T;p.geometryGroupsList=[];var b=void 0;for(b in p.geometryGroups)p.geometryGroups[b].id=V++,p.geometryGroupsList.push(p.geometryGroups[b])}for(l in h.geometryGroups)if(!(d=h.geometryGroups[l]).__webglVertexBuffer){var w=d;w.__webglVertexBuffer=L.createBuffer(),w.__webglNormalBuffer=L.createBuffer(),w.__webglTangentBuffer=L.createBuffer(),w.__webglColorBuffer=L.createBuffer(),w.__webglUVBuffer=L.createBuffer(),w.__webglUV2Buffer=L.createBuffer(),w.__webglSkinVertexABuffer=L.createBuffer(),w.__webglSkinVertexBBuffer=L.createBuffer(),w.__webglSkinIndicesBuffer=L.createBuffer(),w.__webglSkinWeightsBuffer=L.createBuffer(),w.__webglFaceBuffer=L.createBuffer(),w.__webglLineBuffer=L.createBuffer();var S=void 0,M=void 0;if(w.numMorphTargets)for(w.__webglMorphTargetsBuffers=[],S=0,M=w.numMorphTargets;S<M;S++)w.__webglMorphTargetsBuffers.push(L.createBuffer());if(w.numMorphNormals)for(w.__webglMorphNormalsBuffers=[],S=0,M=w.numMorphNormals;S<M;S++)w.__webglMorphNormalsBuffers.push(L.createBuffer());D.info.memory.geometries++;var A=d,C=a,F=C.geometry,P=A.faces3,U=A.faces4,z=3*P.length+4*U.length,B=1*P.length+2*U.length,N=3*P.length+4*U.length,O=r(C,A),I=n(O),k=i(O),W=!!O.vertexColors&&O.vertexColors;A.__vertexArray=new Float32Array(3*z),k&&(A.__normalArray=new Float32Array(3*z)),F.hasTangents&&(A.__tangentArray=new Float32Array(4*z)),W&&(A.__colorArray=new Float32Array(3*z)),I&&((F.faceUvs.length>0||F.faceVertexUvs.length>0)&&(A.__uvArray=new Float32Array(2*z)),(F.faceUvs.length>1||F.faceVertexUvs.length>1)&&(A.__uv2Array=new Float32Array(2*z))),C.geometry.skinWeights.length&&C.geometry.skinIndices.length&&(A.__skinVertexAArray=new Float32Array(4*z),A.__skinVertexBArray=new Float32Array(4*z),A.__skinIndexArray=new Float32Array(4*z),A.__skinWeightArray=new Float32Array(4*z)),A.__faceArray=new Uint16Array(3*B),A.__lineArray=new Uint16Array(2*N);var G=void 0,j=void 0;if(A.numMorphTargets)for(A.__morphTargetsArrays=[],G=0,j=A.numMorphTargets;G<j;G++)A.__morphTargetsArrays.push(new Float32Array(3*z));if(A.numMorphNormals)for(A.__morphNormalsArrays=[],G=0,j=A.numMorphNormals;G<j;G++)A.__morphNormalsArrays.push(new Float32Array(3*z));if(A.__webglFaceCount=3*B,A.__webglLineCount=2*N,O.attributes){void 0===A.__webglCustomAttributesList&&(A.__webglCustomAttributesList=[]);var X=void 0;for(X in O.attributes){var Y,q=O.attributes[X],Z={};for(Y in q)Z[Y]=q[Y];if(!Z.__webglInitialized||Z.createUniqueBuffers){Z.__webglInitialized=!0;var Q=1;"v2"===Z.type?Q=2:"v3"===Z.type?Q=3:"v4"===Z.type?Q=4:"c"===Z.type&&(Q=3),Z.size=Q,Z.array=new Float32Array(z*Q),Z.buffer=L.createBuffer(),Z.buffer.belongsToAttribute=X,q.needsUpdate=!0,Z.__original=q}A.__webglCustomAttributesList.push(Z)}}A.__inittedArrays=!0,h.verticesNeedUpdate=!0,h.morphTargetsNeedUpdate=!0,h.elementsNeedUpdate=!0,h.uvsNeedUpdate=!0,h.normalsNeedUpdate=!0,h.tangetsNeedUpdate=!0,h.colorsNeedUpdate=!0}}}else if(a instanceof THREE.Line){if(!(h=a.geometry).__webglVertexBuffer){var K=h;K.__webglVertexBuffer=L.createBuffer(),K.__webglColorBuffer=L.createBuffer(),D.info.memory.geometries++;var J=h,$=a,ee=J.vertices.length;J.__vertexArray=new Float32Array(3*ee),J.__colorArray=new Float32Array(3*ee),J.__webglLineCount=ee,t(J,$),h.verticesNeedUpdate=!0,h.colorsNeedUpdate=!0}}else if(a instanceof THREE.ParticleSystem&&!(h=a.geometry).__webglVertexBuffer){var te=h;te.__webglVertexBuffer=L.createBuffer(),te.__webglColorBuffer=L.createBuffer(),D.info.geometries++;var re=h,ie=a,ne=re.vertices.length;re.__vertexArray=new Float32Array(3*ne),re.__colorArray=new Float32Array(3*ne),re.__sortArray=[],re.__webglParticleCount=ne,t(re,ie),h.verticesNeedUpdate=!0,h.colorsNeedUpdate=!0}if(!a.__webglActive){if(a instanceof THREE.Mesh)if((h=a.geometry)instanceof THREE.BufferGeometry)c(s.__webglObjects,h,a);else for(l in h.geometryGroups)d=h.geometryGroups[l],c(s.__webglObjects,d,a);else a instanceof THREE.Line&&(h=a.geometry,c(s.__webglObjects,h,a));a.__webglActive=!0}e.__objectsAdded.splice(0,1)}for(;e.__objectsRemoved.length;){var oe=e.__objectsRemoved[0];if(oe instanceof THREE.Mesh||oe instanceof THREE.Line)for(var ae=e.__webglObjects,se=oe,le=ae.length-1;le>=0;le--)ae[le].object===se&&ae.splice(le,1);oe.__webglActive=!1,e.__objectsRemoved.splice(0,1)}for(var he=0,ce=e.__webglObjects.length;he<ce;he++){var fe=e.__webglObjects[he].object,ue=fe.geometry,de=void 0,Ee=void 0,pe=void 0;if(fe instanceof THREE.Mesh)if(ue instanceof THREE.BufferGeometry)ue.verticesNeedUpdate=!1,ue.elementsNeedUpdate=!1,ue.uvsNeedUpdate=!1,ue.normalsNeedUpdate=!1,ue.colorsNeedUpdate=!1;else{for(var me=0,ve=ue.geometryGroupsList.length;me<ve;me++)if(Ee=(pe=r(fe,de=ue.geometryGroupsList[me])).attributes&&f(pe),ue.verticesNeedUpdate||ue.morphTargetsNeedUpdate||ue.elementsNeedUpdate||ue.uvsNeedUpdate||ue.normalsNeedUpdate||ue.colorsNeedUpdate||ue.tangetsNeedUpdate||Ee){var ge=de,Te=fe,Re=L.DYNAMIC_DRAW,ye=!ue.dynamic,xe=pe;if(ge.__inittedArrays){var _e=i(xe),He=!!xe.vertexColors&&xe.vertexColors,be=n(xe),we=_e===THREE.SmoothShading,Se=void 0,Me=void 0,Ae=void 0,Ce=void 0,Le=void 0,De=void 0,Fe=void 0,Pe=void 0,Ue=void 0,ze=void 0,Be=void 0,Ne=void 0,Ve=void 0,Oe=void 0,Ie=void 0,ke=void 0,We=void 0,Ge=void 0,je=void 0,Xe=void 0,Ye=void 0,qe=void 0,Ze=void 0,Qe=void 0,Ke=void 0,Je=void 0,$e=void 0,et=void 0,tt=void 0,rt=void 0,it=void 0,nt=void 0,ot=void 0,at=void 0,st=void 0,lt=void 0,ht=void 0,ct=void 0,ft=void 0,ut=void 0,dt=void 0,Et=void 0,pt=void 0,mt=void 0,vt=void 0,gt=void 0,Tt=void 0,Rt=void 0,yt=void 0,xt=void 0,_t=void 0,Ht=void 0,bt=void 0,wt=void 0,St=0,Mt=0,At=0,Ct=0,Lt=0,Dt=0,Ft=0,Pt=0,Ut=0,zt=0,Bt=0,Nt=0,Vt=void 0,Ot=ge.__vertexArray,It=ge.__uvArray,kt=ge.__uv2Array,Wt=ge.__normalArray,Gt=ge.__tangentArray,jt=ge.__colorArray,Xt=ge.__skinVertexAArray,Yt=ge.__skinVertexBArray,qt=ge.__skinIndexArray,Zt=ge.__skinWeightArray,Qt=ge.__morphTargetsArrays,Kt=ge.__morphNormalsArrays,Jt=ge.__webglCustomAttributesList,$t=void 0,er=ge.__faceArray,tr=ge.__lineArray,rr=Te.geometry,ir=rr.elementsNeedUpdate,nr=rr.uvsNeedUpdate,or=rr.normalsNeedUpdate,ar=rr.tangetsNeedUpdate,sr=rr.colorsNeedUpdate,lr=rr.morphTargetsNeedUpdate,hr=rr.vertices,cr=ge.faces3,fr=ge.faces4,ur=rr.faces,dr=rr.faceVertexUvs[0],Er=rr.faceVertexUvs[1],pr=rr.skinVerticesA,mr=rr.skinVerticesB,vr=rr.skinIndices,gr=rr.skinWeights,Tr=rr.morphTargets,Rr=rr.morphNormals;if(rr.verticesNeedUpdate){for(Se=0,Me=cr.length;Se<Me;Se++)Ne=hr[(Ce=ur[cr[Se]]).a],Ve=hr[Ce.b],Oe=hr[Ce.c],Ot[Mt]=Ne.x,Ot[Mt+1]=Ne.y,Ot[Mt+2]=Ne.z,Ot[Mt+3]=Ve.x,Ot[Mt+4]=Ve.y,Ot[Mt+5]=Ve.z,Ot[Mt+6]=Oe.x,Ot[Mt+7]=Oe.y,Ot[Mt+8]=Oe.z,Mt+=9;for(Se=0,Me=fr.length;Se<Me;Se++)Ne=hr[(Ce=ur[fr[Se]]).a],Ve=hr[Ce.b],Oe=hr[Ce.c],Ie=hr[Ce.d],Ot[Mt]=Ne.x,Ot[Mt+1]=Ne.y,Ot[Mt+2]=Ne.z,Ot[Mt+3]=Ve.x,Ot[Mt+4]=Ve.y,Ot[Mt+5]=Ve.z,Ot[Mt+6]=Oe.x,Ot[Mt+7]=Oe.y,Ot[Mt+8]=Oe.z,Ot[Mt+9]=Ie.x,Ot[Mt+10]=Ie.y,Ot[Mt+11]=Ie.z,Mt+=12;L.bindBuffer(L.ARRAY_BUFFER,ge.__webglVertexBuffer),L.bufferData(L.ARRAY_BUFFER,Ot,Re)}if(lr)for(yt=0,xt=Tr.length;yt<xt;yt++){for(Se=Bt=0,Me=cr.length;Se<Me;Se++)Ce=ur[bt=cr[Se]],Ne=Tr[yt].vertices[Ce.a],Ve=Tr[yt].vertices[Ce.b],Oe=Tr[yt].vertices[Ce.c],(_t=Qt[yt])[Bt]=Ne.x,_t[Bt+1]=Ne.y,_t[Bt+2]=Ne.z,_t[Bt+3]=Ve.x,_t[Bt+4]=Ve.y,_t[Bt+5]=Ve.z,_t[Bt+6]=Oe.x,_t[Bt+7]=Oe.y,_t[Bt+8]=Oe.z,xe.morphNormals&&(we?(Xe=(wt=Rr[yt].vertexNormals[bt]).a,Ye=wt.b,qe=wt.c):qe=Ye=Xe=Rr[yt].faceNormals[bt],(Ht=Kt[yt])[Bt]=Xe.x,Ht[Bt+1]=Xe.y,Ht[Bt+2]=Xe.z,Ht[Bt+3]=Ye.x,Ht[Bt+4]=Ye.y,Ht[Bt+5]=Ye.z,Ht[Bt+6]=qe.x,Ht[Bt+7]=qe.y,Ht[Bt+8]=qe.z),Bt+=9;for(Se=0,Me=fr.length;Se<Me;Se++)Ce=ur[bt=fr[Se]],Ne=Tr[yt].vertices[Ce.a],Ve=Tr[yt].vertices[Ce.b],Oe=Tr[yt].vertices[Ce.c],Ie=Tr[yt].vertices[Ce.d],(_t=Qt[yt])[Bt]=Ne.x,_t[Bt+1]=Ne.y,_t[Bt+2]=Ne.z,_t[Bt+3]=Ve.x,_t[Bt+4]=Ve.y,_t[Bt+5]=Ve.z,_t[Bt+6]=Oe.x,_t[Bt+7]=Oe.y,_t[Bt+8]=Oe.z,_t[Bt+9]=Ie.x,_t[Bt+10]=Ie.y,_t[Bt+11]=Ie.z,xe.morphNormals&&(we?(Xe=(wt=Rr[yt].vertexNormals[bt]).a,Ye=wt.b,qe=wt.c,Ze=wt.d):Ze=qe=Ye=Xe=Rr[yt].faceNormals[bt],(Ht=Kt[yt])[Bt]=Xe.x,Ht[Bt+1]=Xe.y,Ht[Bt+2]=Xe.z,Ht[Bt+3]=Ye.x,Ht[Bt+4]=Ye.y,Ht[Bt+5]=Ye.z,Ht[Bt+6]=qe.x,Ht[Bt+7]=qe.y,Ht[Bt+8]=qe.z,Ht[Bt+9]=Ze.x,Ht[Bt+10]=Ze.y,Ht[Bt+11]=Ze.z),Bt+=12;L.bindBuffer(L.ARRAY_BUFFER,ge.__webglMorphTargetsBuffers[yt]),L.bufferData(L.ARRAY_BUFFER,Qt[yt],Re),xe.morphNormals&&(L.bindBuffer(L.ARRAY_BUFFER,ge.__webglMorphNormalsBuffers[yt]),L.bufferData(L.ARRAY_BUFFER,Kt[yt],Re))}if(gr.length){for(Se=0,Me=cr.length;Se<Me;Se++)et=gr[(Ce=ur[cr[Se]]).a],tt=gr[Ce.b],rt=gr[Ce.c],Zt[zt]=et.x,Zt[zt+1]=et.y,Zt[zt+2]=et.z,Zt[zt+3]=et.w,Zt[zt+4]=tt.x,Zt[zt+5]=tt.y,Zt[zt+6]=tt.z,Zt[zt+7]=tt.w,Zt[zt+8]=rt.x,Zt[zt+9]=rt.y,Zt[zt+10]=rt.z,Zt[zt+11]=rt.w,nt=vr[Ce.a],ot=vr[Ce.b],at=vr[Ce.c],qt[zt]=nt.x,qt[zt+1]=nt.y,qt[zt+2]=nt.z,qt[zt+3]=nt.w,qt[zt+4]=ot.x,qt[zt+5]=ot.y,qt[zt+6]=ot.z,qt[zt+7]=ot.w,qt[zt+8]=at.x,qt[zt+9]=at.y,qt[zt+10]=at.z,qt[zt+11]=at.w,lt=pr[Ce.a],ht=pr[Ce.b],ct=pr[Ce.c],Xt[zt]=lt.x,Xt[zt+1]=lt.y,Xt[zt+2]=lt.z,Xt[zt+3]=1,Xt[zt+4]=ht.x,Xt[zt+5]=ht.y,Xt[zt+6]=ht.z,Xt[zt+7]=1,Xt[zt+8]=ct.x,Xt[zt+9]=ct.y,Xt[zt+10]=ct.z,Xt[zt+11]=1,ut=mr[Ce.a],dt=mr[Ce.b],Et=mr[Ce.c],Yt[zt]=ut.x,Yt[zt+1]=ut.y,Yt[zt+2]=ut.z,Yt[zt+3]=1,Yt[zt+4]=dt.x,Yt[zt+5]=dt.y,Yt[zt+6]=dt.z,Yt[zt+7]=1,Yt[zt+8]=Et.x,Yt[zt+9]=Et.y,Yt[zt+10]=Et.z,Yt[zt+11]=1,zt+=12;for(Se=0,Me=fr.length;Se<Me;Se++)et=gr[(Ce=ur[fr[Se]]).a],tt=gr[Ce.b],rt=gr[Ce.c],it=gr[Ce.d],Zt[zt]=et.x,Zt[zt+1]=et.y,Zt[zt+2]=et.z,Zt[zt+3]=et.w,Zt[zt+4]=tt.x,Zt[zt+5]=tt.y,Zt[zt+6]=tt.z,Zt[zt+7]=tt.w,Zt[zt+8]=rt.x,Zt[zt+9]=rt.y,Zt[zt+10]=rt.z,Zt[zt+11]=rt.w,Zt[zt+12]=it.x,Zt[zt+13]=it.y,Zt[zt+14]=it.z,Zt[zt+15]=it.w,nt=vr[Ce.a],ot=vr[Ce.b],at=vr[Ce.c],st=vr[Ce.d],qt[zt]=nt.x,qt[zt+1]=nt.y,qt[zt+2]=nt.z,qt[zt+3]=nt.w,qt[zt+4]=ot.x,qt[zt+5]=ot.y,qt[zt+6]=ot.z,qt[zt+7]=ot.w,qt[zt+8]=at.x,qt[zt+9]=at.y,qt[zt+10]=at.z,qt[zt+11]=at.w,qt[zt+12]=st.x,qt[zt+13]=st.y,qt[zt+14]=st.z,qt[zt+15]=st.w,lt=pr[Ce.a],ht=pr[Ce.b],ct=pr[Ce.c],ft=pr[Ce.d],Xt[zt]=lt.x,Xt[zt+1]=lt.y,Xt[zt+2]=lt.z,Xt[zt+3]=1,Xt[zt+4]=ht.x,Xt[zt+5]=ht.y,Xt[zt+6]=ht.z,Xt[zt+7]=1,Xt[zt+8]=ct.x,Xt[zt+9]=ct.y,Xt[zt+10]=ct.z,Xt[zt+11]=1,Xt[zt+12]=ft.x,Xt[zt+13]=ft.y,Xt[zt+14]=ft.z,Xt[zt+15]=1,ut=mr[Ce.a],dt=mr[Ce.b],Et=mr[Ce.c],pt=mr[Ce.d],Yt[zt]=ut.x,Yt[zt+1]=ut.y,Yt[zt+2]=ut.z,Yt[zt+3]=1,Yt[zt+4]=dt.x,Yt[zt+5]=dt.y,Yt[zt+6]=dt.z,Yt[zt+7]=1,Yt[zt+8]=Et.x,Yt[zt+9]=Et.y,Yt[zt+10]=Et.z,Yt[zt+11]=1,Yt[zt+12]=pt.x,Yt[zt+13]=pt.y,Yt[zt+14]=pt.z,Yt[zt+15]=1,zt+=16;zt>0&&(L.bindBuffer(L.ARRAY_BUFFER,ge.__webglSkinVertexABuffer),L.bufferData(L.ARRAY_BUFFER,Xt,Re),L.bindBuffer(L.ARRAY_BUFFER,ge.__webglSkinVertexBBuffer),L.bufferData(L.ARRAY_BUFFER,Yt,Re),L.bindBuffer(L.ARRAY_BUFFER,ge.__webglSkinIndicesBuffer),L.bufferData(L.ARRAY_BUFFER,qt,Re),L.bindBuffer(L.ARRAY_BUFFER,ge.__webglSkinWeightsBuffer),L.bufferData(L.ARRAY_BUFFER,Zt,Re))}if(sr&&He){for(Se=0,Me=cr.length;Se<Me;Se++)Fe=(Ce=ur[cr[Se]]).vertexColors,Pe=Ce.color,3===Fe.length&&He===THREE.VertexColors?(Qe=Fe[0],Ke=Fe[1],Je=Fe[2]):Je=Ke=Qe=Pe,jt[Ut]=Qe.r,jt[Ut+1]=Qe.g,jt[Ut+2]=Qe.b,jt[Ut+3]=Ke.r,jt[Ut+4]=Ke.g,jt[Ut+5]=Ke.b,jt[Ut+6]=Je.r,jt[Ut+7]=Je.g,jt[Ut+8]=Je.b,Ut+=9;for(Se=0,Me=fr.length;Se<Me;Se++)Fe=(Ce=ur[fr[Se]]).vertexColors,Pe=Ce.color,4===Fe.length&&He===THREE.VertexColors?(Qe=Fe[0],Ke=Fe[1],Je=Fe[2],$e=Fe[3]):$e=Je=Ke=Qe=Pe,jt[Ut]=Qe.r,jt[Ut+1]=Qe.g,jt[Ut+2]=Qe.b,jt[Ut+3]=Ke.r,jt[Ut+4]=Ke.g,jt[Ut+5]=Ke.b,jt[Ut+6]=Je.r,jt[Ut+7]=Je.g,jt[Ut+8]=Je.b,jt[Ut+9]=$e.r,jt[Ut+10]=$e.g,jt[Ut+11]=$e.b,Ut+=12;Ut>0&&(L.bindBuffer(L.ARRAY_BUFFER,ge.__webglColorBuffer),L.bufferData(L.ARRAY_BUFFER,jt,Re))}if(ar&&rr.hasTangents){for(Se=0,Me=cr.length;Se<Me;Se++)ke=(Ue=(Ce=ur[cr[Se]]).vertexTangents)[0],We=Ue[1],Ge=Ue[2],Gt[Ft]=ke.x,Gt[Ft+1]=ke.y,Gt[Ft+2]=ke.z,Gt[Ft+3]=ke.w,Gt[Ft+4]=We.x,Gt[Ft+5]=We.y,Gt[Ft+6]=We.z,Gt[Ft+7]=We.w,Gt[Ft+8]=Ge.x,Gt[Ft+9]=Ge.y,Gt[Ft+10]=Ge.z,Gt[Ft+11]=Ge.w,Ft+=12;for(Se=0,Me=fr.length;Se<Me;Se++)ke=(Ue=(Ce=ur[fr[Se]]).vertexTangents)[0],We=Ue[1],Ge=Ue[2],je=Ue[3],Gt[Ft]=ke.x,Gt[Ft+1]=ke.y,Gt[Ft+2]=ke.z,Gt[Ft+3]=ke.w,Gt[Ft+4]=We.x,Gt[Ft+5]=We.y,Gt[Ft+6]=We.z,Gt[Ft+7]=We.w,Gt[Ft+8]=Ge.x,Gt[Ft+9]=Ge.y,Gt[Ft+10]=Ge.z,Gt[Ft+11]=Ge.w,Gt[Ft+12]=je.x,Gt[Ft+13]=je.y,Gt[Ft+14]=je.z,Gt[Ft+15]=je.w,Ft+=16;L.bindBuffer(L.ARRAY_BUFFER,ge.__webglTangentBuffer),L.bufferData(L.ARRAY_BUFFER,Gt,Re)}if(or&&_e){for(Se=0,Me=cr.length;Se<Me;Se++)if(Le=(Ce=ur[cr[Se]]).vertexNormals,De=Ce.normal,3===Le.length&&we)for(mt=0;mt<3;mt++)gt=Le[mt],Wt[Dt]=gt.x,Wt[Dt+1]=gt.y,Wt[Dt+2]=gt.z,Dt+=3;else for(mt=0;mt<3;mt++)Wt[Dt]=De.x,Wt[Dt+1]=De.y,Wt[Dt+2]=De.z,Dt+=3;for(Se=0,Me=fr.length;Se<Me;Se++)if(Le=(Ce=ur[fr[Se]]).vertexNormals,De=Ce.normal,4===Le.length&&we)for(mt=0;mt<4;mt++)gt=Le[mt],Wt[Dt]=gt.x,Wt[Dt+1]=gt.y,Wt[Dt+2]=gt.z,Dt+=3;else for(mt=0;mt<4;mt++)Wt[Dt]=De.x,Wt[Dt+1]=De.y,Wt[Dt+2]=De.z,Dt+=3;L.bindBuffer(L.ARRAY_BUFFER,ge.__webglNormalBuffer),L.bufferData(L.ARRAY_BUFFER,Wt,Re)}if(nr&&dr&&be){for(Se=0,Me=cr.length;Se<Me;Se++)if(Ce=ur[Ae=cr[Se]],void 0!==(ze=dr[Ae]))for(mt=0;mt<3;mt++)Tt=ze[mt],It[At]=Tt.u,It[At+1]=Tt.v,At+=2;for(Se=0,Me=fr.length;Se<Me;Se++)if(Ce=ur[Ae=fr[Se]],void 0!==(ze=dr[Ae]))for(mt=0;mt<4;mt++)Tt=ze[mt],It[At]=Tt.u,It[At+1]=Tt.v,At+=2;At>0&&(L.bindBuffer(L.ARRAY_BUFFER,ge.__webglUVBuffer),L.bufferData(L.ARRAY_BUFFER,It,Re))}if(nr&&Er&&be){for(Se=0,Me=cr.length;Se<Me;Se++)if(Ce=ur[Ae=cr[Se]],void 0!==(Be=Er[Ae]))for(mt=0;mt<3;mt++)Rt=Be[mt],kt[Ct]=Rt.u,kt[Ct+1]=Rt.v,Ct+=2;for(Se=0,Me=fr.length;Se<Me;Se++)if(Ce=ur[Ae=fr[Se]],void 0!==(Be=Er[Ae]))for(mt=0;mt<4;mt++)Rt=Be[mt],kt[Ct]=Rt.u,kt[Ct+1]=Rt.v,Ct+=2;Ct>0&&(L.bindBuffer(L.ARRAY_BUFFER,ge.__webglUV2Buffer),L.bufferData(L.ARRAY_BUFFER,kt,Re))}if(ir){for(Se=0,Me=cr.length;Se<Me;Se++)Ce=ur[cr[Se]],er[Lt]=St,er[Lt+1]=St+1,er[Lt+2]=St+2,Lt+=3,tr[Pt]=St,tr[Pt+1]=St+1,tr[Pt+2]=St,tr[Pt+3]=St+2,tr[Pt+4]=St+1,tr[Pt+5]=St+2,Pt+=6,St+=3;for(Se=0,Me=fr.length;Se<Me;Se++)Ce=ur[fr[Se]],er[Lt]=St,er[Lt+1]=St+1,er[Lt+2]=St+3,er[Lt+3]=St+1,er[Lt+4]=St+2,er[Lt+5]=St+3,Lt+=6,tr[Pt]=St,tr[Pt+1]=St+1,tr[Pt+2]=St,tr[Pt+3]=St+3,tr[Pt+4]=St+1,tr[Pt+5]=St+2,tr[Pt+6]=St+2,tr[Pt+7]=St+3,Pt+=8,St+=4;L.bindBuffer(L.ELEMENT_ARRAY_BUFFER,ge.__webglFaceBuffer),L.bufferData(L.ELEMENT_ARRAY_BUFFER,er,Re),L.bindBuffer(L.ELEMENT_ARRAY_BUFFER,ge.__webglLineBuffer),L.bufferData(L.ELEMENT_ARRAY_BUFFER,tr,Re)}if(Jt)for(mt=0,vt=Jt.length;mt<vt;mt++)if(($t=Jt[mt]).__original.needsUpdate){if(Nt=0,1===$t.size){if(void 0===$t.boundTo||"vertices"===$t.boundTo){for(Se=0,Me=cr.length;Se<Me;Se++)Ce=ur[cr[Se]],$t.array[Nt]=$t.value[Ce.a],$t.array[Nt+1]=$t.value[Ce.b],$t.array[Nt+2]=$t.value[Ce.c],Nt+=3;for(Se=0,Me=fr.length;Se<Me;Se++)Ce=ur[fr[Se]],$t.array[Nt]=$t.value[Ce.a],$t.array[Nt+1]=$t.value[Ce.b],$t.array[Nt+2]=$t.value[Ce.c],$t.array[Nt+3]=$t.value[Ce.d],Nt+=4}else if("faces"===$t.boundTo){for(Se=0,Me=cr.length;Se<Me;Se++)Vt=$t.value[cr[Se]],$t.array[Nt]=Vt,$t.array[Nt+1]=Vt,$t.array[Nt+2]=Vt,Nt+=3;for(Se=0,Me=fr.length;Se<Me;Se++)Vt=$t.value[fr[Se]],$t.array[Nt]=Vt,$t.array[Nt+1]=Vt,$t.array[Nt+2]=Vt,$t.array[Nt+3]=Vt,Nt+=4}}else if(2===$t.size){if(void 0===$t.boundTo||"vertices"===$t.boundTo){for(Se=0,Me=cr.length;Se<Me;Se++)Ce=ur[cr[Se]],Ne=$t.value[Ce.a],Ve=$t.value[Ce.b],Oe=$t.value[Ce.c],$t.array[Nt]=Ne.x,$t.array[Nt+1]=Ne.y,$t.array[Nt+2]=Ve.x,$t.array[Nt+3]=Ve.y,$t.array[Nt+4]=Oe.x,$t.array[Nt+5]=Oe.y,Nt+=6;for(Se=0,Me=fr.length;Se<Me;Se++)Ce=ur[fr[Se]],Ne=$t.value[Ce.a],Ve=$t.value[Ce.b],Oe=$t.value[Ce.c],Ie=$t.value[Ce.d],$t.array[Nt]=Ne.x,$t.array[Nt+1]=Ne.y,$t.array[Nt+2]=Ve.x,$t.array[Nt+3]=Ve.y,$t.array[Nt+4]=Oe.x,$t.array[Nt+5]=Oe.y,$t.array[Nt+6]=Ie.x,$t.array[Nt+7]=Ie.y,Nt+=8}else if("faces"===$t.boundTo){for(Se=0,Me=cr.length;Se<Me;Se++)Oe=Ve=Ne=Vt=$t.value[cr[Se]],$t.array[Nt]=Ne.x,$t.array[Nt+1]=Ne.y,$t.array[Nt+2]=Ve.x,$t.array[Nt+3]=Ve.y,$t.array[Nt+4]=Oe.x,$t.array[Nt+5]=Oe.y,Nt+=6;for(Se=0,Me=fr.length;Se<Me;Se++)Ie=Oe=Ve=Ne=Vt=$t.value[fr[Se]],$t.array[Nt]=Ne.x,$t.array[Nt+1]=Ne.y,$t.array[Nt+2]=Ve.x,$t.array[Nt+3]=Ve.y,$t.array[Nt+4]=Oe.x,$t.array[Nt+5]=Oe.y,$t.array[Nt+6]=Ie.x,$t.array[Nt+7]=Ie.y,Nt+=8}}else if(3===$t.size){var yr;if(yr="c"===$t.type?["r","g","b"]:["x","y","z"],void 0===$t.boundTo||"vertices"===$t.boundTo){for(Se=0,Me=cr.length;Se<Me;Se++)Ce=ur[cr[Se]],Ne=$t.value[Ce.a],Ve=$t.value[Ce.b],Oe=$t.value[Ce.c],$t.array[Nt]=Ne[yr[0]],$t.array[Nt+1]=Ne[yr[1]],$t.array[Nt+2]=Ne[yr[2]],$t.array[Nt+3]=Ve[yr[0]],$t.array[Nt+4]=Ve[yr[1]],$t.array[Nt+5]=Ve[yr[2]],$t.array[Nt+6]=Oe[yr[0]],$t.array[Nt+7]=Oe[yr[1]],$t.array[Nt+8]=Oe[yr[2]],Nt+=9;for(Se=0,Me=fr.length;Se<Me;Se++)Ce=ur[fr[Se]],Ne=$t.value[Ce.a],Ve=$t.value[Ce.b],Oe=$t.value[Ce.c],Ie=$t.value[Ce.d],$t.array[Nt]=Ne[yr[0]],$t.array[Nt+1]=Ne[yr[1]],$t.array[Nt+2]=Ne[yr[2]],$t.array[Nt+3]=Ve[yr[0]],$t.array[Nt+4]=Ve[yr[1]],$t.array[Nt+5]=Ve[yr[2]],$t.array[Nt+6]=Oe[yr[0]],$t.array[Nt+7]=Oe[yr[1]],$t.array[Nt+8]=Oe[yr[2]],$t.array[Nt+9]=Ie[yr[0]],$t.array[Nt+10]=Ie[yr[1]],$t.array[Nt+11]=Ie[yr[2]],Nt+=12}else if("faces"===$t.boundTo){for(Se=0,Me=cr.length;Se<Me;Se++)Oe=Ve=Ne=Vt=$t.value[cr[Se]],$t.array[Nt]=Ne[yr[0]],$t.array[Nt+1]=Ne[yr[1]],$t.array[Nt+2]=Ne[yr[2]],$t.array[Nt+3]=Ve[yr[0]],$t.array[Nt+4]=Ve[yr[1]],$t.array[Nt+5]=Ve[yr[2]],$t.array[Nt+6]=Oe[yr[0]],$t.array[Nt+7]=Oe[yr[1]],$t.array[Nt+8]=Oe[yr[2]],Nt+=9;for(Se=0,Me=fr.length;Se<Me;Se++)Ie=Oe=Ve=Ne=Vt=$t.value[fr[Se]],$t.array[Nt]=Ne[yr[0]],$t.array[Nt+1]=Ne[yr[1]],$t.array[Nt+2]=Ne[yr[2]],$t.array[Nt+3]=Ve[yr[0]],$t.array[Nt+4]=Ve[yr[1]],$t.array[Nt+5]=Ve[yr[2]],$t.array[Nt+6]=Oe[yr[0]],$t.array[Nt+7]=Oe[yr[1]],$t.array[Nt+8]=Oe[yr[2]],$t.array[Nt+9]=Ie[yr[0]],$t.array[Nt+10]=Ie[yr[1]],$t.array[Nt+11]=Ie[yr[2]],Nt+=12}}else if(4===$t.size)if(void 0===$t.boundTo||"vertices"===$t.boundTo){for(Se=0,Me=cr.length;Se<Me;Se++)Ce=ur[cr[Se]],Ne=$t.value[Ce.a],Ve=$t.value[Ce.b],Oe=$t.value[Ce.c],$t.array[Nt]=Ne.x,$t.array[Nt+1]=Ne.y,$t.array[Nt+2]=Ne.z,$t.array[Nt+3]=Ne.w,$t.array[Nt+4]=Ve.x,$t.array[Nt+5]=Ve.y,$t.array[Nt+6]=Ve.z,$t.array[Nt+7]=Ve.w,$t.array[Nt+8]=Oe.x,$t.array[Nt+9]=Oe.y,$t.array[Nt+10]=Oe.z,$t.array[Nt+11]=Oe.w,Nt+=12;for(Se=0,Me=fr.length;Se<Me;Se++)Ce=ur[fr[Se]],Ne=$t.value[Ce.a],Ve=$t.value[Ce.b],Oe=$t.value[Ce.c],Ie=$t.value[Ce.d],$t.array[Nt]=Ne.x,$t.array[Nt+1]=Ne.y,$t.array[Nt+2]=Ne.z,$t.array[Nt+3]=Ne.w,$t.array[Nt+4]=Ve.x,$t.array[Nt+5]=Ve.y,$t.array[Nt+6]=Ve.z,$t.array[Nt+7]=Ve.w,$t.array[Nt+8]=Oe.x,$t.array[Nt+9]=Oe.y,$t.array[Nt+10]=Oe.z,$t.array[Nt+11]=Oe.w,$t.array[Nt+12]=Ie.x,$t.array[Nt+13]=Ie.y,$t.array[Nt+14]=Ie.z,$t.array[Nt+15]=Ie.w,Nt+=16}else if("faces"===$t.boundTo){for(Se=0,Me=cr.length;Se<Me;Se++)Oe=Ve=Ne=Vt=$t.value[cr[Se]],$t.array[Nt]=Ne.x,$t.array[Nt+1]=Ne.y,$t.array[Nt+2]=Ne.z,$t.array[Nt+3]=Ne.w,$t.array[Nt+4]=Ve.x,$t.array[Nt+5]=Ve.y,$t.array[Nt+6]=Ve.z,$t.array[Nt+7]=Ve.w,$t.array[Nt+8]=Oe.x,$t.array[Nt+9]=Oe.y,$t.array[Nt+10]=Oe.z,$t.array[Nt+11]=Oe.w,Nt+=12;for(Se=0,Me=fr.length;Se<Me;Se++)Ie=Oe=Ve=Ne=Vt=$t.value[fr[Se]],$t.array[Nt]=Ne.x,$t.array[Nt+1]=Ne.y,$t.array[Nt+2]=Ne.z,$t.array[Nt+3]=Ne.w,$t.array[Nt+4]=Ve.x,$t.array[Nt+5]=Ve.y,$t.array[Nt+6]=Ve.z,$t.array[Nt+7]=Ve.w,$t.array[Nt+8]=Oe.x,$t.array[Nt+9]=Oe.y,$t.array[Nt+10]=Oe.z,$t.array[Nt+11]=Oe.w,$t.array[Nt+12]=Ie.x,$t.array[Nt+13]=Ie.y,$t.array[Nt+14]=Ie.z,$t.array[Nt+15]=Ie.w,Nt+=16}L.bindBuffer(L.ARRAY_BUFFER,$t.buffer),L.bufferData(L.ARRAY_BUFFER,$t.array,Re)}ye&&(delete ge.__inittedArrays,delete ge.__colorArray,delete ge.__normalArray,delete ge.__tangentArray,delete ge.__uvArray,delete ge.__uv2Array,delete ge.__faceArray,delete ge.__vertexArray,delete ge.__lineArray,delete ge.__skinVertexAArray,delete ge.__skinVertexBArray,delete ge.__skinIndexArray,delete ge.__skinWeightArray)}}ue.verticesNeedUpdate=!1,ue.morphTargetsNeedUpdate=!1,ue.elementsNeedUpdate=!1,ue.uvsNeedUpdate=!1,ue.normalsNeedUpdate=!1,ue.colorsNeedUpdate=!1,ue.tangetsNeedUpdate=!1,pe.attributes&&u(pe)}else if(fe instanceof THREE.Line){if(Ee=(pe=r(fe,de)).attributes&&f(pe),ue.verticesNeedUpdate||ue.colorsNeedUpdate||Ee){var xr=ue,_r=L.DYNAMIC_DRAW,Hr=void 0,br=void 0,wr=void 0,Sr=void 0,Mr=void 0,Ar=xr.vertices,Cr=xr.colors,Lr=Ar.length,Dr=Cr.length,Fr=xr.__vertexArray,Pr=xr.__colorArray,Ur=xr.colorsNeedUpdate,zr=xr.__webglCustomAttributesList,Br=void 0,Nr=void 0,Vr=void 0,Or=void 0,Ir=void 0,kr=void 0;if(xr.verticesNeedUpdate){for(Hr=0;Hr<Lr;Hr++)wr=Ar[Hr],Fr[Sr=3*Hr]=wr.x,Fr[Sr+1]=wr.y,Fr[Sr+2]=wr.z;L.bindBuffer(L.ARRAY_BUFFER,xr.__webglVertexBuffer),L.bufferData(L.ARRAY_BUFFER,Fr,_r)}if(Ur){for(br=0;br<Dr;br++)Mr=Cr[br],Pr[Sr=3*br]=Mr.r,Pr[Sr+1]=Mr.g,Pr[Sr+2]=Mr.b;L.bindBuffer(L.ARRAY_BUFFER,xr.__webglColorBuffer),L.bufferData(L.ARRAY_BUFFER,Pr,_r)}if(zr)for(Br=0,Nr=zr.length;Br<Nr;Br++)if((kr=zr[Br]).needsUpdate&&(void 0===kr.boundTo||"vertices"===kr.boundTo)){if(Sr=0,Or=kr.value.length,1===kr.size)for(Vr=0;Vr<Or;Vr++)kr.array[Vr]=kr.value[Vr];else if(2===kr.size)for(Vr=0;Vr<Or;Vr++)Ir=kr.value[Vr],kr.array[Sr]=Ir.x,kr.array[Sr+1]=Ir.y,Sr+=2;else if(3===kr.size)if("c"===kr.type)for(Vr=0;Vr<Or;Vr++)Ir=kr.value[Vr],kr.array[Sr]=Ir.r,kr.array[Sr+1]=Ir.g,kr.array[Sr+2]=Ir.b,Sr+=3;else for(Vr=0;Vr<Or;Vr++)Ir=kr.value[Vr],kr.array[Sr]=Ir.x,kr.array[Sr+1]=Ir.y,kr.array[Sr+2]=Ir.z,Sr+=3;else if(4===kr.size)for(Vr=0;Vr<Or;Vr++)Ir=kr.value[Vr],kr.array[Sr]=Ir.x,kr.array[Sr+1]=Ir.y,kr.array[Sr+2]=Ir.z,kr.array[Sr+3]=Ir.w,Sr+=4;L.bindBuffer(L.ARRAY_BUFFER,kr.buffer),L.bufferData(L.ARRAY_BUFFER,kr.array,_r)}}ue.verticesNeedUpdate=!1,ue.colorsNeedUpdate=!1,pe.attributes&&u(pe)}else fe instanceof THREE.ParticleSystem&&(Ee=(pe=r(fe,de)).attributes&&f(pe),(ue.verticesNeedUpdate||ue.colorsNeedUpdate||fe.sortParticles||Ee)&&o(ue,L.DYNAMIC_DRAW,fe),ue.verticesNeedUpdate=!1,ue.colorsNeedUpdate=!1,pe.attributes&&u(pe))}},this.initMaterial=function(e,t,r,i){var n,o,a,s,l,h,c,f;if(e instanceof THREE.MeshDepthMaterial?a="depth":e instanceof THREE.MeshNormalMaterial?a="normal":e instanceof THREE.MeshBasicMaterial?a="basic":e instanceof THREE.MeshLambertMaterial?a="lambert":e instanceof THREE.MeshPhongMaterial?a="phong":e instanceof THREE.LineBasicMaterial?a="basic":e instanceof THREE.ParticleBasicMaterial&&(a="particle_basic"),a){var u=THREE.ShaderLib[a];e.uniforms=THREE.UniformsUtils.clone(u.uniforms),e.vertexShader=u.vertexShader,e.fragmentShader=u.fragmentShader}for(s=c=f=u=0,l=t.length;s<l;s++)(h=t[s]).onlyShadow||(h instanceof THREE.DirectionalLight&&c++,h instanceof THREE.PointLight&&f++,h instanceof THREE.SpotLight&&u++);f+u+c<=C?(l=c,h=f,c=u):(l=Math.ceil(C*c/(f+c)),c=h=C-l);var d,E=0;u=0;for(f=t.length;u<f;u++)(s=t[u]).castShadow&&(s instanceof THREE.SpotLight&&E++,s instanceof THREE.DirectionalLight&&!s.shadowCascade&&E++);e:{f=e.fragmentShader,s=e.vertexShader;var p;u=e.uniforms,t=e.attributes,r={map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,vertexColors:e.vertexColors,fog:r,useFog:e.fog,sizeAttenuation:e.sizeAttenuation,skinning:e.skinning,maxBones:50,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:l,maxPointLights:h,maxSpotLights:c,maxShadows:E,shadowMapEnabled:this.shadowMapEnabled&&i.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,perPixel:e.perPixel,wrapAround:e.wrapAround,doubleSided:i&&i.doubleSided},i=[];for(p in a?i.push(a):(i.push(f),i.push(s)),r)i.push(p),i.push(r[p]);for(a=i.join(),p=0,i=F.length;p<i;p++)if(F[p].code===a){d=F[p].program;break e}p=L.createProgram(),i=["precision "+x+" float;",fe>0?"#define VERTEX_TEXTURES":"",D.gammaInput?"#define GAMMA_INPUT":"",D.gammaOutput?"#define GAMMA_OUTPUT":"",D.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+r.maxDirLights,"#define MAX_POINT_LIGHTS "+r.maxPointLights,"#define MAX_SPOT_LIGHTS "+r.maxSpotLights,"#define MAX_SHADOWS "+r.maxShadows,"#define MAX_BONES "+r.maxBones,r.map?"#define USE_MAP":"",r.envMap?"#define USE_ENVMAP":"",r.lightMap?"#define USE_LIGHTMAP":"",r.vertexColors?"#define USE_COLOR":"",r.skinning?"#define USE_SKINNING":"",r.morphTargets?"#define USE_MORPHTARGETS":"",r.morphNormals?"#define USE_MORPHNORMALS":"",r.perPixel?"#define PHONG_PER_PIXEL":"",r.wrapAround?"#define WRAP_AROUND":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapSoft?"#define SHADOWMAP_SOFT":"",r.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",r.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",r.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinVertexA;\nattribute vec4 skinVertexB;\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n"),l=["precision "+x+" float;","#define MAX_DIR_LIGHTS "+r.maxDirLights,"#define MAX_POINT_LIGHTS "+r.maxPointLights,"#define MAX_SPOT_LIGHTS "+r.maxSpotLights,"#define MAX_SHADOWS "+r.maxShadows,r.alphaTest?"#define ALPHATEST "+r.alphaTest:"",D.gammaInput?"#define GAMMA_INPUT":"",D.gammaOutput?"#define GAMMA_OUTPUT":"",D.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.envMap?"#define USE_ENVMAP":"",r.lightMap?"#define USE_LIGHTMAP":"",r.vertexColors?"#define USE_COLOR":"",r.metal?"#define METAL":"",r.perPixel?"#define PHONG_PER_PIXEL":"",r.wrapAround?"#define WRAP_AROUND":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapSoft?"#define SHADOWMAP_SOFT":"",r.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",r.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"),L.attachShader(p,m("fragment",l+f)),L.attachShader(p,m("vertex",i+s)),L.linkProgram(p),L.getProgramParameter(p,L.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+L.getProgramParameter(p,L.VALIDATE_STATUS)+", gl error ["+L.getError()+"]"),p.uniforms={},p.attributes={};var v;i=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","boneGlobalMatrices","morphTargetInfluences"];for(v in u)i.push(v);for(v=i,i=0,u=v.length;i<u;i++)f=v[i],p.uniforms[f]=L.getUniformLocation(p,f);for(i=["position","normal","uv","uv2","tangent","color","skinVertexA","skinVertexB","skinIndex","skinWeight"],v=0;v<r.maxMorphTargets;v++)i.push("morphTarget"+v);for(v=0;v<r.maxMorphNormals;v++)i.push("morphNormal"+v);for(d in t)i.push(d);for(v=0,t=(d=i).length;v<t;v++)r=d[v],p.attributes[r]=L.getAttribLocation(p,r);p.id=F.length,F.push({program:p,code:a}),D.info.memory.programs=F.length,d=p}if(e.program=d,(d=e.program.attributes).position>=0&&L.enableVertexAttribArray(d.position),d.color>=0&&L.enableVertexAttribArray(d.color),d.normal>=0&&L.enableVertexAttribArray(d.normal),d.tangent>=0&&L.enableVertexAttribArray(d.tangent),e.skinning&&d.skinVertexA>=0&&d.skinVertexB>=0&&d.skinIndex>=0&&d.skinWeight>=0&&(L.enableVertexAttribArray(d.skinVertexA),L.enableVertexAttribArray(d.skinVertexB),L.enableVertexAttribArray(d.skinIndex),L.enableVertexAttribArray(d.skinWeight)),e.attributes)for(o in e.attributes)void 0!==d[o]&&d[o]>=0&&L.enableVertexAttribArray(d[o]);if(e.morphTargets)for(e.numSupportedMorphTargets=0,p="morphTarget",o=0;o<this.maxMorphTargets;o++)d[v=p+o]>=0&&(L.enableVertexAttribArray(d[v]),e.numSupportedMorphTargets++);if(e.morphNormals)for(e.numSupportedMorphNormals=0,p="morphNormal",o=0;o<this.maxMorphNormals;o++)d[v=p+o]>=0&&(L.enableVertexAttribArray(d[v]),e.numSupportedMorphNormals++);for(n in e.uniformsList=[],e.uniforms)e.uniformsList.push([e.uniforms[n],n])},this.setFaceCulling=function(e,t){e?(t&&"ccw"!==t?L.frontFace(L.CW):L.frontFace(L.CCW),"back"===e?L.cullFace(L.BACK):"front"===e?L.cullFace(L.FRONT):L.cullFace(L.FRONT_AND_BACK),L.enable(L.CULL_FACE)):L.disable(L.CULL_FACE)},this.setObjectFaces=function(e){O!==e.doubleSided&&(e.doubleSided?L.disable(L.CULL_FACE):L.enable(L.CULL_FACE),O=e.doubleSided),I!==e.flipSided&&(e.flipSided?L.frontFace(L.CW):L.frontFace(L.CCW),I=e.flipSided)},this.setDepthTest=function(e){X!==e&&(e?L.enable(L.DEPTH_TEST):L.disable(L.DEPTH_TEST),X=e)},this.setDepthWrite=function(e){Y!==e&&(L.depthMask(e),Y=e)},this.setBlending=function(e,t,r,i){if(e!==k){switch(e){case THREE.NoBlending:L.disable(L.BLEND);break;case THREE.AdditiveBlending:L.enable(L.BLEND),L.blendEquation(L.FUNC_ADD),L.blendFunc(L.SRC_ALPHA,L.ONE);break;case THREE.SubtractiveBlending:L.enable(L.BLEND),L.blendEquation(L.FUNC_ADD),L.blendFunc(L.ZERO,L.ONE_MINUS_SRC_COLOR);break;case THREE.MultiplyBlending:L.enable(L.BLEND),L.blendEquation(L.FUNC_ADD),L.blendFunc(L.ZERO,L.SRC_COLOR);break;case THREE.CustomBlending:L.enable(L.BLEND);break;default:L.enable(L.BLEND),L.blendEquationSeparate(L.FUNC_ADD,L.FUNC_ADD),L.blendFuncSeparate(L.SRC_ALPHA,L.ONE_MINUS_SRC_ALPHA,L.ONE,L.ONE_MINUS_SRC_ALPHA)}k=e}e===THREE.CustomBlending?(t!==W&&(L.blendEquation(R(t)),W=t),r===G&&i===j||(L.blendFunc(R(r),R(i)),G=r,j=i)):j=G=W=null},this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.__webglTexture=L.createTexture(),D.info.memory.textures++),L.activeTexture(L.TEXTURE0+t),L.bindTexture(L.TEXTURE_2D,e.__webglTexture),L.pixelStorei(L.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha);var r=e.image,i=0==(r.width&r.width-1)&&0==(r.height&r.height-1),n=R(e.format),o=R(e.type);v(L.TEXTURE_2D,e,i),e instanceof THREE.DataTexture?L.texImage2D(L.TEXTURE_2D,0,n,r.width,r.height,0,n,o,r.data):L.texImage2D(L.TEXTURE_2D,0,n,n,o,e.image),e.generateMipmaps&&i&&L.generateMipmap(L.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else L.activeTexture(L.TEXTURE0+t),L.bindTexture(L.TEXTURE_2D,e.__webglTexture)},this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.__webglTexture=L.createTexture();var r=0==(e.width&e.width-1)&&0==(e.height&e.height-1),i=R(e.format),n=R(e.type);if(t){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],L.bindTexture(L.TEXTURE_CUBE_MAP,e.__webglTexture),v(L.TEXTURE_CUBE_MAP,e,r);for(var o=0;o<6;o++){e.__webglFramebuffer[o]=L.createFramebuffer(),e.__webglRenderbuffer[o]=L.createRenderbuffer(),L.texImage2D(L.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,i,e.width,e.height,0,i,n,null);var a=e,s=L.TEXTURE_CUBE_MAP_POSITIVE_X+o;L.bindFramebuffer(L.FRAMEBUFFER,e.__webglFramebuffer[o]),L.framebufferTexture2D(L.FRAMEBUFFER,L.COLOR_ATTACHMENT0,s,a.__webglTexture,0),g(e.__webglRenderbuffer[o],e)}r&&L.generateMipmap(L.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=L.createFramebuffer(),e.__webglRenderbuffer=L.createRenderbuffer(),L.bindTexture(L.TEXTURE_2D,e.__webglTexture),v(L.TEXTURE_2D,e,r),L.texImage2D(L.TEXTURE_2D,0,i,e.width,e.height,0,i,n,null),i=L.TEXTURE_2D,L.bindFramebuffer(L.FRAMEBUFFER,e.__webglFramebuffer),L.framebufferTexture2D(L.FRAMEBUFFER,L.COLOR_ATTACHMENT0,i,e.__webglTexture,0),g(e.__webglRenderbuffer,e),r&&L.generateMipmap(L.TEXTURE_2D);t?L.bindTexture(L.TEXTURE_CUBE_MAP,null):L.bindTexture(L.TEXTURE_2D,null),L.bindRenderbuffer(L.RENDERBUFFER,null),L.bindFramebuffer(L.FRAMEBUFFER,null)}e?(t=t?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,r=e.width,e=e.height,n=i=0):(t=null,r=ee,e=te,i=J,n=$),t!==U&&(L.bindFramebuffer(L.FRAMEBUFFER,t),L.viewport(i,n,r,e),U=t),re=r,ie=e}},THREE.WebGLRenderTarget=function(e,t,r){this.width=e,this.height=t,r=r||{},this.wrapS=void 0!==r.wrapS?r.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r.wrapT?r.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==r.magFilter?r.magFilter:THREE.LinearFilter,this.minFilter=void 0!==r.minFilter?r.minFilter:THREE.LinearMipMapLinearFilter,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==r.format?r.format:THREE.RGBAFormat,this.type=void 0!==r.type?r.type:THREE.UnsignedByteType,this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0===r.stencilBuffer||r.stencilBuffer,this.generateMipmaps=!0},THREE.WebGLRenderTarget.prototype.clone=function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e},THREE.WebGLRenderTargetCube=function(e,t,r){THREE.WebGLRenderTarget.call(this,e,t,r),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=new THREE.WebGLRenderTarget,THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube,THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidWorld=new THREE.Vector3,this.centroidScreen=new THREE.Vector3,this.normalWorld=new THREE.Vector3,this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.faceMaterial=this.material=null,this.uvs=[[]],this.z=null},THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.v4=new THREE.RenderableVertex,this.centroidWorld=new THREE.Vector3,this.centroidScreen=new THREE.Vector3,this.normalWorld=new THREE.Vector3,this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.faceMaterial=this.material=null,this.uvs=[[]],this.z=null},THREE.RenderableObject=function(){this.z=this.object=null},THREE.RenderableLine=function(){this.z=null,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.material=null},THREE.GeometryUtils={merge:function(e,t){for(var r,i,n=e.vertices.length,o=t instanceof THREE.Mesh?t.geometry:t,a=e.vertices,s=o.vertices,l=e.faces,h=o.faces,c=e.faceVertexUvs[0],f=o.faceVertexUvs[0],u={},d=0;d<e.materials.length;d++)u[e.materials[d].id]=d;t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),r=t.matrix,(i=new THREE.Matrix4).extractRotation(r,t.scale));d=0;for(var E=s.length;d<E;d++){var p=s[d].clone();r&&r.multiplyVector3(p),a.push(p)}for(d=0,E=h.length;d<E;d++){var m,v,g=(a=h[d]).vertexNormals,T=a.vertexColors;for(a instanceof THREE.Face3?m=new THREE.Face3(a.a+n,a.b+n,a.c+n):a instanceof THREE.Face4&&(m=new THREE.Face4(a.a+n,a.b+n,a.c+n,a.d+n)),m.normal.copy(a.normal),i&&i.multiplyVector3(m.normal),s=0,p=g.length;s<p;s++)v=g[s].clone(),i&&i.multiplyVector3(v),m.vertexNormals.push(v);for(m.color.copy(a.color),s=0,p=T.length;s<p;s++)v=T[s],m.vertexColors.push(v.clone());void 0!==a.materialIndex&&(void 0===(T=u[p=(s=o.materials[a.materialIndex]).id])&&(T=e.materials.length,u[p]=T,e.materials.push(s)),m.materialIndex=T),m.centroid.copy(a.centroid),r&&r.multiplyVector3(m.centroid),l.push(m)}for(d=0,E=f.length;d<E;d++){for(i=[],s=0,p=(r=f[d]).length;s<p;s++)i.push(new THREE.UV(r[s].u,r[s].v));c.push(i)}},clone:function(e){var t,r=new THREE.Geometry,i=e.vertices,n=e.faces,o=e.faceVertexUvs[0];for(e.materials&&(r.materials=e.materials.slice()),e=0,t=i.length;e<t;e++)r.vertices.push(i[e].clone());for(e=0,t=n.length;e<t;e++)r.faces.push(n[e].clone());for(e=0,t=o.length;e<t;e++){n=[];for(var a=0,s=(i=o[e]).length;a<s;a++)n.push(new THREE.UV(i[a].u,i[a].v));r.faceVertexUvs[0].push(n)}return r},randomPointInTriangle:function(e,t,r){var i,n,o,a=new THREE.Vector3,s=THREE.GeometryUtils.__v1;return(i=THREE.GeometryUtils.random())+(n=THREE.GeometryUtils.random())>1&&(i=1-i,n=1-n),o=1-i-n,a.copy(e),a.multiplyScalar(i),s.copy(t),s.multiplyScalar(n),a.addSelf(s),s.copy(r),s.multiplyScalar(o),a.addSelf(s),a},randomPointInFace:function(e,t,r){var i,n,o;if(e instanceof THREE.Face3)return i=t.vertices[e.a],n=t.vertices[e.b],o=t.vertices[e.c],THREE.GeometryUtils.randomPointInTriangle(i,n,o);if(e instanceof THREE.Face4){i=t.vertices[e.a],n=t.vertices[e.b],o=t.vertices[e.c];var a;t=t.vertices[e.d];return r?e._area1&&e._area2?(r=e._area1,a=e._area2):(r=THREE.GeometryUtils.triangleArea(i,n,t),a=THREE.GeometryUtils.triangleArea(n,o,t),e._area1=r,e._area2=a):(r=THREE.GeometryUtils.triangleArea(i,n,t),a=THREE.GeometryUtils.triangleArea(n,o,t)),THREE.GeometryUtils.random()*(r+a)<r?THREE.GeometryUtils.randomPointInTriangle(i,n,t):THREE.GeometryUtils.randomPointInTriangle(n,o,t)}},randomPointsInGeometry:function(e,t){function r(e){return function t(r,i){if(i<r)return r;var n=r+Math.floor((i-r)/2);return d[n]>e?t(r,n-1):d[n]<e?t(n+1,i):n}(0,d.length-1)}var i,n,o,a,s,l,h=e.faces,c=e.vertices,f=h.length,u=0,d=[];for(n=0;n<f;n++)(i=h[n])instanceof THREE.Face3?(o=c[i.a],a=c[i.b],s=c[i.c],i._area=THREE.GeometryUtils.triangleArea(o,a,s)):i instanceof THREE.Face4&&(o=c[i.a],a=c[i.b],s=c[i.c],l=c[i.d],i._area1=THREE.GeometryUtils.triangleArea(o,a,l),i._area2=THREE.GeometryUtils.triangleArea(a,s,l),i._area=i._area1+i._area2),u+=i._area,d[n]=u;for(i=[],n=0;n<t;n++)c=r(c=THREE.GeometryUtils.random()*u),i[n]=THREE.GeometryUtils.randomPointInFace(h[c],e,!0);return i},triangleArea:function(e,t,r){var i,n=THREE.GeometryUtils.__v1;return n.sub(e,t),i=n.length(),n.sub(e,r),e=n.length(),n.sub(t,r),t=.5*(i+e+(r=n.length())),Math.sqrt(t*(t-i)*(t-e)*(t-r))},center:function(e){e.computeBoundingBox();var t=e.boundingBox,r=new THREE.Vector3;return r.add(t.min,t.max),r.multiplyScalar(-.5),e.applyMatrix((new THREE.Matrix4).makeTranslation(r.x,r.y,r.z)),e.computeBoundingBox(),r},normalizeUVs:function(e){for(var t=0,r=(e=e.faceVertexUvs[0]).length;t<r;t++)for(var i=e[t],n=0,o=i.length;n<o;n++)1!==i[n].u&&(i[n].u=i[n].u-Math.floor(i[n].u)),1!==i[n].v&&(i[n].v=i[n].v-Math.floor(i[n].v))},triangulateQuads:function(e){var t,r,i,n,o=[],a=[],s=[];for(t=0,r=e.faceUvs.length;t<r;t++)a[t]=[];for(t=0,r=e.faceVertexUvs.length;t<r;t++)s[t]=[];for(t=0,r=e.faces.length;t<r;t++)if((i=e.faces[t])instanceof THREE.Face4){n=i.a;var l=i.b,h=i.c,c=i.d,f=new THREE.Face3,u=new THREE.Face3;for(f.color.copy(i.color),u.color.copy(i.color),f.materialIndex=i.materialIndex,u.materialIndex=i.materialIndex,f.a=n,f.b=l,f.c=c,u.a=l,u.b=h,u.c=c,4===i.vertexColors.length&&(f.vertexColors[0]=i.vertexColors[0].clone(),f.vertexColors[1]=i.vertexColors[1].clone(),f.vertexColors[2]=i.vertexColors[3].clone(),u.vertexColors[0]=i.vertexColors[1].clone(),u.vertexColors[1]=i.vertexColors[2].clone(),u.vertexColors[2]=i.vertexColors[3].clone()),o.push(f,u),i=0,n=e.faceVertexUvs.length;i<n;i++)e.faceVertexUvs[i].length&&(l=(f=e.faceVertexUvs[i][t])[1],h=f[2],c=f[3],f=[f[0].clone(),l.clone(),c.clone()],l=[l.clone(),h.clone(),c.clone()],s[i].push(f,l));for(i=0,n=e.faceUvs.length;i<n;i++)e.faceUvs[i].length&&(l=e.faceUvs[i][t],a[i].push(l,l))}else{for(o.push(i),i=0,n=e.faceUvs.length;i<n;i++)a[i].push(e.faceUvs[i]);for(i=0,n=e.faceVertexUvs.length;i<n;i++)s[i].push(e.faceVertexUvs[i])}e.faces=o,e.faceUvs=a,e.faceVertexUvs=s,e.computeCentroids(),e.computeFaceNormals(),e.computeVertexNormals(),e.hasTangents&&e.computeTangents()},explode:function(e){for(var t=[],r=0,i=e.faces.length;r<i;r++){var n=t.length,o=e.faces[r];if(o instanceof THREE.Face4){var a=o.a,s=o.b,l=o.c,h=(a=e.vertices[a],s=e.vertices[s],l=e.vertices[l],e.vertices[o.d]);t.push(a.clone()),t.push(s.clone()),t.push(l.clone()),t.push(h.clone()),o.a=n,o.b=n+1,o.c=n+2,o.d=n+3}else a=o.a,s=o.b,l=o.c,a=e.vertices[a],s=e.vertices[s],l=e.vertices[l],t.push(a.clone()),t.push(s.clone()),t.push(l.clone()),o.a=n,o.b=n+1,o.c=n+2}e.vertices=t,delete e.__tmpVertices},tessellate:function(e,t){var r,i,n,o,a,s,l,h,c,f,u,d,E,p,m,v,g,T,R,y=[],x=[];for(r=0,i=e.faceVertexUvs.length;r<i;r++)x[r]=[];for(r=0,i=e.faces.length;r<i;r++)if((n=e.faces[r])instanceof THREE.Face3)if(o=n.a,a=n.b,s=n.c,h=e.vertices[o],c=e.vertices[a],f=e.vertices[s],d=h.distanceTo(c),E=c.distanceTo(f),u=h.distanceTo(f),d>t||E>t||u>t)for(l=e.vertices.length,T=n.clone(),R=n.clone(),d>=E&&d>=u?((h=h.clone()).lerpSelf(c,.5),T.a=o,T.b=l,T.c=s,R.a=l,R.b=a,R.c=s,3===n.vertexNormals.length&&((o=n.vertexNormals[0].clone()).lerpSelf(n.vertexNormals[1],.5),T.vertexNormals[1].copy(o),R.vertexNormals[0].copy(o)),3===n.vertexColors.length&&((o=n.vertexColors[0].clone()).lerpSelf(n.vertexColors[1],.5),T.vertexColors[1].copy(o),R.vertexColors[0].copy(o)),n=0):E>=d&&E>=u?((h=c.clone()).lerpSelf(f,.5),T.a=o,T.b=a,T.c=l,R.a=l,R.b=s,R.c=o,3===n.vertexNormals.length&&((o=n.vertexNormals[1].clone()).lerpSelf(n.vertexNormals[2],.5),T.vertexNormals[2].copy(o),R.vertexNormals[0].copy(o),R.vertexNormals[1].copy(n.vertexNormals[2]),R.vertexNormals[2].copy(n.vertexNormals[0])),3===n.vertexColors.length&&((o=n.vertexColors[1].clone()).lerpSelf(n.vertexColors[2],.5),T.vertexColors[2].copy(o),R.vertexColors[0].copy(o),R.vertexColors[1].copy(n.vertexColors[2]),R.vertexColors[2].copy(n.vertexColors[0])),n=1):((h=h.clone()).lerpSelf(f,.5),T.a=o,T.b=a,T.c=l,R.a=l,R.b=a,R.c=s,3===n.vertexNormals.length&&((o=n.vertexNormals[0].clone()).lerpSelf(n.vertexNormals[2],.5),T.vertexNormals[2].copy(o),R.vertexNormals[0].copy(o)),3===n.vertexColors.length&&((o=n.vertexColors[0].clone()).lerpSelf(n.vertexColors[2],.5),T.vertexColors[2].copy(o),R.vertexColors[0].copy(o)),n=2),y.push(T,R),e.vertices.push(h),o=0,a=e.faceVertexUvs.length;o<a;o++)e.faceVertexUvs[o].length&&(R=(h=e.faceVertexUvs[o][r])[0],s=h[1],T=h[2],0===n?((c=R.clone()).lerpSelf(s,.5),h=[R.clone(),c.clone(),T.clone()],s=[c.clone(),s.clone(),T.clone()]):1===n?((c=s.clone()).lerpSelf(T,.5),h=[R.clone(),s.clone(),c.clone()],s=[c.clone(),T.clone(),R.clone()]):((c=R.clone()).lerpSelf(T,.5),h=[R.clone(),s.clone(),c.clone()],s=[c.clone(),s.clone(),T.clone()]),x[o].push(h,s));else for(y.push(n),o=0,a=e.faceVertexUvs.length;o<a;o++)x[o].push(e.faceVertexUvs[o][r]);else if(o=n.a,a=n.b,s=n.c,l=n.d,h=e.vertices[o],c=e.vertices[a],f=e.vertices[s],u=e.vertices[l],d=h.distanceTo(c),E=c.distanceTo(f),p=f.distanceTo(u),m=h.distanceTo(u),d>t||E>t||p>t||m>t)for(v=e.vertices.length,g=e.vertices.length+1,T=n.clone(),R=n.clone(),d>=E&&d>=p&&d>=m||p>=E&&p>=d&&p>=m?((d=h.clone()).lerpSelf(c,.5),(c=f.clone()).lerpSelf(u,.5),T.a=o,T.b=v,T.c=g,T.d=l,R.a=v,R.b=a,R.c=s,R.d=g,4===n.vertexNormals.length&&((o=n.vertexNormals[0].clone()).lerpSelf(n.vertexNormals[1],.5),(a=n.vertexNormals[2].clone()).lerpSelf(n.vertexNormals[3],.5),T.vertexNormals[1].copy(o),T.vertexNormals[2].copy(a),R.vertexNormals[0].copy(o),R.vertexNormals[3].copy(a)),4===n.vertexColors.length&&((o=n.vertexColors[0].clone()).lerpSelf(n.vertexColors[1],.5),(a=n.vertexColors[2].clone()).lerpSelf(n.vertexColors[3],.5),T.vertexColors[1].copy(o),T.vertexColors[2].copy(a),R.vertexColors[0].copy(o),R.vertexColors[3].copy(a)),n=0):((d=c.clone()).lerpSelf(f,.5),(c=u.clone()).lerpSelf(h,.5),T.a=o,T.b=a,T.c=v,T.d=g,R.a=g,R.b=v,R.c=s,R.d=l,4===n.vertexNormals.length&&((o=n.vertexNormals[1].clone()).lerpSelf(n.vertexNormals[2],.5),(a=n.vertexNormals[3].clone()).lerpSelf(n.vertexNormals[0],.5),T.vertexNormals[2].copy(o),T.vertexNormals[3].copy(a),R.vertexNormals[0].copy(a),R.vertexNormals[1].copy(o)),4===n.vertexColors.length&&((o=n.vertexColors[1].clone()).lerpSelf(n.vertexColors[2],.5),(a=n.vertexColors[3].clone()).lerpSelf(n.vertexColors[0],.5),T.vertexColors[2].copy(o),T.vertexColors[3].copy(a),R.vertexColors[0].copy(a),R.vertexColors[1].copy(o)),n=1),y.push(T,R),e.vertices.push(d,c),o=0,a=e.faceVertexUvs.length;o<a;o++)e.faceVertexUvs[o].length&&(R=(h=e.faceVertexUvs[o][r])[0],s=h[1],T=h[2],h=h[3],0===n?((c=R.clone()).lerpSelf(s,.5),(f=T.clone()).lerpSelf(h,.5),R=[R.clone(),c.clone(),f.clone(),h.clone()],s=[c.clone(),s.clone(),T.clone(),f.clone()]):((c=s.clone()).lerpSelf(T,.5),(f=h.clone()).lerpSelf(R,.5),R=[R.clone(),s.clone(),c.clone(),f.clone()],s=[f.clone(),c.clone(),T.clone(),h.clone()]),x[o].push(R,s));else for(y.push(n),o=0,a=e.faceVertexUvs.length;o<a;o++)x[o].push(e.faceVertexUvs[o][r]);e.faces=y,e.faceVertexUvs=x}},THREE.GeometryUtils.random=THREE.Math.random16,THREE.GeometryUtils.__v1=new THREE.Vector3,THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(e,t,r){var i=new Image,n=new THREE.Texture(i,t);return i.onload=function(){n.needsUpdate=!0,r&&r(this)},i.crossOrigin=this.crossOrigin,i.src=e,n},loadTextureCube:function(e,t,r){var i,n=[],o=new THREE.Texture(n,t);t=n.loadCount=0;for(i=e.length;t<i;++t)n[t]=new Image,n[t].onload=function(){n.loadCount=n.loadCount+1,6===n.loadCount&&(o.needsUpdate=!0),r&&r(this)},n[t].crossOrigin=this.crossOrigin,n[t].src=e[t];return o},getNormalMap:function(e,t){var r=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]},i=(t=1|t,e.width),n=e.height,o=document.createElement("canvas");o.width=i,o.height=n;var a=o.getContext("2d");a.drawImage(e,0,0);for(var s=a.getImageData(0,0,i,n).data,l=a.createImageData(i,n),h=l.data,c=0;c<i;c++)for(var f=0;f<n;f++){var u=f-1<0?0:f-1,d=f+1>n-1?n-1:f+1,E=c-1<0?0:c-1,p=c+1>i-1?i-1:c+1,m=[],v=[0,0,s[4*(f*i+c)]/255*t];for(m.push([-1,0,s[4*(f*i+E)]/255*t]),m.push([-1,-1,s[4*(u*i+E)]/255*t]),m.push([0,-1,s[4*(u*i+c)]/255*t]),m.push([1,-1,s[4*(u*i+p)]/255*t]),m.push([1,0,s[4*(f*i+p)]/255*t]),m.push([1,1,s[4*(d*i+p)]/255*t]),m.push([0,1,s[4*(d*i+c)]/255*t]),m.push([-1,1,s[4*(d*i+E)]/255*t]),u=[],E=m.length,d=0;d<E;d++){p=m[d];var g=m[(d+1)%E];p=[p[0]-v[0],p[1]-v[1],p[2]-v[2]],g=[g[0]-v[0],g[1]-v[1],g[2]-v[2]];u.push(r([p[1]*g[2]-p[2]*g[1],p[2]*g[0]-p[0]*g[2],p[0]*g[1]-p[1]*g[0]]))}for(m=[0,0,0],d=0;d<u.length;d++)m[0]=m[0]+u[d][0],m[1]=m[1]+u[d][1],m[2]=m[2]+u[d][2];m[0]=m[0]/u.length,m[1]=m[1]/u.length,m[2]=m[2]/u.length,h[v=4*(f*i+c)]=(m[0]+1)/2*255|0,h[v+1]=255*(m[1]+.5)|0,h[v+2]=255*m[2]|0,h[v+3]=255}return a.putImageData(l,0,0),o},generateDataTexture:function(e,t,r){for(var i=e*t,n=new Uint8Array(3*i),o=Math.floor(255*r.r),a=Math.floor(255*r.g),s=(r=Math.floor(255*r.b),0);s<i;s++)n[3*s]=o,n[3*s+1]=a,n[3*s+2]=r;return(e=new THREE.DataTexture(n,e,t,THREE.RGBFormat)).needsUpdate=!0,e}},THREE.SceneUtils={showHierarchy:function(e,t){THREE.SceneUtils.traverseHierarchy(e,function(e){e.visible=t})},traverseHierarchy:function(e,t){var r,i,n=e.children.length;for(i=0;i<n;i++)t(r=e.children[i]),THREE.SceneUtils.traverseHierarchy(r,t)},createMultiMaterialObject:function(e,t){var r,i=t.length,n=new THREE.Object3D;for(r=0;r<i;r++){var o=new THREE.Mesh(e,t[r]);n.add(o)}return n},cloneObject:function(e){var t;e instanceof THREE.Mesh?t=new THREE.Mesh(e.geometry,e.material):e instanceof THREE.Line?t=new THREE.Line(e.geometry,e.material,e.type):e instanceof THREE.Ribbon?t=new THREE.Ribbon(e.geometry,e.material):e instanceof THREE.ParticleSystem?(t=new THREE.ParticleSystem(e.geometry,e.material)).sortParticles=e.sortParticles:e instanceof THREE.Particle?t=new THREE.Particle(e.material):e instanceof THREE.Sprite?((t=new THREE.Sprite({})).color.copy(e.color),t.map=e.map,t.blending=e.blending,t.useScreenCoordinates=e.useScreenCoordinates,t.mergeWith3D=e.mergeWith3D,t.affectedByDistance=e.affectedByDistance,t.scaleByViewport=e.scaleByViewport,t.alignment=e.alignment,t.rotation3d.copy(e.rotation3d),t.rotation=e.rotation,t.opacity=e.opacity,t.uvOffset.copy(e.uvOffset),t.uvScale.copy(e.uvScale)):e instanceof THREE.LOD?t=new THREE.LOD:e instanceof THREE.Object3D&&(t=new THREE.Object3D),t.name=e.name,t.parent=e.parent,t.up.copy(e.up),t.position.copy(e.position),t.rotation instanceof THREE.Vector3&&t.rotation.copy(e.rotation),t.eulerOrder=e.eulerOrder,t.scale.copy(e.scale),t.dynamic=e.dynamic,t.doubleSided=e.doubleSided,t.flipSided=e.flipSided,t.renderDepth=e.renderDepth,t.rotationAutoUpdate=e.rotationAutoUpdate,t.matrix.copy(e.matrix),t.matrixWorld.copy(e.matrixWorld),t.matrixRotationWorld.copy(e.matrixRotationWorld),t.matrixAutoUpdate=e.matrixAutoUpdate,t.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,t.quaternion.copy(e.quaternion),t.useQuaternion=e.useQuaternion,t.boundRadius=e.boundRadius,t.boundRadiusScale=e.boundRadiusScale,t.visible=e.visible,t.castShadow=e.castShadow,t.receiveShadow=e.receiveShadow,t.frustumCulled=e.frustumCulled;for(var r=0;r<e.children.length;r++){var i=THREE.SceneUtils.cloneObject(e.children[r]);t.children[r]=i,i.parent=t}if(e instanceof THREE.LOD)for(r=0;r<e.LODs.length;r++)t.LODs[r]={visibleAtDistance:e.LODs[r].visibleAtDistance,object3D:t.children[r]};return t},detach:function(e,t,r){e.applyMatrix(t.matrixWorld),t.remove(e),r.add(e)},attach:function(e,t,r){var i=new THREE.Matrix4;i.getInverse(r.matrixWorld),e.applyMatrix(i),t.remove(e),r.add(e)}},THREE.WebGLRenderer&&(THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tCube:{type:"t",value:1,texture:null},tNormal:{type:"t",value:2,texture:null},tSpecular:{type:"t",value:3,texture:null},tAO:{type:"t",value:4,texture:null},tDisplacement:{type:"t",value:5,texture:null},uNormalScale:{type:"f",value:1},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform float uNormalScale;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec3 pointVector = normalize( vPointLight[ i ].xyz );\nfloat pointDistance = vPointLight[ i ].w;\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor) + totalSpecular;\nif ( enableReflection ) {\nvec3 wPos = cameraPosition - vViewPosition;\nvec3 vReflect = reflect( normalize( wPos ), normal );\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvViewPosition = -mvPosition.xyz;\nvNormal = normalMatrix * normal;\nvTangent = normalMatrix * tangent.xyz;\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvUv = uv * uRepeat + uOffset;\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( normalize( vNormal.xyz ) * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:1,texture:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );\n}"}}}),THREE.BufferGeometry=function(){this.id=THREE.GeometryCount++,this.vertexColorArray=this.vertexUvArray=this.vertexNormalArray=this.vertexPositionArray=this.vertexIndexArray=this.vertexColorBuffer=this.vertexUvBuffer=this.vertexNormalBuffer=this.vertexPositionBuffer=this.vertexIndexBuffer=null,this.dynamic=!1,this.boundingSphere=this.boundingBox=null,this.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,computeBoundingBox:function(){},computeBoundingSphere:function(){}},THREE.CubeGeometry=function(e,t,r,i,n,o,a,s){function l(e,t,r,a,s,l,h,c){var f,u=i||1,d=n||1,E=s/2,m=l/2,v=p.vertices.length;"x"===e&&"y"===t||"y"===e&&"x"===t?f="z":"x"===e&&"z"===t||"z"===e&&"x"===t?(f="y",d=o||1):("z"===e&&"y"===t||"y"===e&&"z"===t)&&(f="x",u=o||1);var g=u+1,T=d+1,R=s/u,y=l/d,x=new THREE.Vector3;for(x[f]=h>0?1:-1,s=0;s<T;s++)for(l=0;l<g;l++){var _=new THREE.Vector3;_[e]=(l*R-E)*r,_[t]=(s*y-m)*a,_[f]=h,p.vertices.push(_)}for(s=0;s<d;s++)for(l=0;l<u;l++)(e=new THREE.Face4(l+g*s+v,l+g*(s+1)+v,l+1+g*(s+1)+v,l+1+g*s+v)).normal.copy(x),e.vertexNormals.push(x.clone(),x.clone(),x.clone(),x.clone()),e.materialIndex=c,p.faces.push(e),p.faceVertexUvs[0].push([new THREE.UV(l/u,s/d),new THREE.UV(l/u,(s+1)/d),new THREE.UV((l+1)/u,(s+1)/d),new THREE.UV((l+1)/u,s/d)])}THREE.Geometry.call(this);var h,c,f,u,d,E,p=this,m=e/2,v=t/2,g=r/2;if(void 0!==a){if(a instanceof Array)this.materials=a;else for(this.materials=[],h=0;h<6;h++)this.materials.push(a);h=0,u=1,c=2,d=3,f=4,E=5}else this.materials=[];if(this.sides={px:!0,nx:!0,py:!0,ny:!0,pz:!0,nz:!0},null!=s)for(var T in s)void 0!==this.sides[T]&&(this.sides[T]=s[T]);this.sides.px&&l("z","y",-1,-1,r,t,m,h),this.sides.nx&&l("z","y",1,-1,r,t,-m,u),this.sides.py&&l("x","z",1,1,e,r,v,c),this.sides.ny&&l("x","z",1,-1,e,r,-v,d),this.sides.pz&&l("x","y",1,-1,e,t,g,f),this.sides.nz&&l("x","y",-1,-1,e,t,-g,E),this.computeCentroids(),this.mergeVertices()},THREE.CubeGeometry.prototype=new THREE.Geometry,THREE.CubeGeometry.prototype.constructor=THREE.CubeGeometry,THREE.CylinderGeometry=function(e,t,r,i,n,o){THREE.Geometry.call(this);e=void 0!==e?e:20,t=void 0!==t?t:20;var a,s,l=(r=void 0!==r?r:100)/2,h=(i=i||8,n=n||1,[]),c=[];for(s=0;s<=n;s++){var f=[],u=[],d=(p=s/n)*(t-e)+e;for(a=0;a<=i;a++){var E=a/i;(m=new THREE.Vector3).x=d*Math.sin(E*Math.PI*2),m.y=-p*r+l,m.z=d*Math.cos(E*Math.PI*2),this.vertices.push(m),f.push(this.vertices.length-1),u.push(new THREE.UV(E,p))}h.push(f),c.push(u)}for(r=(t-e)/r,a=0;a<i;a++)for(0!==e?(f=this.vertices[h[0][a]].clone(),u=this.vertices[h[0][a+1]].clone()):(f=this.vertices[h[1][a]].clone(),u=this.vertices[h[1][a+1]].clone()),f.setY(Math.sqrt(f.x*f.x+f.z*f.z)*r).normalize(),u.setY(Math.sqrt(u.x*u.x+u.z*u.z)*r).normalize(),s=0;s<n;s++){var p=h[s][a],m=(d=h[s+1][a],E=h[s+1][a+1],h[s][a+1]),v=f.clone(),g=f.clone(),T=u.clone(),R=u.clone(),y=c[s][a].clone(),x=c[s+1][a].clone(),_=c[s+1][a+1].clone(),H=c[s][a+1].clone();this.faces.push(new THREE.Face4(p,d,E,m,[v,g,T,R])),this.faceVertexUvs[0].push([y,x,_,H])}if(!o&&e>0)for(this.vertices.push(new THREE.Vector3(0,l,0)),a=0;a<i;a++)p=h[0][a],d=h[0][a+1],E=this.vertices.length-1,v=new THREE.Vector3(0,1,0),g=new THREE.Vector3(0,1,0),T=new THREE.Vector3(0,1,0),y=c[0][a].clone(),x=c[0][a+1].clone(),_=new THREE.UV(x.u,0),this.faces.push(new THREE.Face3(p,d,E,[v,g,T])),this.faceVertexUvs[0].push([y,x,_]);if(!o&&t>0)for(this.vertices.push(new THREE.Vector3(0,-l,0)),a=0;a<i;a++)p=h[s][a+1],d=h[s][a],E=this.vertices.length-1,v=new THREE.Vector3(0,-1,0),g=new THREE.Vector3(0,-1,0),T=new THREE.Vector3(0,-1,0),y=c[s][a+1].clone(),x=c[s][a].clone(),_=new THREE.UV(x.u,1),this.faces.push(new THREE.Face3(p,d,E,[v,g,T])),this.faceVertexUvs[0].push([y,x,_]);this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=new THREE.Geometry,THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry,THREE.PlaneGeometry=function(e,t,r,i){THREE.Geometry.call(this);var n=e/2,o=t/2,a=(r=r||1)+1,s=(i=i||1)+1,l=e/r,h=t/i,c=new THREE.Vector3(0,1,0);for(e=0;e<s;e++)for(t=0;t<a;t++)this.vertices.push(new THREE.Vector3(t*l-n,0,e*h-o));for(e=0;e<i;e++)for(t=0;t<r;t++)(n=new THREE.Face4(t+a*e,t+a*(e+1),t+1+a*(e+1),t+1+a*e)).normal.copy(c),n.vertexNormals.push(c.clone(),c.clone(),c.clone(),c.clone()),this.faces.push(n),this.faceVertexUvs[0].push([new THREE.UV(t/r,e/i),new THREE.UV(t/r,(e+1)/i),new THREE.UV((t+1)/r,(e+1)/i),new THREE.UV((t+1)/r,e/i)]);this.computeCentroids()},THREE.PlaneGeometry.prototype=new THREE.Geometry,THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry,THREE.SphereGeometry=function(e,t,r,i,n,o,a){THREE.Geometry.call(this);e=e||50,i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI,o=void 0!==o?o:0,a=void 0!==a?a:Math.PI,t=Math.max(3,Math.floor(t)||8),r=Math.max(2,Math.floor(r)||6);var s,l,h=[],c=[];for(l=0;l<=r;l++){var f=[],u=[];for(s=0;s<=t;s++){var d=s/t,E=l/r;(p=new THREE.Vector3).x=-e*Math.cos(i+d*n)*Math.sin(o+E*a),p.y=e*Math.cos(o+E*a),p.z=e*Math.sin(i+d*n)*Math.sin(o+E*a),this.vertices.push(p),f.push(this.vertices.length-1),u.push(new THREE.UV(d,E))}h.push(f),c.push(u)}for(l=0;l<r;l++)for(s=0;s<t;s++){i=h[l][s+1],n=h[l][s],o=h[l+1][s],a=h[l+1][s+1],f=this.vertices[i].clone().normalize(),u=this.vertices[n].clone().normalize(),d=this.vertices[o].clone().normalize(),E=this.vertices[a].clone().normalize();var p=c[l][s+1].clone(),m=c[l][s].clone(),v=c[l+1][s].clone(),g=c[l+1][s+1].clone();Math.abs(this.vertices[i].y)==e?(this.faces.push(new THREE.Face3(i,o,a,[f,d,E])),this.faceVertexUvs[0].push([p,v,g])):Math.abs(this.vertices[o].y)==e?(this.faces.push(new THREE.Face3(i,n,o,[f,u,d])),this.faceVertexUvs[0].push([p,m,v])):(this.faces.push(new THREE.Face4(i,n,o,a,[f,u,d,E])),this.faceVertexUvs[0].push([p,m,v,g]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere={radius:e}},THREE.SphereGeometry.prototype=new THREE.Geometry,THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry,THREE.PolyhedronGeometry=function(e,t,r,i){function n(e){var t=e.normalize().clone();t.index=l.vertices.push(t)-1;var r=Math.atan2(e.z,-e.x)/2/Math.PI+.5;e=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5;return t.uv=new THREE.UV(r,e),t}function o(e,t,r,i){i<1?((i=new THREE.Face3(e.index,t.index,r.index,[e.clone(),t.clone(),r.clone()])).centroid.addSelf(e).addSelf(t).addSelf(r).divideScalar(3),i.normal=i.centroid.clone().normalize(),l.faces.push(i),i=Math.atan2(i.centroid.z,-i.centroid.x),l.faceVertexUvs[0].push([s(e.uv,e,i),s(t.uv,t,i),s(r.uv,r,i)])):(i-=1,o(e,a(e,t),a(e,r),i),o(a(e,t),t,a(t,r),i),o(a(e,r),a(t,r),r,i),o(a(e,t),a(t,r),a(e,r),i))}function a(e,t){f[e.index]||(f[e.index]=[]),f[t.index]||(f[t.index]=[]);var r=f[e.index][t.index];return void 0===r&&(f[e.index][t.index]=f[t.index][e.index]=r=n((new THREE.Vector3).add(e,t).divideScalar(2))),r}function s(e,t,r){return r<0&&1===e.u&&(e=new THREE.UV(e.u-1,e.v)),0===t.x&&0===t.z&&(e=new THREE.UV(r/2/Math.PI+.5,e.v)),e}THREE.Geometry.call(this);r=r||1,i=i||0;for(var l=this,h=0,c=e.length;h<c;h++)n(new THREE.Vector3(e[h][0],e[h][1],e[h][2]));var f=[];for(e=this.vertices,h=0,c=t.length;h<c;h++)o(e[t[h][0]],e[t[h][1]],e[t[h][2]],i);for(this.mergeVertices(),h=0,c=this.vertices.length;h<c;h++)this.vertices[h].multiplyScalar(r);this.computeCentroids(),this.boundingSphere={radius:r}},THREE.PolyhedronGeometry.prototype=new THREE.Geometry,THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry,THREE.IcosahedronGeometry=function(e,t){var r=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,r,0],[1,r,0],[-1,-r,0],[1,-r,0],[0,-1,r],[0,1,r],[0,-1,-r],[0,1,-r],[r,0,-1],[r,0,1],[-r,0,-1],[-r,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],e,t)},THREE.IcosahedronGeometry.prototype=new THREE.Geometry,THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry}